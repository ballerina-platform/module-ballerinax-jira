openapi: 3.0.1
info:
  title: The Jira Cloud platform REST API
  description: Jira Cloud platform REST API documentation
  termsOfService: https://developer.atlassian.com/platform/marketplace/atlassian-developer-terms/
  contact:
    email: ecosystem@atlassian.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1001.0.0-SNAPSHOT-e2e3f38099261bb500217a742ea82f5528ab8db0
externalDocs:
  description: Find out more about Atlassian products and services.
  url: http://www.atlassian.com
servers:
- url: https://your-domain.atlassian.net/rest/api/3
tags:
- name: Announcement banner
  description: This resource represents an announcement banner. Use it to retrieve
    and update banner configuration.
- name: App data policies
  description: This resource represents app access rule data policies.
- name: App migration
  description: |-
    This resource supports [app migrations](https://developer.atlassian.com/platform/app-migration/). Use it to:
    - [to request migrated workflow rules details](https://developer.atlassian.com/platform/app-migration/tutorials/migration-app-workflow-rules/).
    - [perform bulk updates of entity properties](https://developer.atlassian.com/platform/app-migration/tutorials/entity-properties-bulk-api/).
    - [perform bulk updates of issue custom field values](https://developer.atlassian.com/platform/app-migration/tutorials/migrating-app-custom-fields/).
- name: App properties
  description: |-
    This resource represents app properties. Use it to store arbitrary data for your
    [Connect app](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps).
- name: Application roles
  description: This resource represents application roles. Use it to get details of
    an application role or all application roles.
- name: Audit records
  description: This resource represents audits that record activities undertaken in
    Jira. Use it to get a list of audit records.
- name: Avatars
  description: This resource represents system and custom avatars. Use it to obtain
    the details of system or custom avatars, add and remove avatars from a project,
    issue type or priority and obtain avatar images.
- name: Classification levels
  description: This resource represents classification levels.
- name: Dashboards
  description: This resource represents dashboards. Use it to obtain the details of
    dashboards as well as get, create, update, or remove item properties and gadgets
    from dashboards.
- name: Dynamic modules
  description: |-
    This resource represents [modules registered dynamically](https://developer.atlassian.com/cloud/jira/platform/dynamic-modules/)
    by [Connect apps](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps).
- name: Filter sharing
  description: This resource represents options for sharing [filters](#api-group-Filters).
    Use it to get share scopes as well as add and remove share scopes from filters.
- name: Filters
  description: This resource represents [filters](https://confluence.atlassian.com/x/eQiiLQ).
    Use it to get, create, update, or delete filters. Also use it to configure the
    columns for a filter and set favorite filters.
- name: Group and user picker
  description: This resource represents a list of users and a list of groups. Use
    it to obtain the details to populate user and group picker suggestions list.
- name: Groups
  description: This resource represents groups of users. Use it to get, create, find,
    and delete groups as well as add and remove users from groups. (\[WARNING\] The
    standard Atlassian group names are default names only and can be edited or deleted.
    For example, an admin or Atlassian support could delete the default group jira-software-users
    or rename it to jsw-users at any point. See https://support.atlassian.com/user-management/docs/create-and-update-groups/
    for details.)
- name: Issue attachments
  description: This resource represents issue attachments and the attachment settings
    for Jira. Use it to get the metadata for an attachment, delete an attachment,
    and view the metadata for the contents of an attachment. Also, use it to get the
    attachment settings for Jira.
- name: Issue bulk operations
  description: "This resource represents the issue bulk operations. Use it to move\
    \ multiple issues from one project to another project or edit fields of multiple\
    \ issues in one go.  \n\n\nFor additional clarity, we have created a page with\
    \ further examples and answers to frequently asked questions related to these\
    \ APIs. You can access it here: [Bulk operation APIs: additional examples and\
    \ FAQ](https://developer.atlassian.com/cloud/jira/platform/bulk-operation-additional-examples-and-faqs/).\n\
    \n### Authentication ###\n\nAccess to the issue bulk operations requires authentication.\
    \ For information on how to authenticate API requests, refer to the [Basic auth\
    \ for REST APIs documentation](https://developer.atlassian.com/cloud/jira/platform/basic-auth-for-rest-apis/).\n\
    \n### Rate limiting ###\n\nThe bulk edit and move APIs are subject to the usual\
    \ rate limiting infrastructure in Jira. For more information, refer to [Rate limiting](https://developer.atlassian.com/cloud/jira/platform/rate-limiting/).\
    \ Additionally, at any given time, only 5 concurrent requests can be sent across\
    \ all users."
- name: Issue comment properties
  description: This resource represents [issue comment](#api-group-Issue-comments)
    properties, which provides for storing custom data against an issue comment. Use
    is to get, set, and delete issue comment properties as well as obtain the keys
    of all properties on a comment. Comment properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
- name: Issue comments
  description: |-
    This resource represents issue comments. Use it to:

     *  get, create, update, and delete a comment from an issue.
     *  get all comments from issue.
     *  get a list of comments by comment ID.
- name: Issue custom field associations
  description: |-
    This resource represents the fields associated to project and issue type contexts. Use it to:

     *  assign custom field to projects and issue types.
- name: Issue custom field configuration (apps)
  description: This resource represents configurations stored against a custom field
    context by a [Forge app](https://developer.atlassian.com/platform/forge/). Configurations
    are information used by the Forge app at runtime to determine how to handle or
    process the data in a custom field in a given context. Use this resource to set
    and read configurations.
- name: Issue custom field contexts
  description: |-
    This resource represents issue custom field contexts. Use it to:

     *  get, create, update, and delete custom field contexts.
     *  get context to issue types and projects mappings.
     *  get custom field contexts for projects and issue types.
     *  assign custom field contexts to projects.
     *  remove custom field contexts from projects.
     *  add issue types to custom field contexts.
- name: Issue custom field options
  description: |-
    This resource represents custom issue field select list options created in Jira or using the REST API. This resource supports the following field types:

     *  Checkboxes.
     *  Radio Buttons.
     *  Select List (single choice).
     *  Select List (multiple choices).
     *  Select List (cascading).

    See [Issue custom field options (apps)](#api-group-Issue-custom-field-options--apps-) to manipulate custom issue field select list options created by a Connect app.

    Use it to retrieve, create, update, order, and delete custom field options.
- name: Issue custom field options (apps)
  description: |-
    This resource represents custom issue field select list options created by a Connect app. See [Issue custom field options](#api-group-Issue-custom-field-options) to manipulate options created in Jira or using the REST API.

    A select list issue field is a type of [issue field](https://developer.atlassian.com/cloud/jira/platform/modules/issue-field/) that enables a user to select an option from a list. Use it to add, remove, and update the options of a select list issue field.
- name: Issue custom field values (apps)
  description: This resource represents the values of custom fields added by [Forge
    apps](https://developer.atlassian.com/platform/forge/). Use it to update the value
    of a custom field on issues.
- name: Issue field configurations
  description: This resource represents issue field configurations. Use it to get,
    set, and delete field configurations and field configuration schemes.
- name: Issue fields
  description: This resource represents issue fields, both system and custom fields.
    Use it to get fields, field configurations, and create custom fields.
- name: Issue link types
  description: |-
    This resource represents [issue link](#api-group-Issue-links) types. Use it to get, create, update, and delete link issue types as well as get lists of all link issue types.

    To use it, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.
- name: Issue links
  description: |-
    This resource represents links between issues. Use it to get, create, and delete links between issues.

    To use it, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.
- name: Issue navigator settings
  description: This resource represents issue navigator settings. Use it to get and
    set issue navigator default columns.
- name: Issue notification schemes
  description: "This resource represents notification schemes, lists of events and\
    \ the recipients who will receive notifications for those events. Use it to get\
    \ details of a notification scheme and a list of notification schemes.\n\n###\
    \ About notification schemes ###\n\nA notification scheme is a list of events\
    \ and recipients who will receive notifications for those events. The list is\
    \ contained within the `notificationSchemeEvents` object and contains pairs of\
    \ `events` and `notifications`:\n\n *  `event` Identifies the type of event. The\
    \ events can be [Jira system events](https://support.atlassian.com/jira-cloud-administration/docs/configure-notification-schemes/)\
    \ (see the *Events* section) or [custom events](https://support.atlassian.com/jira-cloud-administration/docs/add-a-custom-event/).\n\
    \ *  `notifications` Identifies the [recipients](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-recipientsRecipients)\
    \ of notifications for each event. Recipients can be any of the following types:\n\
    \    \n     *  `CurrentAssignee`\n     *  `Reporter`\n     *  `CurrentUser`\n\
    \     *  `ProjectLead`\n     *  `ComponentLead`\n     *  `User` (the `parameter`\
    \ is the user key)\n     *  `Group` (the `parameter` is the group name)\n    \
    \ *  `ProjectRole` (the `parameter` is the project role ID)\n     *  `EmailAddress`\
    \ *(deprecated)*\n     *  `AllWatchers`\n     *  `UserCustomField` (the `parameter`\
    \ is the ID of the custom field)\n     *  `GroupCustomField`(the `parameter` is\
    \ the ID of the custom field)"
- name: Issue priorities
  description: This resource represents issue priorities. Use it to get, create and
    update issue priorities and details for individual issue priorities.
- name: Issue properties
  description: This resource represents [issue](#api-group-Issues) properties, which
    provides for storing custom data against an issue. Use it to get, set, and delete
    issue properties as well as obtain details of all properties on an issue. Operations
    to bulk update and delete issue properties are also provided. Issue properties
    are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
- name: Issue redaction
  description: This resource represents Issue Redaction. Provides APIs to redact issue
    data.
- name: Issue remote links
  description: This resource represents remote issue links, a way of linking Jira
    to information in other systems. Use it to get, create, update, and delete remote
    issue links either by ID or global ID. The global ID provides a way of accessing
    remote issue links using information about the item's remote system host and remote
    system identifier.
- name: Issue resolutions
  description: This resource represents issue resolution values. Use it to obtain
    a list of all issue resolution values and the details of individual resolution
    values.
- name: Issue search
  description: This resource represents various ways to search for issues. Use it
    to search for issues with a JQL query and find issues to populate an issue picker.
- name: Issue security level
  description: This resource represents issue security levels. Use it to obtain the
    details of any issue security level. For more information about issue security
    levels, see [Configuring issue-level security](https://confluence.atlassian.com/x/J4lKLg).
- name: Issue security scheme
  description: |-
    This resource represents issue security schemes, issue security levels, and issue security level members. Use it to get, create, update, and delete issue security schemes or issue security scheme details. Note that only company-managed (classic) projects are supported.

    ### About issue security schemes ###

    Issue security schemes control which users or groups of users can view an issue. An issue security scheme is made up of multiple security levels. Each level can have users or groups of users assigned to it. The following are valid security level members:

     *  Individual users
     *  Groups of users
     *  Project roles
     *  Issue roles
     *  "Anyone", for example to allow anonymous access
     *  A (multi-)user or (multi-)group picker custom field
- name: Issue security schemes
  description: |-
    This resource represents issue security schemes. Use it to get an issue security scheme or a list of issue security schemes.

    Issue security schemes control which users or groups of users can view an issue. When an issue security scheme is associated with a project, its security levels can be applied to issues in that project. Sub-tasks also inherit the security level of their parent issue.
- name: Issue type properties
  description: This resource represents [issue type](#api-group-Issue-types) properties,
    which provides for storing custom data against an issue type. Use it to get, create,
    and delete issue type properties as well as obtain the keys of all properties
    on a issues type. Issue type properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
- name: Issue type schemes
  description: |-
    This resource represents issue type schemes in classic projects. Use it to:

     *  get issue type schemes and a list of the projects that use them.
     *  associate issue type schemes with projects.
     *  add issue types to issue type schemes.
     *  delete issue types from issue type schemes.
     *  create, update, and delete issue type schemes.
     *  change the order of issue types in issue type schemes.
- name: Issue type screen schemes
  description: |-
    This resource represents issue type screen schemes. Use it to:

     *  get issue type screen schemes and a list of the projects that use them.
     *  create issue type screen schemes.
     *  update issue type screen schemes.
     *  delete issue type screen schemes.
     *  associate issue type screen schemes with projects.
     *  append issue type to screen scheme mappings to issue type screen schemes.
     *  remove issue type to screen scheme mappings from issue type screen schemes.
     *  update default screen scheme of issue type screen scheme.
- name: Issue types
  description: |-
    This resource represents issues types. Use it to:

     *  get, create, update, and delete issue types.
     *  get all issue types for a user.
     *  get alternative issue types.
     *  set an avatar for an issue type.
- name: Issue votes
  description: This resource represents votes cast by users on an issue. Use it to
    get details of votes on an issue as well as cast and withdrawal votes.
- name: Issue watchers
  description: This resource represents users watching an issue. Use it to get details
    of users watching an issue as well as start and stop a user watching an issue.
- name: Issue worklog properties
  description: This resource represents [issue worklog](#api-group-Issue-worklogs)
    properties, which provides for storing custom data against an issue worklog. Use
    it to get, create, and delete issue worklog properties as well as obtain the keys
    of all properties on a issue worklog. Issue worklog properties are a type of [entity
    property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
- name: Issue worklogs
  description: |-
    This resource represents issue worklogs. Use it to:

     *  get, create, update, and delete worklogs.
     *  obtain lists of updated or deleted worklogs.
- name: Issues
  description: |-
    This resource represents Jira issues. Use it to:

     *  create or edit issues, individually or in bulk.
     *  retrieve metadata about the options for creating or editing issues.
     *  delete an issue.
     *  assign a user to an issue.
     *  get issue changelogs.
     *  send notifications about an issue.
     *  get details of the transitions available for an issue.
     *  transition an issue.
     *  Archive issues.
     *  Unarchive issues.
     *  Export archived issues.
- name: JQL
  description: |-
    This resource represents JQL search auto-complete details. Use it to obtain JQL search auto-complete data and suggestions for use in programmatic construction of queries or custom query builders. It also provides operations to:

     *  convert one or more JQL queries with user identifiers (username or user key) to equivalent JQL queries with account IDs.
     *  convert readable details in one or more JQL queries to IDs where a user doesn't have permission to view the entity whose details are readable.
- name: JQL functions (apps)
  description: This resource represents JQL function's precomputations. Precomputation
    is a mapping between custom function call and JQL fragment returned by this function.
    Use it to get and update precomputations.
- name: Jira expressions
  description: This resource is a collection of operations for [Jira expressions](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).
- name: Jira settings
  description: This resource represents various settings in Jira. Use it to get and
    update Jira settings and properties.
- name: Labels
  description: This resource represents available labels. Use it to get available
    labels for the global label field.
- name: License metrics
  description: This resource represents license metrics. Use it to get available metrics
    for Jira licences.
- name: Myself
  description: This resource represents information about the current user, such as
    basic details, group membership, application roles, preferences, and locale. Use
    it to get, create, update, and delete (restore default) values of the user's preferences
    and locale.
- name: Permission schemes
  description: This resource represents permission schemes. Use it to get, create,
    update, and delete permission schemes as well as get, create, update, and delete
    details of the permissions granted in those schemes.
- name: Permissions
  description: This resource represents permissions. Use it to obtain details of all
    permissions and determine whether the user has certain permissions.
- name: Plans
  description: This resource represents plans. Use it to get, create, duplicate, update,
    trash and archive plans.
- name: Priority schemes
  description: This resource represents issue priority schemes. Use it to get priority
    schemes and related information, and to create, update and delete priority schemes.
- name: Project avatars
  description: This resource represents avatars associated with a project. Use it
    to get, load, set, and remove project avatars.
- name: Project categories
  description: This resource represents project categories. Use it to create, update,
    and delete project categories as well as obtain a list of all project categories
    and details of individual categories. For more information on managing project
    categories, see [Adding, assigning, and deleting project categories](https://confluence.atlassian.com/x/-A5WMg).
- name: Project classification levels
  description: This resource represents classification levels used in a project. Use
    it to view and manage classification levels in your projects.
- name: Project components
  description: This resource represents project components. Use it to get, create,
    update, and delete project components. Also get components for project and get
    a count of issues by component.
- name: Project email
  description: This resource represents the email address used to send a project's
    notifications. Use it to get and set the [project's sender email address](https://confluence.atlassian.com/x/dolKLg).
- name: Project features
  description: This resource represents project features. Use it to get the list of
    features for a project and modify the state of a feature. The project feature
    endpoint is available only for Jira Software, both for team- and company-managed
    projects.
- name: Project key and name validation
  description: This resource provides validation for project keys and names.
- name: Project permission schemes
  description: |-
    This resource represents permission schemes for a project. Use this resource to:

     *  get details of a project's issue security levels available to the calling user.
     *  get the permission scheme associated with the project or assign different permission scheme to the project.
     *  get details of a project's issue security scheme.

    See [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for more information about permission schemes.
- name: Project properties
  description: This resource represents [project](#api-group-Projects) properties,
    which provides for storing custom data against a project. Use it to get, create,
    and delete project properties as well as get a list of property keys for a project.
    Project properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
- name: Project role actors
  description: This resource represents the users assigned to [project roles](#api-group-Issue-comments).
    Use it to get, add, and remove default users from project roles. Also use it to
    add and remove users from a project role associated with a project.
- name: Project roles
  description: This resource represents the roles that users can play in projects.
    Use this resource to get, create, update, and delete project roles.
- name: Project templates
  description: This resource represents project templates. Use it to create a new
    project from a custom template.
- name: Project types
  description: This resource represents project types. Use it to obtain a list of
    all project types, a list of project types accessible to the calling user, and
    details of a project type.
- name: Project versions
  description: This resource represents project versions. Use it to get, get lists
    of, create, update, move, merge, and delete project versions. This resource also
    provides counts of issues by version.
- name: Projects
  description: This resource represents projects. Use it to get, create, update, and
    delete projects. Also get statuses available to a project, a project's notification
    schemes, and update a project's type.
- name: Screen schemes
  description: This resource represents screen schemes in classic projects. Use it
    to get, create, update, and delete screen schemes.
- name: Screen tab fields
  description: This resource represents the screen tab fields used to record issue
    details. Use it to get, add, move, and remove fields from screen tabs.
- name: Screen tabs
  description: This resource represents the screen tabs used to record issue details.
    Use it to get, create, update, move, and delete screen tabs.
- name: Screens
  description: |-
    This resource represents the screens used to record issue details. Use it to:

     *  get details of all screens.
     *  get details of all the fields available for use on screens.
     *  create screens.
     *  delete screens.
     *  update screens.
     *  add a field to the default screen.
- name: Server info
  description: This resource provides information about the Jira instance.
- name: Service Registry
  description: This resource represents a service registry. Use it to retrieve attributes
    related to a [service registry](https://support.atlassian.com/jira-service-management-cloud/docs/what-is-services/)
    in JSM.
- name: Status
  description: This resource represents statuses. Use it to search, get, create, delete,
    and change statuses.
- name: Tasks
  description: This resource represents a [long-running asynchronous tasks](#async-operations).
    Use it to obtain details about the progress of a long-running task or cancel a
    long-running task.
- name: Teams in plan
  description: This resource represents planning settings for plan-only and Atlassian
    teams in a plan. Use it to get, create, update and delete planning settings.
- name: Time tracking
  description: This resource represents time tracking and time tracking providers.
    Use it to get and set the time tracking provider, get and set the time tracking
    options, and disable time tracking.
- name: UI modifications (apps)
  description: 'UI modifications is a feature available for **Forge apps only**. It
    enables Forge apps to control how selected Jira fields behave on the following
    views: global issue create, issue view, issue transition. For example: hide specific
    fields, set them as required, etc.'
- name: User properties
  description: |-
    This resource represents [user](#api-group-Users) properties and provides for storing custom data against a user. Use it to get, create, and delete user properties as well as get a list of property keys for a user. This resourse is designed for integrations and apps to store per-user data and settings. This enables data used to customized the user experience to be kept in the Jira Cloud instance's database. User properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).

    This resource does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.
- name: User search
  description: This resource represents various ways to search for and find users.
    Use it to obtain list of users including users assignable to projects and issues,
    users with permissions, user lists for pickup fields, and user lists generated
    using structured queries. Note that the operations in this resource only return
    users found within the first 1000 users.
- name: Users
  description: |-
    This resource represent users. Use it to:

     *  get, get a list of, create, and delete users.
     *  get, set, and reset a user's default issue table columns.
     *  get a list of the groups the user belongs to.
     *  get a list of user account IDs for a list of usernames or user keys.
- name: Webhooks
  description: This resource represents webhooks. Webhooks are calls sent to a URL
    when an event occurs in Jira for issues specified by a JQL query. Only Connect
    and OAuth 2.0 apps can register and manage webhooks. For more information, see
    [Webhooks](https://developer.atlassian.com/cloud/jira/platform/webhooks/#registering-a-webhook-via-the-jira-rest-api-for-connect-apps).
- name: Workflow scheme drafts
  description: |-
    This resource represents draft workflow schemes. Use it to manage drafts of workflow schemes.

    A workflow scheme maps issue types to workflows. A workflow scheme can be associated with one or more projects, which enables the projects to use the workflow-issue type mappings.

    Active workflow schemes (workflow schemes that are used by projects) cannot be edited. Editing an active workflow scheme creates a draft copy of the scheme. The draft workflow scheme can then be edited and published (replacing the active scheme).

    See [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg) for more information.
- name: Workflow scheme project associations
  description: |-
    This resource represents the associations between workflow schemes and projects.

    For more information, see [Managing your workflows](https://confluence.atlassian.com/x/q4hKLg).
- name: Workflow schemes
  description: |-
    This resource represents workflow schemes. Use it to manage workflow schemes and the workflow scheme's workflows and issue types.

    A workflow scheme maps issue types to workflows. A workflow scheme can be associated with one or more projects, which enables the projects to use the workflow-issue type mappings.

    Active workflow schemes (workflow schemes that are used by projects) cannot be edited. When an active workflow scheme is edited, a draft copy of the scheme is created. The draft workflow scheme is then be edited and published (replacing the active scheme).

    See [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg) for more information.
- name: Workflow status categories
  description: This resource represents status categories. Use it to obtain a list
    of all status categories and the details of a category. Status categories provided
    a mechanism for categorizing [statuses](#api-group-Workflow-statuses).
- name: Workflow statuses
  description: This resource represents issue workflow statuses. Use it to obtain
    a list of all statuses associated with workflows and the details of a status.
- name: Workflow transition properties
  description: This resource represents workflow transition properties, which provides
    for storing custom data against a workflow transition. Use it to get, create,
    and delete workflow transition properties as well as get a list of property keys
    for a workflow transition. Workflow transition properties are a type of [entity
    property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).
- name: Workflow transition rules
  description: This resource represents workflow transition rules. Workflow transition
    rules define a Connect or a Forge app routine, such as a [workflow post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)
    that is executed in association with the workflow. Use it to read and modify configuration
    of workflow transition rules.
- name: Workflows
  description: |-
    This resource represents workflows. Use it to:

     *  Get workflows
     *  Create workflows
     *  Update workflows
     *  Delete inactive workflows
     *  Get workflow capabilities
paths:
  /issuetypescreenscheme:
    get:
      tags:
      - Issue type screen schemes
      summary: Get issue type screen schemes
      description: |-
        Returns a [paginated](#pagination) list of issue type screen schemes.

        Only issue type screen schemes used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueTypeScreenSchemes
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: id
        in: query
        description: The list of issue type screen scheme IDs. To include multiple
          IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: queryString
        in: query
        description: String used to perform a case-insensitive partial match with
          issue type screen scheme name
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `name` Sorts by issue type screen scheme name.
           *  `id` Sorts by issue type screen scheme ID
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - -name
          - +name
          - id
          - -id
          - +id
          default: id
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information in
          the response. This parameter accepts `projects` that, for each issue type
          screen schemes, returns information about the projects the issue type screen
          scheme is assigned to
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueTypeScreenScheme'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":2,"values":[{"id":"1","name":"Default
                Issue Type Screen Scheme","description":"The default issue type screen
                scheme"},{"id":"10000","name":"Office issue type screen scheme","description":"Managing
                office projects","projects":{"isLast":true,"maxResults":100,"startAt":0,"total":1,"values":[{"avatarUrls":{"16x16":"secure/projectavatar?size=xsmall&pid=10000","24x24":"secure/projectavatar?size=small&pid=10000","32x32":"secure/projectavatar?size=medium&pid=10000","48x48":"secure/projectavatar?size=large&pid=10000"},"id":"10000","key":"EX","name":"Example","projectCategory":{"description":"Project
                category description","id":"10000","name":"A project category"},"projectTypeKey":"ProjectTypeKey{key=''software''}","self":"project/EX","simplified":false}]}}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Issue type screen schemes
      summary: Create issue type screen scheme
      description: |-
        Creates an issue type screen scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createIssueTypeScreenScheme
      parameters: [
        ]
      requestBody:
        description: An issue type screen scheme bean
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeScreenSchemeDetails'
            example:
              issueTypeMappings:
              - issueTypeId: default
                screenSchemeId: '10001'
              - issueTypeId: '10001'
                screenSchemeId: '10002'
              - issueTypeId: '10002'
                screenSchemeId: '10002'
              name: Scrum issue type screen scheme
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTypeScreenSchemeId'
              example: '{"id":"10001"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["One or more issue type IDs are repeated,
                an issue type ID can only be specified once."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type screen schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type or screen scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["One or more issue type IDs were not found."],"errors":{}}'
        '409':
          description: Returned if the issue type is a sub-task, but sub-tasks are
            disabled in Jira settings.
          content:
            application/json:
              example: '{"errorMessages":["Sub-tasks are disabled in Jira. At least
                one of the issue types is a sub-task."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /user/picker:
    get:
      tags:
      - User search
      summary: Find users for picker
      description: |-
        Returns a list of users whose attributes match the query term. The returned object includes the `html` field where the matched query term is highlighted with the HTML strong tag. A list of account IDs can be provided to exclude users from the results.

        This operation takes the users in the range defined by `maxResults`, up to the thousandth user, and then returns only the users from that range that match the query term. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the query term, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.

        Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls and calls by users without the required permission return search results for an exact name match only.
      operationId: findUsersForPicker
      parameters:
      - name: query
        in: query
        description: A query string that is matched against user attributes, such
          as `displayName`, and `emailAddress`, to find relevant users. The string
          can match the prefix of the attribute's value. For example, *query=john*
          matches a user with a `displayName` of *John Smith* and a user with an `emailAddress`
          of *johnson@example.com*
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of items to return. The total number of matched
          users is returned in `total`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: showAvatar
        in: query
        description: Include the URI to the user's avatar
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: exclude
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: excludeAccountIds
        in: query
        description: A list of account IDs to exclude from the search results. This
          parameter accepts a comma-separated list. Multiple account IDs can also
          be provided using an ampersand-separated list. For example, `excludeAccountIds=5b10a2844c20165700ede21g,5b10a0effa615349cb016cd8&excludeAccountIds=5b10ac8d82e05b22cc7d4ef5`.
          Cannot be provided with `exclude`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: avatarSize
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: excludeConnectUsers
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoundUsers'
              example: '{"header":"Showing 20 of 25 matching groups","total":25,"users":[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","avatarUrl":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","displayName":"Mia
                Krystof","html":"<strong>Mi</strong>a Krystof - <strong>mi</strong>a@example.com
                (<strong>mi</strong>a)","key":"mia","name":"mia"}]}'
        '400':
          description: Returned if `exclude` and `excludeAccountIds` are provided.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '429':
          description: Returned if the rate limit is exceeded. User search endpoints
            share a collective rate limit for the tenant, in addition to Jira's normal
            rate limiting you may receive a rate limit for user search. Please respect
            the Retry-After header.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /application-properties:
    get:
      tags:
      - Jira settings
      summary: Get application property
      description: |-
        Returns all application properties or an application property.

        If you specify a value for the `key` parameter, then an application property is returned as an object (not in an array). Otherwise, an array of all editable application properties is returned. See [Set application property](#api-rest-api-3-application-properties-id-put) for descriptions of editable properties.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getApplicationProperty
      parameters:
      - name: key
        in: query
        description: The key of the application property
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: permissionLevel
        in: query
        description: The permission level of all items being returned in the list
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: keyFilter
        in: query
        description: When a `key` isn't provided, this filters the list of results
          by the application property `key` using a regular expression. For example,
          using `jira.lf.*` will return all application properties with keys that
          start with *jira.lf.*
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationProperty'
              example: '[{"defaultValue":"","desc":"Jira home directory","id":"jira.home","key":"jira.home","name":"jira.home","type":"string","value":"/var/jira/jira-home"},{"defaultValue":"CLONE
                -","id":"jira.clone.prefix","key":"jira.clone.prefix","name":"The
                prefix added to the Summary field of cloned issues","type":"string","value":"CLONE
                -"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the application property is not found or the user
            does not have permission to view it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:instance-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /projectvalidate/validProjectName:
    get:
      tags:
      - Project key and name validation
      summary: Get valid project name
      description: |-
        Checks that a project name isn't in use. If the name isn't in use, the passed string is returned. If the name is in use, this operation attempts to generate a valid project name based on the one supplied, usually by adding a sequence number. If a valid project name cannot be generated, a 404 response is returned.

        **[Permissions](#permissions) required:** None.
      operationId: getValidProjectName
      parameters:
      - name: name
        in: query
        description: The project name
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: string
              example: '"Valid Project Name Example"'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if a valid project name cannot be generated.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /workflowscheme/{id}/createdraft:
    post:
      tags:
      - Workflow scheme drafts
      summary: Create draft workflow scheme
      description: |-
        Create a draft workflow scheme from an active workflow scheme, by copying the active workflow scheme. Note that an active workflow scheme can only have one draft workflow scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createWorkflowSchemeDraftFromParent
      parameters:
      - name: id
        in: path
        description: The ID of the active workflow scheme that the draft is created
          from
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"scrum workflow","description":"The description
                of the example workflow scheme.","draft":true,"id":17218781,"issueTypeMappings":{"10000":"jira","10001":"jira"},"lastModified":"Today
                6:38 PM","lastModifiedUser":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"name":"Example
                workflow scheme","originalDefaultWorkflow":"jira","originalIssueTypeMappings":{"10001":"builds
                workflow"},"self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        - read:issue-security-level:jira
        - read:project-role:jira
        - read:screen:jira
        - read:status:jira
        - read:user:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        - write:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/{projectId}/email:
    get:
      tags:
      - Project email
      summary: Get project's sender email
      description: |-
        Returns the [project's sender email address](https://confluence.atlassian.com/x/dolKLg).

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectEmail
      parameters:
      - name: projectId
        in: path
        description: The project ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEmailAddress'
              example: '{"emailAddress":"jira@example.customdomain.com","emailAddressStatus":["Email
                address or domain not verified."]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to read project.
        '404':
          description: Returned if the project or project's sender email address is
            not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project.email:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Project email
      summary: Set project's sender email
      description: |-
        Sets the [project's sender email address](https://confluence.atlassian.com/x/dolKLg).

        If `emailAddress` is an empty string, the default email address is restored.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
      operationId: updateProjectEmail
      parameters:
      - name: projectId
        in: path
        description: The project ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The project's sender email address to be set
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectEmailAddress'
            example:
              emailAddress: jira@example.atlassian.net
        required: true
      responses:
        '204':
          description: Returned if the project's sender email address is successfully
            set
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid, if the email address
            is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to administer
            the project.
        '404':
          description: Returned if the project is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project.email:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /bulk/issues/watch:
    post:
      tags:
      - Issue bulk operations
      summary: Bulk watch issues
      description: |-
        Use this API to submit a bulk watch request. You can watch up to 1,000 issues in a single operation.

        **[Permissions](#permissions) required:**

         *  Global bulk change [permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-global-permissions/).
         *  Browse [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) in all projects that contain the selected issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: submitBulkWatch
      parameters: [
        ]
      requestBody:
        description: The request body containing the issues to be watched
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueBulkWatchOrUnwatchPayload'
            example:
              selectedIssueIdsOrKeys:
              - '10001'
              - '10002'
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedBulkOperation'
              example: '{"taskId":"10641"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
              example: '{"errors":[{"message":"Some of the issues in the issueIdsOrKeys
                are not valid"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /resolution/default:
    put:
      tags:
      - Issue resolutions
      summary: Set default resolution
      description: |-
        Sets default issue resolution.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setDefaultResolution
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDefaultResolutionRequest'
            example:
              id: '3'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The id has to be provided."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue resolution isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Priority with ID 10000 not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /field/{fieldKey}/option/{optionId}:
    get:
      tags:
      - Issue custom field options (apps)
      summary: Get issue field option
      description: |-
        Returns an option from a select list issue field.

        Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
      operationId: getIssueFieldOption
      parameters:
      - name: fieldKey
        in: path
        description: |-
          The field key is specified in the following format: **$(app-key)\_\_$(field-key)**. For example, *example-add-on\_\_example-issue-field*. To determine the `fieldKey` value, do one of the following:

           *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
           *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: optionId
        in: path
        description: The ID of the option to be returned
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the requested option is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueFieldOption'
              example: '{"id":1,"value":"Team 1","properties":{"leader":{"name":"Leader
                Name","email":"lname@example.com"},"members":42,"description":"The
                team''s description","founded":"2016-06-06"},"config":{"scope":{"projects":[],"projects2":[{"id":1001,"attributes":["notSelectable"]},{"id":1002,"attributes":["notSelectable"]}],"global":{}},"attributes":[]}}'
        '400':
          description: Returned if the field is not found or does not support options.
        '403':
          description: Returned if the request is not authenticated as a Jira administrator
            or the app that provided the field.
        '404':
          description: Returned if the option is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field.option:jira
        state: Beta
      x-atlassian-connect-scope: NONE
    put:
      tags:
      - Issue custom field options (apps)
      summary: Update issue field option
      description: |-
        Updates or creates an option for a select list issue field. This operation requires that the option ID is provided when creating an option, therefore, the option ID needs to be specified as a path and body parameter. The option ID provided in the path and body must be identical.

        Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
      operationId: updateIssueFieldOption
      parameters:
      - name: fieldKey
        in: path
        description: |-
          The field key is specified in the following format: **$(app-key)\_\_$(field-key)**. For example, *example-add-on\_\_example-issue-field*. To determine the `fieldKey` value, do one of the following:

           *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
           *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: optionId
        in: path
        description: The ID of the option to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueFieldOption'
            example:
              config:
                attributes: [
                  ]
                scope:
                  global: {
                    }
                  projects: [
                    ]
                  projects2:
                  - attributes:
                    - notSelectable
                    id: 1001
                  - attributes:
                    - notSelectable
                    id: 1002
              id: 1
              properties:
                description: The team's description
                founded: 2016-06-06T00:00:00Z
                leader:
                  email: lname@example.com
                  name: Leader Name
                members: 42
              value: Team 1
        required: true
      responses:
        '200':
          description: Returned if the option is updated or created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueFieldOption'
              example: '{"id":1,"value":"Team 1","properties":{"leader":{"name":"Leader
                Name","email":"lname@example.com"},"members":42,"description":"The
                team''s description","founded":"2016-06-06"},"config":{"scope":{"projects":[],"projects2":[{"id":1001,"attributes":["notSelectable"]},{"id":1002,"attributes":["notSelectable"]}],"global":{}},"attributes":[]}}'
        '400':
          description: Returned if the option is invalid, or the *ID* in the request
            object does not match the *optionId* parameter.
        '403':
          description: Returned if the request is not authenticated as a Jira administrator
            or the app that provided the field.
        '404':
          description: Returned if field is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field.option:jira
        state: Beta
      x-atlassian-connect-scope: NONE
    delete:
      tags:
      - Issue custom field options (apps)
      summary: Delete issue field option
      description: |-
        Deletes an option from a select list issue field.

        Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
      operationId: deleteIssueFieldOption
      parameters:
      - name: fieldKey
        in: path
        description: |-
          The field key is specified in the following format: **$(app-key)\_\_$(field-key)**. For example, *example-add-on\_\_example-issue-field*. To determine the `fieldKey` value, do one of the following:

           *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
           *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: optionId
        in: path
        description: The ID of the option to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the field option is deleted
          content:
            application/json:
              schema: {
                }
        '403':
          description: Returned if the request is not authenticated as a Jira administrator
            or the app that provided the field.
        '404':
          description: Returned if the field or option is not found.
        '409':
          description: Returned if the option is selected for the field in any issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:field.option:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /webhook:
    get:
      tags:
      - Webhooks
      summary: Get dynamic webhooks for app
      description: |-
        Returns a [paginated](#pagination) list of the webhooks registered by the calling app.

        **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
      operationId: getDynamicWebhooksForApp
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanWebhook'
              example: '{"isLast":true,"maxResults":3,"startAt":0,"total":3,"values":[{"events":["jira:issue_updated","jira:issue_created"],"expirationDate":"2019-06-01T12:42:30.000+0000","fieldIdsFilter":["summary","customfield_10029"],"id":10000,"jqlFilter":"project
                = PRJ","url":"https://your-app.example.com/webhook-received"},{"events":["jira:issue_created"],"expirationDate":"2019-06-01T12:42:30.000+0000","id":10001,"jqlFilter":"issuetype
                = Bug","url":"https://your-app.example.com/webhook-received"},{"events":["issue_property_set"],"expirationDate":"2019-06-01T12:42:30.000+0000","id":10002,"issuePropertyKeysFilter":["my-issue-property-key"],"jqlFilter":"project
                = PRJ","url":"https://your-app.example.com/webhook-received"}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the caller isn't an app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
        - manage:jira-webhook
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - manage:jira-webhook
        state: Current
      - scheme: OAuth2
        scopes:
        - read:webhook:jira
        - read:jql:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Webhooks
      summary: Register dynamic webhooks
      description: |-
        Registers webhooks.

        **NOTE:** for non-public OAuth apps, webhooks are delivered only if there is a match between the app owner and the user who registered a dynamic webhook.

        **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
      operationId: registerDynamicWebhooks
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRegistrationDetails'
            example:
              url: https://your-app.example.com/webhook-received
              webhooks:
              - events:
                - jira:issue_created
                - jira:issue_updated
                fieldIdsFilter:
                - summary
                - customfield_10029
                jqlFilter: project = PROJ
              - events:
                - jira:issue_deleted
                jqlFilter: project IN (PROJ, EXP) AND status = done
              - events:
                - issue_property_set
                issuePropertyKeysFilter:
                - my-issue-property-key
                jqlFilter: project = PROJ
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerForRegisteredWebhooks'
              example: '{"webhookRegistrationResult":[{"createdWebhookId":1000},{"errors":["The
                clause watchCount is unsupported"]},{"createdWebhookId":1001}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the caller isn't an app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
        - manage:jira-webhook
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - manage:jira-webhook
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:project:jira
        - write:webhook:jira
        state: Beta
      x-atlassian-connect-scope: READ
    delete:
      tags:
      - Webhooks
      summary: Delete webhooks by ID
      description: |-
        Removes webhooks by ID. Only webhooks registered by the calling app are removed. If webhooks created by other apps are specified, they are ignored.

        **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
      operationId: deleteWebhookById
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerForWebhookIDs'
            example:
              webhookIds:
              - 10000
              - 10001
              - 10042
        required: true
      responses:
        '202':
          description: Returned if the request is successful
        '400':
          description: Returned if the list of webhook IDs is missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the caller isn't an app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
        - manage:jira-webhook
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - manage:jira-webhook
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:webhook:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /screens/{screenId}/tabs/{tabId}/move/{pos}:
    post:
      tags:
      - Screen tabs
      summary: Move screen tab
      description: |-
        Moves a screen tab.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: moveScreenTab
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tabId
        in: path
        description: The ID of the screen tab
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: pos
        in: path
        description: The position of tab. The base index is 0
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen or screen tab is not found or the position
            is invalid.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:screen:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /user/columns:
    get:
      tags:
      - Users
      summary: Get user default columns
      description: |-
        Returns the default [issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user. If `accountId` is not passed in the request, the calling user's details are returned.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLgl), to get the column details for any user.
         *  Permission to access Jira, to get the calling user's column details.
      operationId: getUserDefaultColumns
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: username
        in: query
        description: This parameter is no longer available See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ColumnItem'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or is not accessing their user record.
        '404':
          description: Returned if the requested user is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user.columns:jira
        - read:filter.column:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Users
      summary: Set user default columns
      description: |-
        Sets the default [ issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user. If an account ID is not passed, the calling user's default columns are set. If no column details are sent, then all default columns are removed.

        The parameters for this resource are expressed as HTML form data. For example, in curl:

        `curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5'`

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set the columns on any user.
         *  Permission to access Jira, to set the calling user's columns.
      operationId: setUserColumns
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      requestBody:
        description: The ID of a column to set. To set multiple columns, send multiple
          `columns` parameters
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserColumnRequestBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserColumnRequestBody'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or is not accessing their user record.
        '404':
          description: Returned if the requested user is not found.
        '429':
          description: Returned if the rate limit is exceeded. User search endpoints
            share a collective rate limit for the tenant, in addition to Jira's normal
            rate limiting you may receive a rate limit for user search. Please respect
            the Retry-After header.
        '500':
          description: Returned if an invalid issue table column ID is sent.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
    delete:
      tags:
      - Users
      summary: Reset user default columns
      description: |-
        Resets the default [ issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user to the system default. If `accountId` is not passed, the calling user's default columns are reset.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set the columns on any user.
         *  Permission to access Jira, to set the calling user's columns.
      operationId: resetUserColumns
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or is not accessing their user record.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
  /field:
    get:
      tags:
      - Issue fields
      summary: Get fields
      description: |-
        Returns system and custom issue fields according to the following rules:

         *  Fields that cannot be added to the issue navigator are always returned.
         *  Fields that cannot be placed on an issue screen are always returned.
         *  Fields that depend on global Jira settings are only returned if the setting is enabled. That is, timetracking fields, subtasks, votes, and watches.
         *  For all other fields, this operation only returns the fields that the user has permission to view (that is, the field is used in at least one project that the user has *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.)

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getFields
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldDetails'
              example: '[{"clauseNames":["description"],"custom":false,"id":"description","name":"Description","navigable":true,"orderable":true,"schema":{"system":"description","type":"string"},"searchable":true},{"clauseNames":["summary"],"custom":false,"id":"summary","key":"summary","name":"Summary","navigable":true,"orderable":true,"schema":{"system":"summary","type":"string"},"searchable":true}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue fields
      summary: Create custom field
      description: |-
        Creates a custom field.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createCustomField
      parameters: [
        ]
      requestBody:
        description: Definition of the custom field to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldDefinitionJsonBean'
            example:
              description: Custom field for picking groups
              name: New custom field
              searcherKey: com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher
              type: com.atlassian.jira.plugin.system.customfieldtypes:grouppicker
        required: true
      responses:
        '201':
          description: Returned if the custom field is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldDetails'
              example: '{"clauseNames":["cf[10101]","New custom field"],"custom":true,"id":"customfield_10101","key":"customfield_10101","name":"New
                custom field","navigable":true,"orderable":true,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:project","customId":10101,"type":"project"},"searchable":true,"untranslatedName":"New
                custom field"}'
        '400':
          description: |-
            Returned if:

             *  the user does not have permission to create custom fields.
             *  any of the request object properties have invalid or missing values.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field:jira
        - read:avatar:jira
        - read:field:jira
        - read:project-category:jira
        - read:project:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /workflows/update:
    post:
      tags:
      - Workflows
      summary: Bulk update workflows
      description: |-
        Update workflows and related statuses.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* project permission to create all, including global-scoped, workflows
         *  *Administer projects* project permissions to create project-scoped workflows
      operationId: updateWorkflows
      parameters:
      - name: expand
        in: query
        description: |-
          Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details. Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `workflows.usages` Returns the project and issue types that each workflow is associated with.
           *  `statuses.usages` Returns the project and issue types that each status is associated with
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowUpdateRequest'
            example:
              statuses:
              - description: ''
                name: To Do
                statusCategory: TODO
                statusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
              - description: ''
                name: In Progress
                statusCategory: IN_PROGRESS
                statusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
              - description: ''
                name: Done
                statusCategory: DONE
                statusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
              workflows:
              - defaultStatusMappings:
                - newStatusReference: '10011'
                  oldStatusReference: '10010'
                description: ''
                id: '10001'
                startPointLayout:
                  x: -100.00030899047852
                  y: -153.00020599365234
                statusMappings:
                - issueTypeId: '10002'
                  projectId: '10003'
                  statusMigrations:
                  - newStatusReference: '10011'
                    oldStatusReference: '10010'
                statuses:
                - layout:
                    x: 114.99993896484375
                    y: -16
                  properties: {
                    }
                  statusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                - layout:
                    x: 317.0000915527344
                    y: -16
                  properties: {
                    }
                  statusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                - layout:
                    x: 508.000244140625
                    y: -16
                  properties: {
                    }
                  statusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                transitions:
                - actions: [
                    ]
                  description: ''
                  id: '1'
                  links: [
                    ]
                  name: Create
                  properties: {
                    }
                  toStatusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                  triggers: [
                    ]
                  type: INITIAL
                  validators: [
                    ]
                - actions: [
                    ]
                  description: ''
                  id: '11'
                  links: [
                    ]
                  name: To Do
                  properties: {
                    }
                  toStatusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                  triggers: [
                    ]
                  type: GLOBAL
                  validators: [
                    ]
                - actions: [
                    ]
                  description: ''
                  id: '21'
                  links: [
                    ]
                  name: In Progress
                  properties: {
                    }
                  toStatusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                  triggers: [
                    ]
                  type: GLOBAL
                  validators: [
                    ]
                - actions: [
                    ]
                  description: Move a work item from in progress to done
                  id: '31'
                  links:
                  - fromPort: 0
                    fromStatusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                    toPort: 1
                  name: Done
                  properties: {
                    }
                  toStatusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                  triggers: [
                    ]
                  type: DIRECTED
                  validators: [
                    ]
                version:
                  id: 6f6c988b-2590-4358-90c2-5f7960265592
                  versionNumber: 1
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowUpdateResponse'
              example: '{"statuses":[{"description":"","id":"10001","name":"To Do","scope":{"type":"GLOBAL"},"statusCategory":"TODO","statusReference":"10001","usages":[]},{"description":"","id":"10002","name":"In
                Progress","scope":{"type":"GLOBAL"},"statusCategory":"IN_PROGRESS","statusReference":"10002","usages":[]},{"description":"","id":"10003","name":"Done","scope":{"type":"GLOBAL"},"statusCategory":"DONE","statusReference":"10003","usages":[]}],"taskId":"10001","workflows":[{"description":"","id":"b9ff2384-d3b6-4d4e-9509-3ee19f607168","isEditable":true,"name":"Software
                workflow 1","scope":{"type":"GLOBAL"},"startPointLayout":{"x":-100.00030899047852,"y":-153.00020599365234},"statuses":[{"deprecated":false,"layout":{"x":317.0000915527344,"y":-16.0},"properties":{},"statusReference":"10002"},{"deprecated":false,"layout":{"x":508.000244140625,"y":-16.0},"properties":{},"statusReference":"10003"},{"deprecated":false,"layout":{"x":114.99993896484375,"y":-16.0},"properties":{},"statusReference":"10001"}],"transitions":[{"actions":[],"description":"","id":"21","links":[],"name":"In
                Progress","properties":{},"toStatusReference":"10002","triggers":[],"type":"GLOBAL","validators":[]},{"actions":[],"description":"","id":"31","links":[{"fromPort":0,"fromStatusReference":"10002","toPort":1}],"name":"Done","properties":{},"toStatusReference":"10003","triggers":[],"type":"DIRECTED","validators":[]},{"actions":[],"description":"","id":"1","links":[],"name":"Create","properties":{},"toStatusReference":"10001","triggers":[],"type":"INITIAL","validators":[]},{"actions":[],"description":"","id":"11","links":[],"name":"To
                Do","properties":{},"toStatusReference":"10002","triggers":[],"type":"GLOBAL","validators":[]}],"usages":[],"version":{"id":"f010ac1b-3dd3-43a3-aa66-0ee8a447f76e","versionNumber":0}}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '409':
          description: Returned if another workflow configuration update task is ongoing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /version/{id}/relatedIssueCounts:
    get:
      tags:
      - Project versions
      summary: Get version's related issues count
      description: |-
        Returns the following counts for a version:

         *  Number of issues where the `fixVersion` is set to the version.
         *  Number of issues where the `affectedVersion` is set to the version.
         *  Number of issues where a version custom field is set to the version.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* project permission for the project that contains the version.
      operationId: getVersionRelatedIssues
      parameters:
      - name: id
        in: path
        description: The ID of the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionIssueCounts'
              example: '{"customFieldUsage":[{"customFieldId":10000,"fieldName":"Field1","issueCountWithVersionInCustomField":2},{"customFieldId":10010,"fieldName":"Field2","issueCountWithVersionInCustomField":3}],"issueCountWithCustomFieldsShowingVersion":54,"issuesAffectedCount":101,"issuesFixedCount":23,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: |-
            Returned if:

             *  the version is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:project-version:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issue/picker:
    get:
      tags:
      - Issue search
      summary: Get issue picker suggestions
      description: |-
        Returns lists of issues matching a query string. Use this resource to provide auto-completion suggestions when the user is looking for an issue using a word or string.

        This operation returns two lists:

         *  `History Search` which includes issues from the user's history of created, edited, or viewed issues that contain the string in the `query` parameter.
         *  `Current Search` which includes issues that match the JQL expression in `currentJQL` and contain the string in the `query` parameter.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getIssuePickerResource
      parameters:
      - name: query
        in: query
        description: A string to match against text fields in the issue such as title,
          description, or comments
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: query
        x-showInExample: 'true'
      - name: currentJQL
        in: query
        description: A JQL query defining a list of issues to search for the query
          term. Note that `username` and `userkey` cannot be used as search terms
          for this parameter, due to privacy reasons. Use `accountId` instead
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: currentIssueKey
        in: query
        description: The key of an issue to exclude from search results. For example,
          the issue the user is viewing when they perform this query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: currentProjectId
        in: query
        description: The ID of a project that suggested issues must belong to
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: showSubTasks
        in: query
        description: Indicate whether to include subtasks in the suggestions list
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: showSubTaskParent
        in: query
        description: When `currentIssueKey` is a subtask, whether to include the parent
          issue in the suggestions if it matches the query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuePickerSuggestions'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-details:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issues/archive/export:
    put:
      tags:
      - Issues
      summary: Export archived issue(s)
      description: "Enables admins to retrieve details of all archived issues. Upon\
        \ a successful request, the admin who submitted it will receive an email with\
        \ a link to download a CSV file with the issue details.\n\nNote that this\
        \ API only exports the values of system fields and archival-specific fields\
        \ (`ArchivedBy` and `ArchivedDate`). Custom fields aren't supported.\n\n**[Permissions](#permissions)\
        \ required:** Jira admin or site admin: [global permission](https://confluence.atlassian.com/x/x4dKLg)\n\
        \n**License required:** Premium or Enterprise\n\n**Signed-in users only:**\
        \ This API can't be accessed anonymously.\n\n**Rate limiting:** Only a single\
        \ request can be active at any given time.\n\n  \n"
      operationId: exportArchivedIssues
      parameters: [
        ]
      requestBody:
        description: You can filter the issues in your request by the `projects`,
          `archivedBy`, `archivedDate`, `issueTypes`, and `reporters` fields. All
          filters are optional. If you don't provide any filters, you'll get a list
          of up to one million archived issues
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchivedIssuesFilterRequest'
            example:
              archivedBy:
              - uuid-rep-001
              - uuid-rep-002
              archivedDate:
                dateAfter: 2023-01-01T00:00:00Z
                dateBefore: 2023-01-12T00:00:00Z
              archivedDateRange:
                dateAfter: 2023-01-01T00:00:00Z
                dateBefore: 2023-01-12T00:00:00Z
              issueTypes:
              - '10001'
              - '10002'
              projects:
              - FOO
              - BAR
              reporters:
              - uuid-rep-001
              - uuid-rep-002
        required: true
      responses:
        '202':
          description: Returns the details of your export task. You can use the [get
            task](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-tasks/#api-rest-api-3-task-taskid-get)
            API to view the progress of your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportArchivedIssuesTaskProgressResponse'
              example: '{"payload":"{projects=[FOO, BAR], reporters=[uuid-rep-001,
                uuid-rep-002], issueTypes=[10001, 10002], archivedDate={dateAfterInstant=2023-01-01,
                dateBeforeInstant=2023-01-12}, archivedBy=[uuid-rep-001, uuid-rep-002]}","progress":0,"status":"ENQUEUED","submittedTime":1623230887000,"taskId":"10990"}'
        '400':
          description: |-
            Returned when:

             *  The request is invalid, or the filters provided are incorrect
             *  You requested too many issues for export. The limit is one million issues per request
          content:
            application/json:
              example: '["Your filter contains invalid values {errorMessage}"]'
        '401':
          description: Returned if no issues were unarchived because the provided
            authentication credentials are either missing or invalid.
          content:
            application/json:
              example: '{"errorMessages":["User is not logged in."],"errors":{}}'
        '403':
          description: Returned if no issues were unarchived because the user lacks
            the required Jira admin or site admin permissions.
          content:
            application/json:
              example: '{"errorMessages":["User is not an admin."],"errors":{}}'
        '412':
          description: Returned if a request to export archived issues is already
            running.
          content:
            application/json:
              example: '{"errorMessages":["An issue archival task is already running
                with ID 1010. To start a new one, cancel the task or wait for it to
                finish."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /notificationscheme/{notificationSchemeId}/notification/{notificationId}:
    delete:
      tags:
      - Issue notification schemes
      summary: Remove notification from notification scheme
      description: |-
        Removes a notification from a notification scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeNotificationFromNotificationScheme
      parameters:
      - name: notificationSchemeId
        in: path
        description: The ID of the notification scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notificationId
        in: path
        description: The ID of the notification
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if either the notification scheme or notification
            isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Notification scheme with ID 10000 not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: ADMIN
  /fieldconfigurationscheme/mapping:
    get:
      tags:
      - Issue field configurations
      summary: Get field configuration issue type items
      description: |-
        Returns a [paginated](#pagination) list of field configuration issue type items.

        Only items used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getFieldConfigurationSchemeMappings
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: fieldConfigurationSchemeId
        in: query
        description: 'The list of field configuration scheme IDs. To include multiple
          field configuration schemes separate IDs with ampersand: `fieldConfigurationSchemeId=10000&fieldConfigurationSchemeId=10001`'
        required: false
        style: form
        explode: true
        schema:
          maxItems: 50
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
            example: 10020
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanFieldConfigurationIssueTypeItem'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":5,"values":[{"fieldConfigurationSchemeId":"10020","issueTypeId":"10000","fieldConfigurationId":"10010"},{"fieldConfigurationSchemeId":"10020","issueTypeId":"10001","fieldConfigurationId":"10010"},{"fieldConfigurationSchemeId":"10021","issueTypeId":"10002","fieldConfigurationId":"10000"},{"fieldConfigurationSchemeId":"10022","issueTypeId":"default","fieldConfigurationId":"10011"},{"fieldConfigurationSchemeId":"10023","issueTypeId":"default","fieldConfigurationId":"10000"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if no field configuration schemes are found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field-configuration-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue:
    post:
      tags:
      - Issues
      summary: Create issue
      description: |-
        Creates an issue or, where the option to create subtasks is enabled in Jira, a subtask. A transition may be applied, to move the issue or subtask to a workflow step other than the default start step, and issue properties set.

        The content of the issue or subtask is defined using `update` and `fields`. The fields that can be set in the issue or subtask are determined using the [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get). These are the same fields that appear on the issue's create screen. Note that the `description`, `environment`, and any `textarea` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (`textfield`) accept a string and don't handle Atlassian Document Format content.

        Creating a subtask differs from creating an issue as follows:

         *  `issueType` must be set to a subtask issue type (use [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get) to find subtask issue types).
         *  `parent` must contain the ID or key of the parent issue.

        In a next-gen project any issue may be made a child providing that the parent and child are members of the same project.

        **[Permissions](#permissions) required:** *Browse projects* and *Create issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project in which the issue or subtask is created.
      operationId: createIssue
      parameters:
      - name: updateHistory
        in: query
        description: Whether the project in which the issue is created is added to
          the user's **Recently viewed** project list, as shown under **Projects**
          in Jira. When provided, the issue type and request type are added to the
          user's history for a project. These values are then used to provide defaults
          on the issue create screen
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueUpdateDetails'
            example:
              fields:
                assignee:
                  id: 5b109f2e9729b51b54dc274d
                components:
                - id: '10000'
                customfield_10000: 09/Jun/19
                customfield_20000: 06/Jul/19 3:25 PM
                customfield_30000:
                - '10000'
                - '10002'
                customfield_40000:
                  content:
                  - content:
                    - text: Occurs on all orders
                      type: text
                    type: paragraph
                  type: doc
                  version: 1
                customfield_50000:
                  content:
                  - content:
                    - text: Could impact day-to-day work.
                      type: text
                    type: paragraph
                  type: doc
                  version: 1
                customfield_60000: jira-software-users
                customfield_70000:
                - jira-administrators
                - jira-software-users
                customfield_80000:
                  value: red
                description:
                  content:
                  - content:
                    - text: Order entry fails when selecting supplier.
                      type: text
                    type: paragraph
                  type: doc
                  version: 1
                duedate: 2019-05-11T00:00:00Z
                environment:
                  content:
                  - content:
                    - text: UAT
                      type: text
                    type: paragraph
                  type: doc
                  version: 1
                fixVersions:
                - id: '10001'
                issuetype:
                  id: '10000'
                labels:
                - bugfix
                - blitz_test
                parent:
                  key: PROJ-123
                priority:
                  id: '20000'
                project:
                  id: '10000'
                reporter:
                  id: 5b10a2844c20165700ede21g
                security:
                  id: '10000'
                summary: Main order flow broken
                timetracking:
                  originalEstimate: '10'
                  remainingEstimate: '5'
                versions:
                - id: '10000'
              update: {
                }
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedIssue'
              example: '{"id":"10000","key":"ED-24","self":"https://your-domain.atlassian.net/rest/api/3/issue/10000","transition":{"status":200,"errorCollection":{"errorMessages":[],"errors":{}}}}'
        '400':
          description: |-
            Returned if the request:

             *  is missing required fields.
             *  contains invalid field values.
             *  contains fields that cannot be set for the issue type.
             *  is by a user who does not have the necessary permission.
             *  is to create a subtype in a project different that of the parent issue.
             *  is for a subtask when the option to create subtasks is disabled.
             *  is invalid for any other reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Field ''priority'' is required"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '422':
          description: Returned if a configuration problem prevents the creation of
            the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - write:comment:jira
        - write:comment.property:jira
        - write:attachment:jira
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /dashboard:
    get:
      tags:
      - Dashboards
      summary: Get all dashboards
      description: |-
        Returns a list of dashboards owned by or shared with the user. The list may be filtered to include only favorite or owned dashboards.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getAllDashboards
      parameters:
      - name: filter
        in: query
        description: |-
          The filter applied to the list of dashboards. Valid values are:

           *  `favourite` Returns dashboards the user has marked as favorite.
           *  `my` Returns dashboards owned by the user
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - my
          - favourite
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfDashboards'
              example: '{"dashboards":[{"id":"10000","isFavourite":false,"name":"System
                Dashboard","popularity":1,"self":"https://your-domain.atlassian.net/rest/api/3/dashboard/10000","sharePermissions":[{"type":"global"}],"view":"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000"},{"id":"20000","isFavourite":true,"name":"Build
                Engineering","owner":{"key":"Mia","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","name":"mia","displayName":"Mia
                Krystof","avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"}},"popularity":1,"self":"https://your-domain.atlassian.net/rest/api/3/dashboard/20000","sharePermissions":[{"group":{"name":"administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupname=administrators"},"id":10105,"type":"group"}],"view":"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=20000"}],"maxResults":10,"next":"https://your-domain.atlassian.net/rest/api/3/dashboard?startAt=10","prev":"https://your-domain.atlassian.net/rest/api/3/dashboard?startAt=0","startAt":10,"total":143}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Dashboards
      summary: Create dashboard
      description: |-
        Creates a dashboard.

        **[Permissions](#permissions) required:** None.
      operationId: createDashboard
      parameters:
      - name: extendAdminPermissions
        in: query
        description: Whether admin level permissions are used. It should only be true
          if the user has *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dashboard details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardDetails'
            example:
              description: A dashboard to help auditors identify sample of issues
                to check.
              editPermissions: [
                ]
              name: Auditors dashboard
              sharePermissions:
              - type: global
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
              example: '{"id":"10000","isFavourite":false,"name":"System Dashboard","popularity":1,"self":"https://your-domain.atlassian.net/rest/api/3/dashboard/10000","sharePermissions":[{"type":"global"}],"view":"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:dashboard:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
  /field/{fieldId}/screens:
    get:
      tags:
      - Screens
      summary: Get screens for a field
      description: |-
        Returns a [paginated](#pagination) list of the screens a field is used in.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getScreensForField
      parameters:
      - name: fieldId
        in: path
        description: The ID of the field to return screens for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          screens in the response. This parameter accepts `tab` which returns details
          about the screen tabs the field is used in
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanScreenWithTab'
              example: '{"isLast":false,"maxResults":1,"startAt":0,"total":5,"values":[{"id":10001,"name":"Default
                Screen","description":"Provides for the update of all system fields.","tab":{"id":10000,"name":"Fields
                Tab"}}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:screen:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        - read:screen-tab:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /issuesecurityschemes/{schemeId}/level:
    put:
      tags:
      - Issue security schemes
      summary: Add issue security levels
      description: |-
        Adds levels and levels' members to the issue security scheme. You can add up to 100 levels per request.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addSecurityLevel
      parameters:
      - name: schemeId
        in: path
        description: The ID of the issue security scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSecuritySchemeLevelsRequestBean'
            example:
              levels:
              - description: First Level Description
                isDefault: true
                members:
                - type: reporter
                - parameter: jira-administrators
                  type: group
                name: First Level
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["some-wrong-string is not a valid value.
                The issue security scheme ID must be a positive integer."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the security scheme isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue security scheme with ID 10000 not
                found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}:
    get:
      tags:
      - Issue worklog properties
      summary: Get worklog property
      description: |-
        Returns the value of a worklog property.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: getWorklogProperty
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: worklogId
        in: path
        description: The ID of the worklog
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityProperty'
              example: '{"key":"issue.support","value":{"system.conversation.id":"b1bf38be-5e94-4b40-a3b8-9278735ee1e6","system.support.time":"1m"}}'
        '400':
          description: Returned if the worklog ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the issue, worklog, or property is not found.
             *  the user does not have permission to view the issue or worklog.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-worklog.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue worklog properties
      summary: Set worklog property
      description: |-
        Sets the value of a worklog property. Use this operation to store custom data against the worklog.

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  *Edit all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or *Edit own worklogs* to update worklogs created by the user.
         *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: setWorklogProperty
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: worklogId
        in: path
        description: The ID of the worklog
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the issue property. The maximum length is 255 characters
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The value of the property. The value has to be a valid, non-empty
          [JSON](https://tools.ietf.org/html/rfc4627) value. The maximum length of
          the property value is 32768 bytes
        content:
          application/json:
            schema: {
              }
        required: true
      responses:
        '200':
          description: Returned if the worklog property is updated
          content:
            application/json:
              schema: {
                }
        '201':
          description: Returned if the worklog property is created.
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the worklog ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to edit the worklog.
        '404':
          description: |-
            Returned if:

             *  the issue or worklog is not found.
             *  the user does not have permission to view the issue or worklog.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-worklog.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue worklog properties
      summary: Delete worklog property
      description: |-
        Deletes a worklog property.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: deleteWorklogProperty
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: worklogId
        in: path
        description: The ID of the worklog
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the worklog property is removed
        '400':
          description: Returned if the worklog key or id is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to edit the worklog.
        '404':
          description: |-
            Returned if:

             *  the issue, worklog, or property is not found.
             *  the user does not have permission to view the issue or worklog.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue-worklog.property:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /atlassian-connect/1/app/module/dynamic:
    get:
      tags:
      - Dynamic modules
      summary: Get modules
      description: |-
        Returns all modules registered dynamically by the calling app.

        **[Permissions](#permissions) required:** Only Connect apps can make this request.
      operationId: DynamicModulesResource.getModules_get
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectModules'
        '401':
          description: Returned if the call is not from a Connect app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                message: The request is not from a Connect app.
      deprecated: false
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: NONE
    post:
      tags:
      - Dynamic modules
      summary: Register modules
      description: |-
        Registers a list of modules.

        **[Permissions](#permissions) required:** Only Connect apps can make this request.
      operationId: DynamicModulesResource.registerModules_post
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectModules'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
        '400':
          description: |-
            Returned if:
            * any of the provided modules is invalid. For example, required properties are missing.
            * any of the modules conflict with registered dynamic modules or modules defined in the app descriptor. For example, there are duplicate keys.

            Details of the issues encountered are included in the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                message: 'Installation failed. The app com.example.app.key has duplicate
                  module keys: [module-key]. Please contact the app vendor.'
        '401':
          description: Returned if the call is not from a Connect app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                message: The request is not from a Connect app.
      deprecated: false
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: NONE
    delete:
      tags:
      - Dynamic modules
      summary: Remove modules
      description: |-
        Remove all or a list of modules registered by the calling app.

        **[Permissions](#permissions) required:** Only Connect apps can make this request.
      operationId: DynamicModulesResource.removeModules_delete
      parameters:
      - name: moduleKey
        in: query
        description: |-
          The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter.
          For example, `moduleKey=dynamic-attachment-entity-property&moduleKey=dynamic-select-field`.
          Nonexistent keys are ignored
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the call is not from a Connect app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                message: The request is not from a Connect app.
      deprecated: false
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: NONE
  /fieldconfigurationscheme/{id}:
    put:
      tags:
      - Issue field configurations
      summary: Update field configuration scheme
      description: |-
        Updates a field configuration scheme.

        This operation can only update field configuration schemes used in company-managed (classic) projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateFieldConfigurationScheme
      parameters:
      - name: id
        in: path
        description: The ID of the field configuration scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The details of the field configuration scheme
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFieldConfigurationSchemeDetails'
            example:
              description: We can use this one for software projects.
              name: Field Configuration Scheme for software related projects
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["A field configuration scheme is using this
                name."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access field
                configurations."],"errors":{}}'
        '404':
          description: Returned if the field configuration scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["The field configuration scheme was not
                found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field-configuration-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue field configurations
      summary: Delete field configuration scheme
      description: |-
        Deletes a field configuration scheme.

        This operation can only delete field configuration schemes used in company-managed (classic) projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteFieldConfigurationScheme
      parameters:
      - name: id
        in: path
        description: The ID of the field configuration scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the field configuration scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:field-configuration-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /jql/match:
    post:
      tags:
      - Issue search
      summary: Check issues against JQL
      description: |-
        Checks whether one or more issues would be returned by one or more JQL queries.

        **[Permissions](#permissions) required:** None, however, issues are only matched against JQL queries where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: matchIssues
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuesAndJQLQueries'
            example:
              issueIds:
              - 10001
              - 1000
              - 10042
              jqls:
              - project = FOO
              - issuetype = Bug
              - summary ~ "some text" AND project in (FOO, BAR)
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueMatches'
              example: '{"matches":[{"matchedIssues":[10000,10004],"errors":[]},{"matchedIssues":[100134,10025,10236],"errors":[]},{"matchedIssues":[],"errors":[]},{"matchedIssues":[],"errors":["Invalid
                JQL: broken = value"]}]}'
        '400':
          description: Returned if `jqls` exceeds the maximum number of JQL queries
            or `issueIds` exceeds the maximum number of issue IDs.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-details:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /plans/plan:
    get:
      tags:
      - Plans
      summary: Get plans paginated
      description: |-
        Returns a [paginated](#pagination) list of plans.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getPlans
      parameters:
      - name: includeTrashed
        in: query
        description: Whether to include trashed plans in the results
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: includeArchived
        in: query
        description: Whether to include archived plans in the results
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: cursor
        in: query
        description: The cursor to start from. If not provided, the first page will
          be returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: maxResults
        in: query
        description: The maximum number of plans to return per page. The maximum value
          is 50. The default value is 50
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageWithCursorGetPlanResponseForPage'
              example: '{"cursor":"","isLast":true,"maxResults":2,"nextPageCursor":"2","total":10,"values":[{"id":"100","issueSources":[{"type":"Project","value":10000}],"name":"Plan
                1","scenarioId":"200","status":"Active"},{"id":"200","issueSources":[{"type":"Board","value":20000}],"name":"Plan
                2","scenarioId":"300","status":"Trashed"}]}'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Plans
      summary: Create plan
      description: |-
        Creates a plan.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createPlan
      parameters:
      - name: useGroupId
        in: query
        description: Whether to accept group IDs instead of group names. Group names
          are deprecated
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanRequest'
            example:
              crossProjectReleases:
              - name: AB and BC merge
                releaseIds:
                - 29
                - 39
              customFields:
              - customFieldId: 2335
                filter: true
              exclusionRules:
                issueIds:
                - 2
                - 3
                issueTypeIds:
                - 32
                - 33
                numberOfDaysToShowCompletedIssues: 50
                releaseIds:
                - 42
                - 43
                workStatusCategoryIds:
                - 22
                - 23
                workStatusIds:
                - 12
                - 13
              issueSources:
              - type: Project
                value: 12
              - type: Board
                value: 462
              leadAccountId: abc-12-rbji
              name: ABC Quaterly plan
              permissions:
              - holder:
                  type: AccountId
                  value: 234-tgj-343
                type: Edit
              scheduling:
                dependencies: Sequential
                endDate:
                  type: DueDate
                estimation: Days
                inferredDates: ReleaseDates
                startDate:
                  type: TargetStartDate
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /attachment/meta:
    get:
      tags:
      - Issue attachments
      summary: Get Jira attachment settings
      description: |-
        Returns the attachment settings, that is, whether attachments are enabled and the maximum attachment size allowed.

        Note that there are also [project permissions](https://confluence.atlassian.com/x/yodKLg) that restrict whether users can create and delete attachments.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getAttachmentMeta
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentSettings'
              example: '{"enabled":true,"uploadLimit":1000000}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:instance-configuration:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /plans/plan/{planId}/team:
    get:
      tags:
      - Teams in plan
      summary: Get teams in plan paginated
      description: |-
        Returns a [paginated](#pagination) list of plan-only and Atlassian teams in a plan.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getTeams
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: cursor
        in: query
        description: The cursor to start from. If not provided, the first page will
          be returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: maxResults
        in: query
        description: The maximum number of plan teams to return per page. The maximum
          value is 50. The default value is 50
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageWithCursorGetTeamResponseForPage'
              example: '{"cursor":"","isLast":true,"maxResults":2,"nextPageCursor":"2","total":10,"values":[{"id":"1","name":"Team
                1","type":"PlanOnly"},{"id":"2","type":"Atlassian"}]}'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /dashboard/search:
    get:
      tags:
      - Dashboards
      summary: Search for dashboards
      description: |-
        Returns a [paginated](#pagination) list of dashboards. This operation is similar to [Get dashboards](#api-rest-api-3-dashboard-get) except that the results can be refined to include dashboards that have specific attributes. For example, dashboards with a particular name. When multiple attributes are specified only filters matching all attributes are returned.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** The following dashboards that match the query parameters are returned:

         *  Dashboards owned by the user. Not returned for anonymous users.
         *  Dashboards shared with a group that the user is a member of. Not returned for anonymous users.
         *  Dashboards shared with a private project that the user can browse. Not returned for anonymous users.
         *  Dashboards shared with a public project.
         *  Dashboards shared with the public.
      operationId: getDashboardsPaginated
      parameters:
      - name: dashboardName
        in: query
        description: String used to perform a case-insensitive partial match with
          `name`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountId
        in: query
        description: User account ID used to return dashboards with the matching `owner.accountId`.
          This parameter cannot be used with the `owner` parameter
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
      - name: owner
        in: query
        description: This parameter is deprecated because of privacy changes. Use
          `accountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details. User name used to return dashboards with the matching `owner.name`.
          This parameter cannot be used with the `accountId` parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupname
        in: query
        description: As a group's name can change, use of `groupId` is recommended.
          Group name used to return dashboards that are shared with a group that matches
          `sharePermissions.group.name`. This parameter cannot be used with the `groupId`
          parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupId
        in: query
        description: Group ID used to return dashboards that are shared with a group
          that matches `sharePermissions.group.groupId`. This parameter cannot be
          used with the `groupname` parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectId
        in: query
        description: Project ID used to returns dashboards that are shared with a
          project that matches `sharePermissions.project.id`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `description` Sorts by dashboard description. Note that this sort works independently of whether the expand to display the description field is in use.
           *  `favourite_count` Sorts by dashboard popularity.
           *  `id` Sorts by dashboard ID.
           *  `is_favourite` Sorts by whether the dashboard is marked as a favorite.
           *  `name` Sorts by dashboard name.
           *  `owner` Sorts by dashboard owner name
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - description
          - -description
          - +description
          - favorite_count
          - -favorite_count
          - +favorite_count
          - id
          - -id
          - +id
          - is_favorite
          - -is_favorite
          - +is_favorite
          - name
          - -name
          - +name
          - owner
          - -owner
          - +owner
          default: name
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: status
        in: query
        description: The status to filter by. It may be active, archived or deleted
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - active
          - archived
          - deleted
          default: active
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about dashboard in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `description` Returns the description of the dashboard.
           *  `owner` Returns the owner of the dashboard.
           *  `viewUrl` Returns the URL that is used to view the dashboard.
           *  `favourite` Returns `isFavourite`, an indicator of whether the user has set the dashboard as a favorite.
           *  `favouritedCount` Returns `popularity`, a count of how many users have set this dashboard as a favorite.
           *  `sharePermissions` Returns details of the share permissions defined for the dashboard.
           *  `editPermissions` Returns details of the edit permissions defined for the dashboard.
           *  `isWritable` Returns whether the current user has permission to edit the dashboard
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanDashboard'
              example: '{"isLast":true,"maxResults":100,"self":"https://your-domain.atlassian.net/rest/api/3/dashboard/search?expand=owner&maxResults=50&startAt=0","startAt":0,"total":2,"values":[{"description":"Testing
                program","id":"1","isFavourite":true,"name":"Testing","owner":{"self":"https://your-domain.atlassian.net/user?accountId=5b10a2844c20165700ede21g","displayName":"Mia","active":true,"accountId":"5b10a2844c20165700ede21g","avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"}},"popularity":1,"self":"https://your-domain.atlassian.net/rest/api/3/dashboard/1","sharePermissions":[{"type":"global"}],"view":"https://your-domain.atlassian.net/Dashboard.jspa?selectPageId=1"},{"description":"Quantum
                initiative","id":"2","isFavourite":false,"name":"Quantum ","owner":{"self":"https://your-domain.atlassian.net/user?accountId=5b10a2844c20165700ede21g","displayName":"Mia","active":true,"accountId":"5b10a2844c20165700ede21g","avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"}},"popularity":0,"self":"https://your-domain.atlassian.net/rest/api/3/dashboard/2","sharePermissions":[{"type":"loggedin"}],"view":"https://your-domain.atlassian.net/Dashboard.jspa?selectPageId=2"}]}'
        '400':
          description: |-
            Returned if:

             *  `orderBy` is invalid.
             *  `expand` includes an invalid value.
             *  `accountId` and `owner` are provided.
             *  `groupname` and `groupId` are provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /priorityscheme/mappings:
    post:
      tags:
      - Priority schemes
      summary: Suggested priorities for mappings
      description: |-
        Returns a [paginated](#pagination) list of priorities that would require mapping, given a change in priorities or projects associated with a priority scheme.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: suggestedPrioritiesForMappings
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestedMappingsRequestBean'
            example:
              maxResults: 50
              priorities:
                add:
                - 10001
                - 10002
                remove:
                - 10003
              projects:
                add:
                - 10021
              schemeId: 10005
              startAt: 0
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanPriorityWithSequence'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":3,"values":[{"description":"Serious
                problem that could block progress.","iconUrl":"/images/icons/priorities/high.svg","id":"1","isDefault":false,"name":"High","statusColor":"#f15C75"},{"description":"Has
                the potential to affect progress.","iconUrl":"/images/icons/priorities/medium.svg","id":"2","isDefault":true,"name":"Medium","statusColor":"#f79232"},{"description":"Minor
                problem or easily worked around.","iconUrl":"/images/icons/priorities/low.svg","id":"3","isDefault":false,"name":"Low","statusColor":"#707070"}]}'
        '400':
          description: Returned if the request isn't valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /universal_avatar/view/type/{type}/avatar/{id}:
    get:
      tags:
      - Avatars
      summary: Get avatar image by ID
      description: |-
        Returns a project, issue type or priority avatar image by ID.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  For system avatars, none.
         *  For custom project avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project the avatar belongs to.
         *  For custom issue type avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the issue type is used in.
         *  For priority avatars, none.
      operationId: getAvatarImageByID
      parameters:
      - name: type
        in: path
        description: The icon type of the avatar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - issuetype
          - project
          - priority
        x-showInExample: 'true'
      - name: id
        in: path
        description: The ID of the avatar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
        x-showInExample: 'true'
      - name: size
        in: query
        description: The size of the avatar image. If not provided the default size
          is returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - xsmall
          - small
          - medium
          - large
          - xlarge
        x-showInExample: 'true'
      - name: format
        in: query
        description: The format to return the avatar image in. If not provided the
          original content format is returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - png
          - svg
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            '*/*': {
              }
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
            image/png: {
              }
            image/svg+xml: {
              }
        '400':
          description: Returned if the request is not valid.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
        '404':
          description: Returned if an avatar is not found or an avatar matching the
            requested size is not found.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /filter/favourite:
    get:
      tags:
      - Filters
      summary: Get favorite filters
      description: |-
        Returns the visible favorite filters of the user.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** A favorite filter is only visible to the user where the filter is:

         *  owned by the user.
         *  shared with a group that the user is a member of.
         *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  shared with a public project.
         *  shared with the public.

        For example, if the user favorites a public filter that is subsequently made private that filter is not returned by this operation.
      operationId: getFavouriteFilters
      parameters:
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
           *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Filter'
              example: '[{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"},{"approximateLastUsed":null,"description":"Issues
                assigned to me","favourite":true,"favouritedCount":0,"id":"10010","jql":"assignee
                = currentUser() and resolution is empty","name":"My issues","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10010","sharePermissions":[{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"}],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10010"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:jql:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issue/{issueIdOrKey}/comment:
    get:
      tags:
      - Issue comments
      summary: Get comments
      description: |-
        Returns all comments for an issue.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Comments are included in the response where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the comment has visibility restrictions, belongs to the group or has the role visibility is role visibility is restricted to.
      operationId: getComments
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      - name: orderBy
        in: query
        description: '[Order](#ordering) the results by a field. Accepts *created*
          to sort comments by their created date'
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - created
          - -created
          - +created
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          comments in the response. This parameter accepts `renderedBody`, which returns
          the comment body rendered in HTML
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfComments'
              example: '{"comments":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper."}]}]},"created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}],"maxResults":1,"startAt":0,"total":1}'
        '400':
          description: Returned if `orderBy` is set to a value other than *created*.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment:jira
        - read:comment.property:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue comments
      summary: Add comment
      description: |-
        Adds a comment to an issue.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Add comments* [ project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: addComment
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          comments in the response. This parameter accepts `renderedBody`, which returns
          the comment body rendered in HTML
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
            example:
              body:
                content:
                - content:
                  - text: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                      Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis
                      fermentum. Sed semper quam laoreet nisi egestas at posuere augue
                      semper.
                    type: text
                  type: paragraph
                type: doc
                version: 1
              visibility:
                identifier: Administrators
                type: role
                value: Administrators
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
              example: '{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper."}]}]},"created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
        '413':
          description: |-
            Returned if the per-issue limit has been breached for one of the following fields:

             *  comments
             *  attachments
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment:jira
        - read:comment.property:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:comment:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /permissionscheme/{schemeId}/permission:
    get:
      tags:
      - Permission schemes
      summary: Get permission scheme grants
      description: |-
        Returns all permission grants for a permission scheme.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getPermissionSchemeGrants
      parameters:
      - name: schemeId
        in: path
        description: The ID of the permission scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:

           *  `permissions` Returns all permission grants for each permission scheme.
           *  `user` Returns information about the user who is granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `field` Returns information about the custom field granted the permission.
           *  `all` Returns all expandable information
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGrants'
              example: '{"expand":"user,group,projectRole,field,all","permissions":[{"holder":{"expand":"group","parameter":"jira-core-users","type":"group","value":"ca85fac0-d974-40ca-a615-7af99c48d24f"},"id":10000,"permission":"ADMINISTER_PROJECTS","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the permission schemes is not found or the user
            does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Permission schemes
      summary: Create permission grant
      description: |-
        Creates a permission grant in a permission scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createPermissionGrant
      parameters:
      - name: schemeId
        in: path
        description: The ID of the permission scheme in which to create a new permission
          grant
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:

           *  `permissions` Returns all permission grants for each permission scheme.
           *  `user` Returns information about the user who is granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `field` Returns information about the custom field granted the permission.
           *  `all` Returns all expandable information
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The permission grant to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionGrant'
            example:
              holder:
                parameter: jira-core-users
                type: group
                value: ca85fac0-d974-40ca-a615-7af99c48d24f
              permission: ADMINISTER_PROJECTS
        required: true
      responses:
        '201':
          description: Returned if the scheme permission is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGrant'
              example: '{"holder":{"expand":"group","parameter":"jira-core-users","type":"group","value":"ca85fac0-d974-40ca-a615-7af99c48d24f"},"id":10000,"permission":"ADMINISTER_PROJECTS","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000"}'
        '400':
          description: Returned if the value for expand is invalid or the same permission
            grant is present.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        - write:permission:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/watching:
    post:
      tags:
      - Issue watchers
      summary: Get is watching issue bulk
      description: |-
        Returns, for the user, details of the watched status of issues from a list. If an issue ID is invalid, the returned watched status is `false`.

        This operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getIsWatchingIssueBulk
      parameters: [
        ]
      requestBody:
        description: A list of issue IDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueList'
            example:
              issueIds:
              - '10001'
              - '10002'
              - '10005'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkIssueIsWatching'
              example: '{"issuesIsWatching":{"10001":true,"10002":false,"10005":true}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.watcher:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /issue/{issueIdOrKey}/comment/{id}:
    get:
      tags:
      - Issue comments
      summary: Get comment
      description: |-
        Returns a comment.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.
      operationId: getComment
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the comment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          comments in the response. This parameter accepts `renderedBody`, which returns
          the comment body rendered in HTML
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
              example: '{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper."}]}]},"created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue or comment is not found or the user does
            not have permission to view the issue or comment.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment:jira
        - read:comment.property:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue comments
      summary: Update comment
      description: |-
        Updates a comment.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  *Edit all comments*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any comment or *Edit own comments* to update comment created by the user.
         *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.

        **WARNING:** Child comments inherit visibility from their parent comment. Attempting to update a child comment's visibility will result in a 400 (Bad Request) error.
      operationId: updateComment
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the comment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notifyUsers
        in: query
        description: Whether users are notified when a comment is updated
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: overrideEditableFlag
        in: query
        description: Whether screen security is overridden to enable uneditable fields
          to be edited. Available to Connect app users with the *Administer Jira*
          [global permission](https://confluence.atlassian.com/x/x4dKLg) and Forge
          apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          comments in the response. This parameter accepts `renderedBody`, which returns
          the comment body rendered in HTML
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
            example:
              body:
                content:
                - content:
                  - text: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                      Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis
                      fermentum. Sed semper quam laoreet nisi egestas at posuere augue
                      semper.
                    type: text
                  type: paragraph
                type: doc
                version: 1
              visibility:
                identifier: Administrators
                type: role
                value: Administrators
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
              example: '{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper."}]}]},"created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}'
        '400':
          description: Returned if the user does not have permission to edit the comment
            or the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue or comment is not found or the user does
            not have permission to view the issue or comment.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment:jira
        - read:comment.property:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:comment:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue comments
      summary: Delete comment
      description: |-
        Deletes a comment.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  *Delete all comments*[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any comment or *Delete own comments* to delete comment created by the user,
         *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to.
      operationId: deleteComment
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the comment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the user does not have permission to delete the
            comment.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue or comment is not found or the user does
            not have permission to view the issue or comment.
        '405':
          description: Returned if an anonymous call is made to the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:comment:jira
        - delete:comment.property:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /field/{id}:
    delete:
      tags:
      - Issue fields
      summary: Delete custom field
      description: |-
        Deletes a custom field. The custom field is deleted whether it is in the trash or not. See [Edit or delete a custom field](https://confluence.atlassian.com/x/Z44fOw) for more information on trashing and deleting custom fields.

        This operation is [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteCustomField
      parameters:
      - name: id
        in: path
        description: The ID of a custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '303':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
        '400':
          description: |-
            Returned if any of these are true:

             *  The custom field is locked.
             *  The custom field is used in a issue security scheme or a permission scheme.
             *  The custom field ID format is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the custom field is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if a task to delete the custom field is running.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /plans/plan/{planId}/team/planonly/{planOnlyTeamId}:
    get:
      tags:
      - Teams in plan
      summary: Get plan-only team
      description: |-
        Returns planning settings for a plan-only team.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getPlanOnlyTeam
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: planOnlyTeamId
        in: path
        description: The ID of the plan-only team
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlanOnlyTeamResponse'
              example: '{"capacity":30.0,"id":123,"issueSourceId":1,"memberAccountIds":["mek2-3jno-01n3","kdsn-2nk3-2nn1"],"name":"Team1","planningStyle":"Scrum","sprintLength":2}'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan or plan-only team is not found, or the
            plan-only team is not associated with the plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Teams in plan
      summary: Update plan-only team
      description: |-
        Updates any of the following planning settings of a plan-only team using [JSON Patch](https://datatracker.ietf.org/doc/html/rfc6902).

         *  name
         *  planningStyle
         *  issueSourceId
         *  sprintLength
         *  capacity
         *  memberAccountIds

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).

        *Note that "add" operations do not respect array indexes in target locations. Call the "Get plan-only team" endpoint to find out the order of array elements.*
      operationId: updatePlanOnlyTeam
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: planOnlyTeamId
        in: path
        description: The ID of the plan-only team
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: object
            example: |
              [{"op": "replace", "path": "/planningStyle", "value": "Kanban"}]
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan or plan-only team is not found, or the
            plan-only team is not associated with the plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Teams in plan
      summary: Delete plan-only team
      description: |-
        Deletes a plan-only team and their planning settings.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deletePlanOnlyTeam
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: planOnlyTeamId
        in: path
        description: The ID of the plan-only team
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan or plan-only team is not found, or the
            plan-only team is not associated with the plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /project/{projectId}/hierarchy:
    get:
      tags:
      - Projects
      summary: Get project issue type hierarchy
      description: |-
        Get the issue type hierarchy for a next-gen project.

        The issue type hierarchy for a project consists of:

         *  *Epic* at level 1 (optional).
         *  One or more issue types at level 0 such as *Story*, *Task*, or *Bug*. Where the issue type *Epic* is defined, these issue types are used to break down the content of an epic.
         *  *Subtask* at level -1 (optional). This issue type enables level 0 issue types to be broken down into components. Issues based on a level -1 issue type must have a parent issue.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getHierarchy
      parameters:
      - name: projectId
        in: path
        description: The ID of the project
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectIssueTypeHierarchy'
              example: '{"hierarchy":[{"issueTypes":[{"avatarId":10324,"entityId":"ce32639b-8911-4689-81da-65681f451516","id":10008,"name":"Story"},{"avatarId":10324,"entityId":"ffdbced5-fbfc-4370-a848-94e2ce3751af","id":10001,"name":"Bug"}],"level":0,"name":"Base"},{"issueTypes":[{"avatarId":10179,"entityId":"80f20d47-34dc-4680-8937-936b7e762a35","id":10007,"name":"Epic"}],"level":1,"name":"Epic"},{"issueTypes":[{"avatarId":10573,"entityId":"210b4879-15cc-414c-9746-f8f6b6be0a72","id":10009,"name":"Subtask"}],"level":-1,"name":"Subtask"}],"projectId":10030}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:issue-type-hierarchy:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /instance/license:
    get:
      tags:
      - License metrics
      summary: Get license
      description: |-
        Returns licensing information about the Jira instance.

        **[Permissions](#permissions) required:** None.
      operationId: getLicense
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/License'
              example: '{"applications":[{"id":"jira-core","plan":"PAID"},{"id":"jira-product-discovery","plan":"FREE"},{"id":"jira-servicedesk","plan":"FREE"},{"id":"jira-software","plan":"PAID"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:license:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /user/search:
    get:
      tags:
      - User search
      summary: Find users
      description: |-
        Returns a list of active users that match the search string and property.

        This operation first applies a filter to match the search string and property, and then takes the filtered users in the range defined by `startAt` and `maxResults`, up to the thousandth user. To get all the users who match the search string and property, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.

        This operation can be accessed anonymously.

        Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls or calls by users without the required permission return empty search results.
      operationId: findUsers
      parameters:
      - name: query
        in: query
        description: A query string that is matched against user attributes ( `displayName`,
          and `emailAddress`) to find relevant users. The string can match the prefix
          of the attribute's value. For example, *query=john* matches a user with
          a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*.
          Required, unless `accountId` or `property` is specified
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: query
        x-showInExample: 'true'
      - name: username
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountId
        in: query
        description: A query string that is matched exactly against a user `accountId`.
          Required, unless `query` or `property` is specified
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of filtered results
          (page offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: property
        in: query
        description: 'A query string used to search properties. Property keys are
          specified by path, so property keys containing dot (.) or equals (=) characters
          cannot be used. The query string cannot be specified using a JSON object.
          Example: To search for the value of `nested` from `{"something":{"nested":1,"other":2}}`
          use `thepropertykey.something.nested=1`. Required, unless `accountId` or
          `query` is specified'
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example: '[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},{"accountId":"5b10ac8d82e05b22cc7d4ef5","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48"},"displayName":"Emma
                Richards","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5"}]'
        '400':
          description: |-
            Returned if:

             *  `accountId`, `query` or `property` is missing.
             *  `query` and `accountId` are provided.
             *  `property` parameter is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '429':
          description: Returned if the rate limit is exceeded. User search endpoints
            share a collective rate limit for the tenant, in addition to Jira's normal
            rate limiting you may receive a rate limit for user search. Please respect
            the Retry-After header.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:user.property:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/type/accessible:
    get:
      tags:
      - Project types
      summary: Get licensed project types
      description: Returns all [project types](https://confluence.atlassian.com/x/Var1Nw)
        with a valid license.
      operationId: getAllAccessibleProjectTypes
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectType'
              example: '[{"color":"#FFFFFF","descriptionI18nKey":"jira.project.type.business.description","formattedKey":"Business","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"business"},{"color":"#AAAAAA","descriptionI18nKey":"jira.project.type.software.description","formattedKey":"Software","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"software"}]'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-type:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /resolution/{id}:
    get:
      tags:
      - Issue resolutions
      summary: Get resolution
      description: |-
        Returns an issue resolution value.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getResolution
      parameters:
      - name: id
        in: path
        description: The ID of the issue resolution value
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resolution'
              example: '{"description":"A fix for this issue is checked into the tree
                and tested.","id":"10000","name":"Fixed","self":"https://your-domain.atlassian.net/rest/api/3/resolution/1"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue resolution value is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:resolution:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue resolutions
      summary: Update resolution
      description: |-
        Updates an issue resolution.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateResolution
      parameters:
      - name: id
        in: path
        description: The ID of the issue resolution
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResolutionDetails'
            example:
              description: My updated resolution description
              name: My updated resolution
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The length of the description must not
                exceed 255 characters."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue resolution isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Resolution with ID 10000 not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue resolutions
      summary: Delete resolution
      description: |-
        Deletes an issue resolution.

        This operation is [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteResolution
      parameters:
      - name: id
        in: path
        description: The ID of the issue resolution
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replaceWith
        in: query
        description: The ID of the issue resolution that will replace the currently
          selected resolution
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '303':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The id has to be provided."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue resolution isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Priority with ID 10000 not found."],"errors":{}}'
        '409':
          description: Returned if a task to delete the issue resolution is already
            running.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /screens/tabs:
    get:
      tags:
      - Screen tabs
      summary: Get bulk screen tabs
      description: |-
        Returns the list of tabs for a bulk of screens.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getBulkScreenTabs
      parameters:
      - name: screenId
        in: query
        description: The list of screen IDs. To include multiple screen IDs, provide
          an ampersand-separated list. For example, `screenId=10000&screenId=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: tabId
        in: query
        description: The list of tab IDs. To include multiple tab IDs, provide an
          ampersand-separated list. For example, `tabId=10000&tabId=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResult
        in: query
        description: The maximum number of items to return per page. The maximum number
          is 100,
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":2,"values":[{"screenId":10000,"tabId":10001,"tabName":"My
                Custom Tab 1"},{"screenId":10001,"tabId":10002,"tabName":"My Custom
                Tab 2"}]}'
        '400':
          description: Returned if the screen ID or the tab ID is empty.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:screen-tab:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /workflow/{workflowId}/workflowSchemes:
    get:
      tags:
      - Workflows
      summary: Get workflow schemes which are using a given workflow
      description: Returns a page of workflow schemes using a given workflow.
      operationId: getWorkflowSchemeUsagesForWorkflow
      parameters:
      - name: workflowId
        in: path
        description: The workflow ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nextPageToken
        in: query
        description: The cursor for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of results to return. Must be an integer between
          1 and 200
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSchemeUsageDTO'
              example: '{"workflowId":"fb759d53-a3a4-45ff-9de4-547c4b638dde","workflowSchemes":{"nextPageToken":"eyJvIjoyfQ==","values":[{"id":"1000"}]}}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Invalid format of nextPageToken"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '404':
          description: Returned if the workflow with the given ID does not exist.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /attachment/content/{id}:
    get:
      tags:
      - Issue attachments
      summary: Get attachment content
      description: |-
        Returns the contents of an attachment. A `Range` header can be set to define a range of bytes within the attachment to download. See the [HTTP Range header standard](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range) for details.

        To return a thumbnail of the attachment, use [Get attachment thumbnail](#api-rest-api-3-attachment-thumbnail-id-get).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** For the issue containing the attachment:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If attachments are added in private comments, the comment-level restriction will be applied.
      operationId: getAttachmentContent
      parameters:
      - name: id
        in: path
        description: The ID of the attachment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: redirect
        in: query
        description: Whether a redirect is provided for the attachment download. Clients
          that do not automatically follow redirects can set this to `false` to avoid
          making multiple requests to download the attachment
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        '200':
          description: Returned if the request is successful when `redirect` is set
            to `false`
          content:
            application/json:
              schema:
                type: array
                items: {
                  }
        '206':
          description: Returned if the request is successful when a `Range` header
            is provided and `redirect` is set to `false`.
        '303':
          description: Returned if the request is successful. See the `Location` header
            for the download URL.
        '400':
          description: Returned if the range supplied in the `Range` header is malformed.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: The user does not have the necessary permission.
        '404':
          description: |-
            Returned if:

             *  the attachment is not found.
             *  attachments are disabled in the Jira settings.
        '416':
          description: Returned if the server is unable to satisfy the range of bytes
            provided.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:attachment:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /resolution:
    get:
      tags:
      - Issue resolutions
      summary: Get resolutions
      description: |-
        Returns a list of all issue resolution values.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getResolutions
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resolution'
              example: '[{"description":"A fix for this issue is checked into the
                tree and tested.","id":"10000","name":"Fixed","self":"https://your-domain.atlassian.net/rest/api/3/resolution/1"},{"description":"This
                is what it is supposed to do.","id":"10001","name":"Works as designed","self":"https://your-domain.atlassian.net/rest/api/3/resolution/3"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:resolution:jira
        state: Beta
      x-changes:
      - announced: 2022-10-20T00:00:00Z
        details: https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-767
        effective: 2023-04-20T00:00:00Z
        type: removed
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue resolutions
      summary: Create resolution
      description: |-
        Creates an issue resolution.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createResolution
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResolutionDetails'
            example:
              description: My resolution description
              name: My new resolution
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolutionId'
              example: '{"id":"10001"}'
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The length of the description must not
                exceed 255 characters."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /statuses/search:
    get:
      tags:
      - Status
      summary: Search statuses paginated
      description: |-
        Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of statuses that match a search on name or project.

        **[Permissions](#permissions) required:**

         *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
         *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
      operationId: search
      parameters:
      - name: expand
        in: query
        description: |-
          Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `usages` Returns the project and issue types that use the status in their workflow.
           *  `workflowUsages` Returns the workflows that use the status
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-changes:
        - announced: 2025-02-07T00:00:00Z
          details: https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298
          effective: 2025-07-07T00:00:00Z
          type: removed
      - name: projectId
        in: query
        description: The project the status is part of or null for global statuses
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 200
      - name: searchString
        in: query
        description: Term to match status names against or null to search for all
          statuses in the search scope
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      - name: statusCategory
        in: query
        description: 'Category of the status to filter by. The supported values are:
          `TODO`, `IN_PROGRESS`, and `DONE`'
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfStatuses'
              example: '{"isLast":true,"maxResults":2,"nextPage":"https://your-domain.atlassian.net/rest/api/3/statuses/search?startAt=2&maxResults=2","self":"https://your-domain.atlassian.net/rest/api/3/statuses/search?startAt=0&maxResults=2","startAt":0,"total":5,"values":[{"description":"The
                issue is resolved","id":"1000","name":"Finished","scope":{"project":{"id":"1"},"type":"PROJECT"},"statusCategory":"DONE","usages":[{"issueTypes":["10002"],"project":{"id":"1"}}],"workflowUsages":[{"workflowId":"545d80a3-91ff-4949-8b0d-a2bc484e70e5","workflowName":"Workflow
                1"}]}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /workflow/transitions/{transitionId}/properties:
    get:
      tags:
      - Workflow transition properties
      summary: Get workflow transition properties
      description: |-
        This will be removed on [June 1, 2026](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2570); fetch transition properties from [Bulk get workflows](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflows/#api-rest-api-3-workflows-post) instead.

        Returns the properties on a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getWorkflowTransitionProperties
      parameters:
      - name: transitionId
        in: path
        description: The ID of the transition. To get the ID, view the workflow in
          text mode in the Jira administration console. The ID is shown next to the
          transition
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: includeReservedKeys
        in: query
        description: Some properties with keys that have the *jira.* prefix are reserved,
          which means they are not editable. To include these properties in the results,
          set this parameter to *true*
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: key
        in: query
        description: The key of the property being returned, also known as the name
          of the property. If this parameter is not specified, all properties on the
          transition are returned
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: workflowName
        in: query
        description: The name of the workflow that the transition belongs to
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: workflowMode
        in: query
        description: The workflow status. Set to *live* for active and inactive workflows,
          or *draft* for draft workflows
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - live
          - draft
          default: live
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTransitionProperty'
              example: '[{"id":"jira.i18n.title","key":"jira.i18n.title","value":"some.title"},{"id":"jira.permission","key":"jira.permission","value":"createissue"}]'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have admin permission
        '404':
          description: Returned if the workflow transition or property is not found.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow.property:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow transition properties
      summary: Update workflow transition property
      description: |-
        This will be removed on [June 1, 2026](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2570); update transition properties using [Bulk update workflows](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflows/#api-rest-api-3-workflows-update-post) instead.

        Updates a workflow transition by changing the property value. Trying to update a property that does not exist results in a new property being added to the transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateWorkflowTransitionProperty
      parameters:
      - name: transitionId
        in: path
        description: The ID of the transition. To get the ID, view the workflow in
          text mode in the Jira admin settings. The ID is shown next to the transition
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: key
        in: query
        description: The key of the property being updated, also known as the name
          of the property. Set this to the same value as the `key` defined in the
          request body
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: workflowName
        in: query
        description: The name of the workflow that the transition belongs to
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: workflowMode
        in: query
        description: The workflow status. Set to `live` for inactive workflows or
          `draft` for draft workflows. Active workflows cannot be edited
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - live
          - draft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTransitionProperty'
            example:
              value: createissue
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTransitionProperty'
              example: '{"key":"jira.i18n.title","value":"some.title","id":"jira.i18n.title"}'
        '304':
          description: Returned if no changes were made by the request. For example,
            attempting to update a property with its current value.
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow transition is not found.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow.property:jira
        - read:workflow.property:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Workflow transition properties
      summary: Create workflow transition property
      description: |-
        This will be removed on [June 1, 2026](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2570); add transition properties using [Bulk update workflows](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflows/#api-rest-api-3-workflows-update-post) instead.

        Adds a property to a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createWorkflowTransitionProperty
      parameters:
      - name: transitionId
        in: path
        description: The ID of the transition. To get the ID, view the workflow in
          text mode in the Jira admin settings. The ID is shown next to the transition
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: key
        in: query
        description: The key of the property being added, also known as the name of
          the property. Set this to the same value as the `key` defined in the request
          body
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: workflowName
        in: query
        description: The name of the workflow that the transition belongs to
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: workflowMode
        in: query
        description: The workflow status. Set to *live* for inactive workflows or
          *draft* for draft workflows. Active workflows cannot be edited
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - live
          - draft
          default: live
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTransitionProperty'
            example:
              value: createissue
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTransitionProperty'
              example: '{"key":"jira.i18n.title","value":"some.title","id":"jira.i18n.title"}'
        '400':
          description: Returned if a workflow property with the same key is present
            on the transition.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow transition is not found.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow.property:jira
        - read:workflow.property:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Workflow transition properties
      summary: Delete workflow transition property
      description: |-
        This will be removed on [June 1, 2026](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2570); delete transition properties using [Bulk update workflows](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflows/#api-rest-api-3-workflows-update-post) instead.

        Deletes a property from a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteWorkflowTransitionProperty
      parameters:
      - name: transitionId
        in: path
        description: The ID of the transition. To get the ID, view the workflow in
          text mode in the Jira admin settings. The ID is shown next to the transition
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: key
        in: query
        description: The name of the transition property to delete, also known as
          the name of the property
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: workflowName
        in: query
        description: The name of the workflow that the transition belongs to
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: workflowMode
        in: query
        description: The workflow status. Set to `live` for inactive workflows or
          `draft` for draft workflows. Active workflows cannot be edited
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - live
          - draft
      responses:
        '200':
          description: 200 response
        '304':
          description: Returned if no changes were made by the request. For example,
            trying to delete a property that cannot be found.
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow transition is not found.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:workflow.property:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/assignee:
    put:
      tags:
      - Issues
      summary: Assign issue
      description: |-
        Assigns an issue to a user. Use this operation when the calling user does not have the *Edit Issues* permission but has the *Assign issue* permission for the project that the issue is in.

        If `name` or `accountId` is set to:

         *  `"-1"`, the issue is assigned to the default assignee for the project.
         *  `null`, the issue is set to unassigned.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse Projects* and *Assign Issues* [ project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: assignIssue
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue to be assigned
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The request object with the user that the issue is assigned to
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              accountId: 5b10ac8d82e05b22cc7d4ef5
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: |-
            Returned if:

             *  the user is not found.
             *  `name`, `key`, or `accountId` is missing.
             *  more than one of `name`, `key`, and `accountId` are provided.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the issue is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /user/nav4-opt-property/{propertyKey}:
    get:
      tags:
      - usernavproperties
      summary: Get user nav property
      description: |-
        Returns the value of a user nav preference.

        Note: This operation fetches the property key value directly from RbacClient.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get a property from any user.
         *  Access to Jira, to get a property from the calling user's record.
      operationId: getUserNavProperty
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: propertyKey
        in: path
        description: The key of the user's property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNavPropertyJsonBean'
        '400':
          description: Returned if `accountId` is missing or `propertyKey` is missing.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or is not accessing their user record.
        '404':
          description: Returned if either the user or property key is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - usernavproperties
      summary: Set user nav property
      description: |-
        Sets the value of a Nav4 preference. Use this resource to store Nav4 preference data against a user in the Identity service.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set a property on any user.
         *  Access to Jira, to set a property on the calling user's record.
      operationId: setUserNavProperty
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: propertyKey
        in: path
        description: The key of the nav property. The maximum length is 255 characters
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The value of the property. The value has to be a boolean [JSON](https://tools.ietf.org/html/rfc4627)
          value. The maximum length of the property value is 32768 bytes
        content:
          application/json:
            schema: {
              }
        required: true
      responses:
        '200':
          description: Returned if the user property is updated/created
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if `accountId` is missing.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or is not accessing their user record.
        '404':
          description: Returned if the user is not found.
        '405':
          description: Returned if the property key is not specified.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:user.property:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /field/{fieldKey}/option/suggestions/edit:
    get:
      tags:
      - Issue custom field options (apps)
      summary: Get selectable issue field options
      description: |-
        Returns a [paginated](#pagination) list of options for a select list issue field that can be viewed and selected by the user.

        Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getSelectableIssueFieldOptions
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: projectId
        in: query
        description: Filters the results to options that are only available in the
          specified project
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: fieldKey
        in: path
        description: |-
          The field key is specified in the following format: **$(app-key)\_\_$(field-key)**. For example, *example-add-on\_\_example-issue-field*. To determine the `fieldKey` value, do one of the following:

           *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
           *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueFieldOption'
              example: '{"isLast":false,"maxResults":1,"nextPage":"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=1&maxResults=1","self":"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=0&maxResults=1","startAt":0,"total":10,"values":[{"id":1,"value":"Team
                1","properties":{"leader":{"name":"Leader Name","email":"lname@example.com"},"members":42,"description":"The
                team''s description","founded":"2016-06-06"}}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the field is not found or does not support options.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field.option:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /priority/search:
    get:
      tags:
      - Issue priorities
      summary: Search priorities
      description: |-
        Returns a [paginated](#pagination) list of priorities. The list can contain all priorities or a subset determined by any combination of these criteria:

         *  a list of priority IDs. Any invalid priority IDs are ignored.
         *  a list of project IDs. Only priorities that are available in these projects will be returned. Any invalid project IDs are ignored.
         *  whether the field configuration is a default. This returns priorities from company-managed (classic) projects only, as there is no concept of default priorities in team-managed projects.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: searchPriorities
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: id
        in: query
        description: The list of priority IDs. To include multiple IDs, provide an
          ampersand-separated list. For example, `id=2&id=3`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: ''
      - name: projectId
        in: query
        description: The list of projects IDs. To include multiple IDs, provide an
          ampersand-separated list. For example, `projectId=10010&projectId=10111`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: ''
      - name: priorityName
        in: query
        description: The name of priority to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: onlyDefault
        in: query
        description: Whether only the default priority is returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: expand
        in: query
        description: Use `schemes` to return the associated priority schemes for each
          priority. Limited to returning first 15 priority schemes per priority
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanPriority'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":2,"values":[{"description":"Major
                loss of function.","iconUrl":"https://your-domain.atlassian.net/images/icons/priorities/major.png","id":"1","isDefault":true,"name":"Major","self":"https://your-domain.atlassian.net/rest/api/3/priority/3","statusColor":"#009900"},{"description":"Very
                little impact.","iconUrl":"https://your-domain.atlassian.net/images/icons/priorities/trivial.png","id":"2","isDefault":false,"name":"Trivial","self":"https://your-domain.atlassian.net/rest/api/3/priority/5","statusColor":"#cfcfcf"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-changes:
      - announced: 2024-05-22T00:00:00Z
        details: https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-1655
        effective: 2024-11-22T00:00:00Z
        type: removed
      x-atlassian-connect-scope: READ
  /workflowscheme/update:
    post:
      tags:
      - Workflow schemes
      summary: Update workflow scheme
      description: |-
        Updates company-managed and team-managed project workflow schemes. This API doesn't have a concept of draft, so any changes made to a workflow scheme are immediately available. When changing the available statuses for issue types, an [asynchronous task](#async) migrates the issues as defined in the provided mappings.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* project permission to update all, including global-scoped, workflow schemes.
         *  *Administer projects* project permission to update project-scoped workflow schemes.
      operationId: updateSchemes
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowSchemeUpdateRequest'
            example:
              defaultWorkflowId: 3e59db0f-ed6c-47ce-8d50-80c0c4572677
              description: description
              id: '10000'
              name: name
              statusMappingsByIssueTypeOverride:
              - issueTypeId: '10001'
                statusMappings:
                - newStatusId: '2'
                  oldStatusId: '1'
                - newStatusId: '4'
                  oldStatusId: '3'
              - issueTypeId: '10002'
                statusMappings:
                - newStatusId: '4'
                  oldStatusId: '1'
                - newStatusId: '2'
                  oldStatusId: '3'
              statusMappingsByWorkflows:
              - newWorkflowId: 3e59db0f-ed6c-47ce-8d50-80c0c4572677
                oldWorkflowId: 3e59db0f-ed6c-47ce-8d50-80c0c4572677
                statusMappings:
                - newStatusId: '2'
                  oldStatusId: '1'
                - newStatusId: '4'
                  oldStatusId: '3'
              version:
                id: 527213fc-bc72-400f-aae0-df8d88db2c8a
                versionNumber: 1
              workflowsForIssueTypes:
              - issueTypeIds:
                - '10000'
                - '10003'
                workflowId: 3e59db0f-ed6c-47ce-8d50-80c0c4572677
              - issueTypeIds:
                - 10001`
                - '10002'
                workflowId: 3f83dg2a-ns2n-56ab-9812-42h5j1461629
        required: true
      responses:
        '200':
          description: Returned if the request is successful and there is no asynchronous
            task
          content:
            application/json:
              schema: {
                }
        '303':
          description: Returned if the request is successful and there is an asynchronous
            task for the migrations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '409':
          description: Returned if another workflow configuration update task is ongoing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{fieldId}/context/{contextId}/option/{optionId}/issue:
    delete:
      tags:
      - Issue custom field options
      summary: Replace custom field options
      description: |-
        Replaces the options of a custom field.

        Note that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect or Forge apps.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: replaceCustomFieldOption
      parameters:
      - name: replaceWith
        in: query
        description: The ID of the option that will replace the currently selected
          option
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: jql
        in: query
        description: A JQL query that specifies the issues to be updated. For example,
          *project=10000*
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: optionId
        in: path
        description: The ID of the option to be deselected
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '303':
          description: Returned if the long-running task to deselect the option is
            started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanRemoveOptionFromIssuesResult'
              example: '{"self":"https://your-domain.atlassian.net/rest/api/3/task/1","id":"1","description":"Remove
                option 1 from issues matched by ''*'', and replace with option 3","status":"COMPLETE","result":{"errors":{"errorMessages":["Option
                2 cannot be set on issue MKY-5 as it is not in the correct scope"],"errors":{},"httpStatusCode":{"empty":false,"present":true}},"modifiedIssues":[10001,10010],"unmodifiedIssues":[10005]},"elapsedRuntime":42}'
        '400':
          description: Returned if the request is not valid.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Connect and Forge app users with Administer
                Jira global permission can override screen security."],"errors":{}}'
        '404':
          description: Returned if the field is not found or does not support options,
            or the options to be replaced are not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field.option:jira
        - write:field.option:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{fieldId}/context/{contextId}/issuetype/remove:
    post:
      tags:
      - Issue custom field contexts
      summary: Remove issue types from context
      description: |-
        Removes issue types from a custom field context.

        A custom field context without any issue types applies to all issue types.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeIssueTypesFromContext
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeIds'
            example:
              issueTypeIds:
              - '10001'
              - '10005'
              - '10006'
        required: true
      responses:
        '204':
          description: Returned if operation is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["These issue types are not associated with
                the context: 10002."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field, context, or one or more issue
            types are not found.
          content:
            application/json:
              example: '{"errorMessages":["The context was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /version/{versionId}/relatedwork/{relatedWorkId}:
    delete:
      tags:
      - Project versions
      summary: Delete related work
      description: |-
        Deletes the given related work for the given version.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Resolve issues:* and *Edit issues* [Managing project permissions](https://confluence.atlassian.com/adminjiraserver/managing-project-permissions-938847145.html) for the project that contains the version.
      operationId: deleteRelatedWork
      parameters:
      - name: versionId
        in: path
        description: The ID of the version that the target related work belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: relatedWorkId
        in: path
        description: The ID of the related work to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the related work is deleted
        '400':
          description: Returned if the request is invalid.
        '401':
          description: |-
            Returned if

            the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have the required permissions.
        '404':
          description: Returned if the version/related work is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /atlassian-connect/1/migration/field:
    put:
      tags:
      - App migration
      summary: Bulk update custom field value
      description: |-
        Updates the value of a custom field added by Connect apps on one or more issues.
        The values of up to 200 custom fields can be updated.

        **[Permissions](#permissions) required:** Only Connect apps can make this request
      operationId: AppIssueFieldValueUpdateResource.updateIssueFields_put
      parameters:
      - name: Atlassian-Transfer-Id
        in: header
        description: The ID of the transfer
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        x-ballerina-name: atlassianTransferId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectCustomFieldValues'
            example:
              updateValueList:
              - _type: StringIssueField
                issueID: 10001
                fieldID: 10076
                string: new string value
              - _type: TextIssueField
                issueID: 10002
                fieldID: 10077
                text: new text value
              - _type: SingleSelectIssueField
                issueID: 10003
                fieldID: 10078
                optionID: '1'
              - _type: MultiSelectIssueField
                issueID: 10004
                fieldID: 10079
                optionID: '2'
              - _type: RichTextIssueField
                issueID: 10005
                fieldID: 10080
                richText: new rich text value
              - _type: NumberIssueField
                issueID: 10006
                fieldID: 10082
                number: 54
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '403':
          description: |-
            Returned if:
            * the transfer ID is not found.
            * the authorisation credentials are incorrect or missing.
      deprecated: false
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: NONE
  /projectCategory/{id}:
    get:
      tags:
      - Project categories
      summary: Get project category by ID
      description: |-
        Returns a project category.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getProjectCategoryById
      parameters:
      - name: id
        in: path
        description: The ID of the project category
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCategory'
              example: '{"description":"First Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project category is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Project categories
      summary: Update project category
      description: |-
        Updates a project category.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateProjectCategory
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCategory'
            example:
              description: Updated Project Category
              name: UPDATED
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedProjectCategory'
              example: '{"description":"Updated Project Category","id":"10100","name":"UPDATED","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10100"}'
        '400':
          description: |-
            Returned if:

             *  `name` has been modified and exceeds 255 characters.
             *  `description` has been modified and exceeds 1000 characters.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the project category is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-category:jira
        - write:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Project categories
      summary: Delete project category
      description: |-
        Deletes a project category.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeProjectCategory
      parameters:
      - name: id
        in: path
        description: ID of the project category to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the project category is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /settings/columns:
    get:
      tags:
      - Issue navigator settings
      summary: Get issue navigator default columns
      description: |-
        Returns the default issue navigator columns.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueNavigatorDefaultColumns
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ColumnItem'
              example: '[{"label":"Key","value":"issuekey"},{"label":"Summary","value":"summary"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
    put:
      tags:
      - Issue navigator settings
      summary: Set issue navigator default columns
      description: |-
        Sets the default issue navigator columns.

        The `columns` parameter accepts a navigable field value and is expressed as HTML form data. To specify multiple columns, pass multiple `columns` parameters. For example, in curl:

        `curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/settings/columns`

        If no column details are sent, then all default columns are removed.

        A navigable field is one that can be used as a column on the issue navigator. Find details of navigable issue columns using [Get fields](#api-rest-api-3-field-get).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setIssueNavigatorDefaultColumns
      parameters: [
        ]
      requestBody:
        description: A navigable field value
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ColumnRequestBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ColumnRequestBody'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
        '400':
          description: Returned if invalid parameters are passed.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if a navigable field value is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
  /projectvalidate/validProjectKey:
    get:
      tags:
      - Project key and name validation
      summary: Get valid project key
      description: |-
        Validates a project key and, if the key is invalid or in use, generates a valid random string for the project key.

        **[Permissions](#permissions) required:** None.
      operationId: getValidProjectKey
      parameters:
      - name: key
        in: query
        description: The project key
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: HSP
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: string
              example: '"VPNE"'
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /filter/my:
    get:
      tags:
      - Filters
      summary: Get my filters
      description: |-
        Returns the filters owned by the user. If `includeFavourites` is `true`, the user's visible favorite filters are also returned.

        **[Permissions](#permissions) required:** Permission to access Jira, however, a favorite filters is only visible to the user where the filter is:

         *  owned by the user.
         *  shared with a group that the user is a member of.
         *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  shared with a public project.
         *  shared with the public.

        For example, if the user favorites a public filter that is subsequently made private that filter is not returned by this operation.
      operationId: getMyFilters
      parameters:
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
           *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeFavourites
        in: query
        description: Include the user's favorite filters in the response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Filter'
              example: '[{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"},{"approximateLastUsed":null,"description":"Issues
                assigned to me","favourite":true,"favouritedCount":0,"id":"10010","jql":"assignee
                = currentUser() and resolution is empty","name":"My issues","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10010","sharePermissions":[{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"}],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10010"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:jql:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /dashboard/{dashboardId}/gadget/{gadgetId}:
    put:
      tags:
      - Dashboards
      summary: Update gadget on dashboard
      description: |-
        Changes the title, position, and color of the gadget on a dashboard.

        **[Permissions](#permissions) required:** None.
      operationId: updateGadget
      parameters:
      - name: dashboardId
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: gadgetId
        in: path
        description: The ID of the gadget
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardGadgetUpdateRequest'
            example:
              color: red
              position:
                column: 1
                row: 1
              title: My new gadget title
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The gadget cannot be placed in the selected
                row. The selected row does not exist on the dashboard."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if the gadget or the dashboard is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The dashboard you requested either does
                not exist or you don''t have the required permissions to perform this
                action."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:dashboard:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Dashboards
      summary: Remove gadget from dashboard
      description: |-
        Removes a dashboard gadget from a dashboard.

        When a gadget is removed from a dashboard, other gadgets in the same column are moved up to fill the emptied position.

        **[Permissions](#permissions) required:** None.
      operationId: removeGadget
      parameters:
      - name: dashboardId
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: gadgetId
        in: path
        description: The ID of the gadget
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the gadget or the dashboard is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The dashboard gadget was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:dashboard:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: DELETE
  /comment/{commentId}/properties:
    get:
      tags:
      - Issue comment properties
      summary: Get comment property keys
      description: |-
        Returns the keys of all the properties of a comment.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: getCommentPropertyKeys
      parameters:
      - name: commentId
        in: path
        description: The ID of the comment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeys'
              example: '{"keys":[{"key":"issue.support","self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support"}]}'
        '400':
          description: Returned if the comment ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the comment is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /projectvalidate/key:
    get:
      tags:
      - Project key and name validation
      summary: Validate project key
      description: |-
        Validates a project key by confirming the key is a valid string and not in use.

        **[Permissions](#permissions) required:** None.
      operationId: validateProjectKey
      parameters:
      - name: key
        in: query
        description: The project key
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: HSP
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":[],"errors":{"projectKey":"A project with
                that project key already exists."}}'
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /field/{id}ore:
    post:
      tags:
      - Issue fields
      summary: Restore custom field from trash
      description: |-
        Restores a custom field from trash. See [Edit or delete a custom field](https://confluence.atlassian.com/x/Z44fOw) for more information on trashing and deleting custom fields.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: restoreCustomField
      parameters:
      - name: id
        in: path
        description: The ID of a custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the custom field is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/bulk:
    post:
      tags:
      - Issues
      summary: Bulk create issue
      description: |-
        Creates upto **50** issues and, where the option to create subtasks is enabled in Jira, subtasks. Transitions may be applied, to move the issues or subtasks to a workflow step other than the default start step, and issue properties set.

        The content of each issue or subtask is defined using `update` and `fields`. The fields that can be set in the issue or subtask are determined using the [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get). These are the same fields that appear on the issues' create screens. Note that the `description`, `environment`, and any `textarea` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (`textfield`) accept a string and don't handle Atlassian Document Format content.

        Creating a subtask differs from creating an issue as follows:

         *  `issueType` must be set to a subtask issue type (use [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get) to find subtask issue types).
         *  `parent` the must contain the ID or key of the parent issue.

        **[Permissions](#permissions) required:** *Browse projects* and *Create issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project in which each issue or subtask is created.
      operationId: createIssues
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssuesUpdateBean'
            example:
              issueUpdates:
              - fields:
                  assignee:
                    id: 5b109f2e9729b51b54dc274d
                  components:
                  - id: '10000'
                  customfield_10000: 09/Jun/19
                  customfield_20000: 06/Jul/19 3:25 PM
                  customfield_30000:
                  - '10000'
                  - '10002'
                  customfield_40000:
                    content:
                    - content:
                      - text: Occurs on all orders
                        type: text
                      type: paragraph
                    type: doc
                    version: 1
                  customfield_50000:
                    content:
                    - content:
                      - text: Could impact day-to-day work.
                        type: text
                      type: paragraph
                    type: doc
                    version: 1
                  customfield_60000: jira-software-users
                  customfield_70000:
                  - jira-administrators
                  - jira-software-users
                  customfield_80000:
                    value: red
                  description:
                    content:
                    - content:
                      - text: Order entry fails when selecting supplier.
                        type: text
                      type: paragraph
                    type: doc
                    version: 1
                  duedate: 2011-03-11T00:00:00Z
                  environment:
                    content:
                    - content:
                      - text: UAT
                        type: text
                      type: paragraph
                    type: doc
                    version: 1
                  fixVersions:
                  - id: '10001'
                  issuetype:
                    id: '10000'
                  labels:
                  - bugfix
                  - blitz_test
                  priority:
                    id: '20000'
                  project:
                    id: '10000'
                  reporter:
                    id: 5b10a2844c20165700ede21g
                  security:
                    id: '10000'
                  summary: Main order flow broken
                  timetracking:
                    originalEstimate: '10'
                    remainingEstimate: '5'
                  versions:
                  - id: '10000'
                update:
                  worklog:
                  - add:
                      started: 2019-07-05T11:05:00.000+0000
                      timeSpent: 60m
              - fields:
                  assignee:
                    id: 5b109f2e9729b51b54dc274d
                  components:
                  - id: '10000'
                  customfield_10000: 09/Jun/19
                  customfield_20000: 06/Jul/19 3:25 PM
                  customfield_30000:
                  - '10000'
                  - '10002'
                  customfield_40000:
                    content:
                    - content:
                      - text: Occurs on all orders
                        type: text
                      type: paragraph
                    type: doc
                    version: 1
                  customfield_50000:
                    content:
                    - content:
                      - text: Could impact day-to-day work.
                        type: text
                      type: paragraph
                    type: doc
                    version: 1
                  customfield_60000: jira-software-users
                  customfield_70000:
                  - jira-administrators
                  - jira-software-users
                  customfield_80000:
                    value: red
                  description:
                    content:
                    - content:
                      - text: Order remains pending after approved.
                        type: text
                      type: paragraph
                    type: doc
                    version: 1
                  duedate: 2019-04-16T00:00:00Z
                  environment:
                    content:
                    - content:
                      - text: UAT
                        type: text
                      type: paragraph
                    type: doc
                    version: 1
                  fixVersions:
                  - id: '10001'
                  issuetype:
                    id: '10000'
                  labels:
                  - new_release
                  priority:
                    id: '20000'
                  project:
                    id: '1000'
                  reporter:
                    id: 5b10a2844c20165700ede21g
                  security:
                    id: '10000'
                  summary: Order stuck in pending
                  timetracking:
                    originalEstimate: '15'
                    remainingEstimate: '5'
                  versions:
                  - id: '10000'
                update: {
                  }
        required: true
      responses:
        '201':
          description: |-
            Returned if any of the issue or subtask creation requests were successful. A request may be unsuccessful when it:

             *  is missing required fields.
             *  contains invalid field values.
             *  contains fields that cannot be set for the issue type.
             *  is by a user who does not have the necessary permission.
             *  is to create a subtype in a project different that of the parent issue.
             *  is for a subtask when the option to create subtasks is disabled.
             *  is invalid for any other reason
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedIssues'
              example: '{"issues":[{"id":"10000","key":"ED-24","self":"https://your-domain.atlassian.net/rest/api/3/issue/10000","transition":{"status":200,"errorCollection":{"errorMessages":[],"errors":{}}}},{"id":"10001","key":"ED-25","self":"https://your-domain.atlassian.net/rest/api/3/issue/10001"}],"errors":[]}'
        '400':
          description: |-
            Returned if all requests are invalid. Requests may be unsuccessful when they:

             *  are missing required fields.
             *  contain invalid field values.
             *  contain fields that cannot be set for the issue type.
             *  are by a user who does not have the necessary permission.
             *  are to create a subtype in a project different that of the parent issue.
             *  is for a subtask when the option to create subtasks is disabled.
             *  are invalid for any other reason.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedIssues'
              example: '{"issues":[],"errors":[{"elementErrors":{"errorMessages":[],"errors":{"issuetype":"The
                issue type selected is invalid.","project":"Sub-tasks must be created
                in the same project as the parent."}},"failedElementNumber":0,"status":400},{"elementErrors":{"errorMessages":[],"errors":{"issuetype":"The
                issue type selected is invalid.","project":"Sub-tasks must be created
                in the same project as the parent."}},"failedElementNumber":1,"status":400}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - write:comment:jira
        - write:comment.property:jira
        - write:attachment:jira
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /component/{id}/relatedIssueCounts:
    get:
      tags:
      - Project components
      summary: Get component issues count
      description: |-
        Returns the counts of issues assigned to the component.

        This operation can be accessed anonymously.

        **Deprecation notice:** The required OAuth 2.0 scopes will be updated on June 15, 2024.

         *  **Classic**: `read:jira-work`
         *  **Granular**: `read:field:jira`, `read:project.component:jira`

        **[Permissions](#permissions) required:** None.
      operationId: getComponentRelatedIssues
      parameters:
      - name: id
        in: path
        description: The ID of the component
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentIssuesCount'
              example: '{"issueCount":23,"self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the component is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /license/approximateLicenseCount:
    get:
      tags:
      - License metrics
      summary: Get approximate license count
      description: |-
        Returns the approximate number of user accounts across all Jira licenses. Note that this information is cached with a 7-day lifecycle and could be stale at the time of call.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getApproximateLicenseCount
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMetric'
              example: '{"key":"license.totalApproximateUserCount","value":"1000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollections'
        '403':
          description: Returned if the user does not have permission to complete this
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollections'
              example: '{"errorMessages":["Only Jira administrators can access license
                details."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:license:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /issuesecurityschemes:
    get:
      tags:
      - Issue security schemes
      summary: Get issue security schemes
      description: |-
        Returns all [issue security schemes](https://confluence.atlassian.com/x/J4lKLg).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueSecuritySchemes
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySchemes'
              example: '{"issueSecuritySchemes":[{"defaultSecurityLevelId":10021,"description":"Description
                for the default issue security scheme","id":10000,"name":"Default
                Issue Security Scheme","self":"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have permission to administer
            issue security schemes.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-security-level:jira
        - read:issue-security-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Issue security schemes
      summary: Create issue security scheme
      description: |-
        Creates a security scheme with security scheme levels and levels' members. You can create up to 100 security scheme levels and security scheme levels' members per request.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createIssueSecurityScheme
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueSecuritySchemeDetails'
            example:
              description: Newly created issue security scheme
              levels:
              - description: Newly created level
                isDefault: true
                members:
                - parameter: administrators
                  type: group
                name: New level
              name: New security scheme
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritySchemeId'
              example: '{"id":"10001"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The length of the description must not
                exceed 4,000 characters."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /user/assignable/multiProjectSearch:
    get:
      tags:
      - User search
      summary: Find users assignable to projects
      description: |-
        Returns a list of users who can be assigned issues in one or more projects. The list may be restricted to users whose attributes match a string.

        This operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that can be assigned issues in the projects. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who can be assigned issues in the projects, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.

        Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: findBulkAssignableUsers
      parameters:
      - name: query
        in: query
        description: A query string that is matched against user attributes, such
          as `displayName` and `emailAddress`, to find relevant users. The string
          can match the prefix of the attribute's value. For example, *query=john*
          matches a user with a `displayName` of *John Smith* and a user with an `emailAddress`
          of *johnson@example.com*. Required, unless `accountId` is specified
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: query
        x-showInExample: 'true'
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountId
        in: query
        description: A query string that is matched exactly against user `accountId`.
          Required, unless `query` is specified
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
      - name: projectKeys
        in: query
        description: A list of project keys (case sensitive). This parameter accepts
          a comma-separated list
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example: '[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},{"accountId":"5b10ac8d82e05b22cc7d4ef5","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48"},"displayName":"Emma
                Richards","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5"}]'
        '400':
          description: |-
            Returned if:

             *  `projectKeys` is missing.
             *  `query` or `accountId` is missing.
             *  `query` and `accountId` are provided.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if one or more of the projects is not found.
        '429':
          description: Returned if the rate limit is exceeded. User search endpoints
            share a collective rate limit for the tenant, in addition to Jira's normal
            rate limiting you may receive a rate limit for user search. Please respect
            the Retry-After header.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /jql/pdcleaner:
    post:
      tags:
      - JQL
      summary: Convert user identifiers to account IDs in JQL queries
      description: |-
        Converts one or more JQL queries with user identifiers (username or user key) to equivalent JQL queries with account IDs.

        You may wish to use this operation if your system stores JQL queries and you want to make them GDPR-compliant. For more information about GDPR-related changes, see the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/).

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: migrateQueries
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JQLPersonalDataMigrationRequest'
            example:
              queryStrings:
              - assignee = mia
              - issuetype = Bug AND assignee in (mia) AND reporter in (alana) order
                by lastViewed DESC
        required: true
      responses:
        '200':
          description: Returned if the request is successful. Note that the JQL queries
            are returned in the same order that they were passed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertedJQLQueries'
              example: '{"queriesWithUnknownUsers":[{"convertedQuery":"assignee =
                unknown","originalQuery":"assignee = mia"}],"queryStrings":["issuetype
                = Bug AND assignee in (abcde-12345) AND reporter in (abc551-c4e99)
                order by lastViewed DESC"]}'
        '400':
          description: Returned if at least one of the queries cannot be converted.
            For example, the JQL has invalid operators or invalid keywords, or the
            users in the query cannot be found.
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                type: string
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:jql:jira
        - validate:jql:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /notificationscheme/{id}/notification:
    put:
      tags:
      - Issue notification schemes
      summary: Add notifications to notification scheme
      description: |-
        Adds notifications to a notification scheme. You can add up to 1000 notifications per request.

        *Deprecated: The notification type `EmailAddress` is no longer supported in Cloud. Refer to the [changelog](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-1031) for more details.*

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addNotifications
      parameters:
      - name: id
        in: path
        description: The ID of the notification scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNotificationsDetails'
            example:
              notificationSchemeEvents:
              - event:
                  id: '1'
                notifications:
                - notificationType: Group
                  parameter: jira-administrators
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Event type with ID 2 not found."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the notification scheme isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Notification scheme with ID 10001 not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: ADMIN
  /priorityscheme/priorities/available:
    get:
      tags:
      - Priority schemes
      summary: Get available priorities by priority scheme
      description: |-
        Returns a [paginated](#pagination) list of priorities available for adding to a priority scheme.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getAvailablePrioritiesByPriorityScheme
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: query
        in: query
        description: The string to query priorities on by name
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: schemeId
        in: query
        description: The priority scheme ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: exclude
        in: query
        description: A list of priority IDs to exclude from the results
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanPriorityWithSequence'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":3,"values":[{"description":"Serious
                problem that could block progress.","iconUrl":"/images/icons/priorities/high.svg","id":"1","isDefault":false,"name":"High","statusColor":"#f15C75"},{"description":"Has
                the potential to affect progress.","iconUrl":"/images/icons/priorities/medium.svg","id":"2","isDefault":true,"name":"Medium","statusColor":"#f79232"},{"description":"Minor
                problem or easily worked around.","iconUrl":"/images/icons/priorities/low.svg","id":"3","isDefault":false,"name":"Low","statusColor":"#707070"}]}'
        '400':
          description: Returned if the request isn't valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: READ
  /workflows/update/validation:
    post:
      tags:
      - Workflows
      summary: Validate update workflows
      description: |-
        Validate the payload for bulk update workflows.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* project permission to create all, including global-scoped, workflows
         *  *Administer projects* project permissions to create project-scoped workflows
      operationId: validateUpdateWorkflows
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowUpdateValidateRequestBean'
            example:
              payload:
                statuses:
                - description: ''
                  name: To Do
                  statusCategory: TODO
                  statusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                - description: ''
                  name: In Progress
                  statusCategory: IN_PROGRESS
                  statusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                - description: ''
                  name: Done
                  statusCategory: DONE
                  statusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                workflows:
                - defaultStatusMappings:
                  - newStatusReference: '10011'
                    oldStatusReference: '10010'
                  description: ''
                  id: '10001'
                  startPointLayout:
                    x: -100.00030899047852
                    y: -153.00020599365234
                  statusMappings:
                  - issueTypeId: '10002'
                    projectId: '10003'
                    statusMigrations:
                    - newStatusReference: '10011'
                      oldStatusReference: '10010'
                  statuses:
                  - layout:
                      x: 114.99993896484375
                      y: -16
                    properties: {
                      }
                    statusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                  - layout:
                      x: 317.0000915527344
                      y: -16
                    properties: {
                      }
                    statusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                  - layout:
                      x: 508.000244140625
                      y: -16
                    properties: {
                      }
                    statusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                  transitions:
                  - actions: [
                      ]
                    description: ''
                    id: '1'
                    links: [
                      ]
                    name: Create
                    properties: {
                      }
                    toStatusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                    triggers: [
                      ]
                    type: INITIAL
                    validators: [
                      ]
                  - actions: [
                      ]
                    description: ''
                    id: '11'
                    links: [
                      ]
                    name: To Do
                    properties: {
                      }
                    toStatusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                    triggers: [
                      ]
                    type: GLOBAL
                    validators: [
                      ]
                  - actions: [
                      ]
                    description: ''
                    id: '21'
                    links: [
                      ]
                    name: In Progress
                    properties: {
                      }
                    toStatusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                    triggers: [
                      ]
                    type: GLOBAL
                    validators: [
                      ]
                  - actions: [
                      ]
                    description: Move a work item from in progress to done
                    id: '31'
                    links:
                    - fromPort: 0
                      fromStatusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                      toPort: 1
                    name: Done
                    properties: {
                      }
                    toStatusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                    triggers: [
                      ]
                    type: DIRECTED
                    validators: [
                      ]
                  version:
                    id: 6f6c988b-2590-4358-90c2-5f7960265592
                    versionNumber: 1
              validationOptions:
                levels:
                - ERROR
                - WARNING
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowValidationErrorList'
              example: '{"errors":[{"code":"NON_UNIQUE_STATUS_NAME","elementReference":{"statusReference":"1f0443ff-47e4-4306-9c26-0af696059a43"},"level":"ERROR","message":"You
                must use a unique status name.","type":"STATUS"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}:
    get:
      tags:
      - Issues
      summary: Get issue
      description: |-
        Returns the details for an issue.

        The issue is identified by its ID or key, however, if the identifier doesn't match an issue, a case-insensitive search and check for moved issues is performed. If a matching issue is found its details are returned, a 302 or other redirect is **not** returned. The issue key returned in the response is the key of the issue found.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getIssue
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: fields
        in: query
        description: |-
          A list of fields to return for the issue. This parameter accepts a comma-separated list. Use it to retrieve a subset of fields. Allowed values:

           *  `*all` Returns all fields.
           *  `*navigable` Returns navigable fields.
           *  Any issue field, prefixed with a minus to exclude.

          Examples:

           *  `summary,comment` Returns only the summary and comments fields.
           *  `-description` Returns all (default) fields except description.
           *  `*navigable,-comment` Returns all navigable fields except comment.

          This parameter may be specified multiple times. For example, `fields=field1,field2& fields=field3`.

          Note: All fields are returned by default. This differs from [Search for issues using JQL (GET)](#api-rest-api-3-search-get) and [Search for issues using JQL (POST)](#api-rest-api-3-search-post) where the default is all navigable fields
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: '*all'
      - name: fieldsByKeys
        in: query
        description: Whether fields in `fields` are referenced by keys rather than
          IDs. This parameter is useful where fields have been added by a connect
          app and a field's key may differ from its ID
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about the issues in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `renderedFields` Returns field values rendered in HTML format.
           *  `names` Returns the display name of each field.
           *  `schema` Returns the schema describing a field type.
           *  `transitions` Returns all possible transitions for the issue.
           *  `editmeta` Returns information about how each field can be edited.
           *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
           *  `versionedRepresentations` Returns a JSON array for each version of a field's value, with the highest number representing the most recent version. Note: When included in the request, the `fields` parameter is ignored
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: properties
        in: query
        description: |-
          A list of issue properties to return for the issue. This parameter accepts a comma-separated list. Allowed values:

           *  `*all` Returns all issue properties.
           *  Any issue property key, prefixed with a minus to exclude.

          Examples:

           *  `*all` Returns all properties.
           *  `*all,-prop1` Returns all properties except `prop1`.
           *  `prop1,prop2` Returns `prop1` and `prop2` properties.

          This parameter may be specified multiple times. For example, `properties=prop1,prop2& properties=prop3`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: 'null'
      - name: updateHistory
        in: query
        description: Whether the project in which the issue is created is added to
          the user's **Recently viewed** project list, as shown under **Projects**
          in Jira. This also populates the [JQL issues search](#api-rest-api-3-search-get)
          `lastViewed` field
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: failFast
        in: query
        description: Whether to fail the request quickly in case of an error while
          loading fields for an issue. For `failFast=true`, if one field fails, the
          entire operation fails. For `failFast=false`, the operation will continue
          even if a field fails. It will return a valid response, but without values
          for the failed field(s)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueBean'
              example: '{"fields":{"watcher":{"isWatching":false,"self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers","watchCount":1},"attachment":[{"author":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"content":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10000","created":"2022-10-06T07:32:47.000+0000","filename":"picture.jpg","id":10000,"mimeType":"image/jpeg","self":"https://your-domain.atlassian.net/rest/api/3/attachments/10000","size":23123,"thumbnail":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/thumbnail/10000"}],"sub-tasks":[{"id":"10000","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10003","key":"ED-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/ED-2"},"type":{"id":"10000","inward":"Parent","name":"","outward":"Sub-task"}}],"description":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Main
                order flow broken"}]}]},"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"comment":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper."}]}]},"created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}],"issuelinks":[{"id":"10001","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004L","key":"PR-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-2"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}},{"id":"10002","inwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004","key":"PR-3","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-3"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}}],"worklog":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"comment":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"I
                did some work here."}]}]},"id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}],"updated":1,"timetracking":{"originalEstimate":"10m","originalEstimateSeconds":600,"remainingEstimate":"3m","remainingEstimateSeconds":200,"timeSpent":"6m","timeSpentSeconds":400}},"id":"10002","key":"ED-1","self":"https://your-domain.atlassian.net/rest/api/3/issue/10002"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-meta:jira
        - read:issue-security-level:jira
        - read:issue.vote:jira
        - read:issue.changelog:jira
        - read:avatar:jira
        - read:issue:jira
        - read:status:jira
        - read:user:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issues
      summary: Edit issue
      description: |-
        Edits an issue. Issue properties may be updated as part of the edit. Please note that issue transition is not supported and is ignored here. To transition an issue, please use [Transition issue](#api-rest-api-3-issue-issueIdOrKey-transitions-post).

        The edits to the issue's fields are defined using `update` and `fields`. The fields that can be edited are determined using [ Get edit issue metadata](#api-rest-api-3-issue-issueIdOrKey-editmeta-get).

        The parent field may be set by key or ID. For standard issue types, the parent may be removed by setting `update.parent.set.none` to *true*. Note that the `description`, `environment`, and any `textarea` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (`textfield`) accept a string and don't handle Atlassian Document Format content.

        Connect apps having an app user with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), can override the screen security configuration using `overrideScreenSecurity` and `overrideEditableFlag`.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: editIssue
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notifyUsers
        in: query
        description: Whether a notification email about the issue update is sent to
          all watchers. To disable the notification, administer Jira or administer
          project permissions are required. If the user doesn't have the necessary
          permission the request is ignored
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: overrideScreenSecurity
        in: query
        description: Whether screen security is overridden to enable hidden fields
          to be edited. Available to Connect app users with *Administer Jira* [global
          permission](https://confluence.atlassian.com/x/x4dKLg) and Forge apps acting
          on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: overrideEditableFlag
        in: query
        description: Whether screen security is overridden to enable uneditable fields
          to be edited. Available to Connect app users with *Administer Jira* [global
          permission](https://confluence.atlassian.com/x/x4dKLg) and Forge apps acting
          on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: returnIssue
        in: query
        description: Whether the response should contain the issue with fields edited
          in this request. The returned issue will have the same format as in the
          [Get issue API](#api-rest-api-3-issue-issueidorkey-get)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: expand
        in: query
        description: The Get issue API expand parameter to use in the response if
          the `returnIssue` parameter is `true`
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueUpdateDetails'
            example:
              fields:
                customfield_10000:
                  content:
                  - content:
                    - text: Investigation underway
                      type: text
                    type: paragraph
                  type: doc
                  version: 1
                customfield_10010: 1
                summary: Completed orders still displaying in pending
              historyMetadata:
                activityDescription: Complete order processing
                actor:
                  avatarUrl: http://mysystem/avatar/tony.jpg
                  displayName: Tony
                  id: tony
                  type: mysystem-user
                  url: http://mysystem/users/tony
                cause:
                  id: myevent
                  type: mysystem-event
                description: From the order testing process
                extraData:
                  Iteration: 10a
                  Step: '4'
                generator:
                  id: mysystem-1
                  type: mysystem-application
                type: myplugin:type
              properties:
              - key: key1
                value: Order number 10784
              - key: key2
                value: Order number 10923
              update:
                components:
                - set: ''
                labels:
                - add: triaged
                - remove: blocker
                summary:
                - set: Bug in business logic
                timetracking:
                - edit:
                    originalEstimate: 1w 1d
                    remainingEstimate: 4d
        required: true
      responses:
        '200':
          description: Returned if the request is successful and the `returnIssue`
            parameter is `true`
          content:
            application/json:
              schema: {
                }
        '204':
          description: Returned if the request is successful.
          content:
            application/json:
              schema: {
                }
        '400':
          description: |-
            Returned if:

             *  the request body is missing.
             *  the user does not have the necessary permission to edit one or more fields.
             *  the request includes one or more fields that are not found or are not associated with the issue's edit screen.
             *  the request includes an invalid transition.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user uses `overrideScreenSecurity` or `overrideEditableFlag`
            but doesn't have the necessary permission.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
        '409':
          description: Returned if the issue could not be updated due to a conflicting
            update.
        '422':
          description: Returned if a configuration problem prevents the issue being
            updated.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issues
      summary: Delete issue
      description: |-
        Deletes an issue.

        An issue cannot be deleted if it has one or more subtasks. To delete an issue with subtasks, set `deleteSubtasks`. This causes the issue's subtasks to be deleted with the issue.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Delete issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: deleteIssue
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: deleteSubtasks
        in: query
        description: Whether the issue's subtasks are deleted when the issue is deleted
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 'true'
          - 'false'
          default: 'false'
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the issue has subtasks and `deleteSubtasks` is
            not set to *true*.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have permission to delete the
            issue.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /screens/{screenId}/tabs/{tabId}/fields:
    get:
      tags:
      - Screen tab fields
      summary: Get all screen tab fields
      description: |-
        Returns all fields for a screen tab.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
         *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme.
      operationId: getAllScreenTabFields
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tabId
        in: path
        description: The ID of the screen tab
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: projectKey
        in: query
        description: The key of the project
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScreenableField'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen or screen tab is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:screenable-field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Screen tab fields
      summary: Add screen tab field
      description: |-
        Adds a field to a screen tab.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addScreenTabField
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tabId
        in: path
        description: The ID of the screen tab
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFieldBean'
            example:
              fieldId: summary
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenableField'
              example: '{"id":"summary","name":"Summary"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen, screen tab, or field is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:screenable-field:jira
        - write:screenable-field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /statuses/{statusId}/workflowUsages:
    get:
      tags:
      - Status
      summary: Get workflow usages by status
      description: Returns a page of workflows using a given status.
      operationId: getWorkflowUsagesForStatus
      parameters:
      - name: statusId
        in: path
        description: The statusId to fetch workflow usages for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nextPageToken
        in: query
        description: The cursor for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of results to return. Must be an integer between
          1 and 200
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusWorkflowUsageDTO'
              example: '{"statusId":"1000","workflows":{"nextPageToken":"eyJvIjoyfQ==","values":[{"id":"545d80a3-91ff-4949-8b0d-a2bc484e70e5"}]}}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Invalid format of nextPageToken"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '404':
          description: Returned if the status with the given ID does not exist.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow:jira
        - read:status:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /field/search:
    get:
      tags:
      - Issue fields
      summary: Get fields paginated
      description: |-
        Returns a [paginated](#pagination) list of fields for Classic Jira projects. The list can include:

         *  all fields
         *  specific fields, by defining `id`
         *  fields that contain a string in the field name or description, by defining `query`
         *  specific fields that contain a string in the field name or description, by defining `id` and `query`

        Use `type` must be set to `custom` to show custom fields only.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getFieldsPaginated
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: type
        in: query
        description: The type of fields to search
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - custom
            - system
            default: ''
      - name: id
        in: query
        description: The IDs of the custom fields to return or, where `query` is specified,
          filter
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      - name: query
        in: query
        description: String used to perform a case-insensitive partial match with
          field names or descriptions
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by:

           *  `contextsCount` sorts by the number of contexts related to a field
           *  `lastUsed` sorts by the date when the value of the field last changed
           *  `name` sorts by the field name
           *  `screensCount` sorts by the number of screens related to a field
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - contextsCount
          - -contextsCount
          - +contextsCount
          - lastUsed
          - -lastUsed
          - +lastUsed
          - name
          - -name
          - +name
          - screensCount
          - -screensCount
          - +screensCount
          - projectsCount
          - -projectsCount
          - +projectsCount
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `key` returns the key for each field
           *  `stableId` returns the stableId for each field
           *  `lastUsed` returns the date when the value of the field last changed
           *  `screensCount` returns the number of screens related to a field
           *  `contextsCount` returns the number of contexts related to a field
           *  `isLocked` returns information about whether the field is locked
           *  `searcherKey` returns the searcher key for each custom field
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectIds
        in: query
        description: The IDs of the projects to filter the fields by. Fields belonging
          to project Ids that the user does not have access to will not be returned
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanField'
              example: '{"isLast":false,"maxResults":50,"startAt":0,"total":2,"values":[{"id":"customfield_10000","name":"Approvers","schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:multiuserpicker","customId":10000,"items":"user","type":"array"},"description":"Contains
                users needed for approval. This custom field was created by Jira Service
                Desk.","key":"customfield_10000","stableId":"sfid:approvers","isLocked":true,"searcherKey":"com.atlassian.jira.plugin.system.customfieldtypes:userpickergroupsearcher","screensCount":2,"contextsCount":2,"lastUsed":{"type":"TRACKED","value":"2021-01-28T07:37:40.000+0000"}},{"id":"customfield_10001","name":"Change
                reason","schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:select","customId":10001,"type":"option"},"description":"Choose
                the reason for the change request","key":"customfield_10001","stableId":"sfid:change-reason","isLocked":false,"searcherKey":"com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher","screensCount":2,"contextsCount":2,"projectsCount":2,"lastUsed":{"type":"NOT_TRACKED"}}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only custom fields can be queried."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only Jira administrators can access fields."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /webhook/failed:
    get:
      tags:
      - Webhooks
      summary: Get failed webhooks
      description: |-
        Returns webhooks that have recently failed to be delivered to the requesting app after the maximum number of retries.

        After 72 hours the failure may no longer be returned by this operation.

        The oldest failure is returned first.

        This method uses a cursor-based pagination. To request the next page use the failure time of the last webhook on the list as the `failedAfter` value or use the URL provided in `next`.

        **[Permissions](#permissions) required:** Only [Connect apps](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) can use this operation.
      operationId: getFailedWebhooks
      parameters:
      - name: maxResults
        in: query
        description: The maximum number of webhooks to return per page. If obeying
          the maxResults directive would result in records with the same failure time
          being split across pages, the directive is ignored and all records with
          the same failure time included on the page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: after
        in: query
        description: The time after which any webhook failure must have occurred for
          the record to be returned, expressed as milliseconds since the UNIX epoch
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedWebhooks'
              example: '{"values":[{"id":"1","body":"{\"data\":\"webhook data\"}","url":"https://example.com","failureTime":1573118132000},{"id":"2","url":"https://example.com","failureTime":1573540473480}],"maxResults":100,"next":"https://your-domain.atlassian.net/rest/api/3/webhook/failed?failedAfter=1573540473480&maxResults=100"}'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the caller is not a Connect app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
        - manage:jira-webhook
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - manage:jira-webhook
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-details:jira
        - read:webhook:jira
        - read:comment.property:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-role:jira
        - read:epic:jira-software
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /issuetypescreenscheme/{issueTypeScreenSchemeId}/mapping/remove:
    post:
      tags:
      - Issue type screen schemes
      summary: Remove mappings from issue type screen scheme
      description: |-
        Removes issue type to screen scheme mappings from an issue type screen scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeMappingsFromIssueTypeScreenScheme
      parameters:
      - name: issueTypeScreenSchemeId
        in: path
        description: The ID of the issue type screen scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeIds'
            example:
              issueTypeIds:
              - '10000'
              - '10001'
              - '10004'
        required: true
      responses:
        '204':
          description: Returned if the screen scheme mappings are removed from the
            issue type screen scheme
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The issueTypeIds must not contain duplicates."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type screen schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type screen scheme or one or more issue
            type mappings are not found.
          content:
            application/json:
              example: '{"errorMessages":["The issue type screen scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /myself:
    get:
      tags:
      - Myself
      summary: Get current user
      description: |-
        Returns details for the current user.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getCurrentUser
      parameters:
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about user in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `groups` Returns all groups, including nested groups, the user belongs to.
           *  `applicationRoles` Returns the application roles the user is assigned to
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example: '{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:group:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issue/{issueIdOrKey}/votes:
    get:
      tags:
      - Issue votes
      summary: Get votes
      description: |-
        Returns details about the votes on an issue.

        This operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is ini
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.

        Note that users with the necessary permissions for this operation but without the *View voters and watchers* project permissions are not returned details in the `voters` field.
      operationId: getVotes
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Votes'
              example: '{"hasVoted":true,"self":"https://your-domain.atlassian.net/rest/api/issue/MKY-1/votes","voters":[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}],"votes":24}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  voting is disabled.
             *  the user does not have permission to view the issue.
             *  the issue is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.vote:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue votes
      summary: Add vote
      description: |-
        Adds the user's vote to an issue. This is the equivalent of the user clicking *Vote* on an issue in Jira.

        This operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: addVote
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  voting is disabled.
             *  the issue is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue.vote:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue votes
      summary: Delete vote
      description: |-
        Deletes a user's vote from an issue. This is the equivalent of the user clicking *Unvote* on an issue in Jira.

        This operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: removeVote
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  voting is disabled.
             *  the user has not voted on the issue.
             *  the issue is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue.vote:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /issuetype:
    get:
      tags:
      - Issue types
      summary: Get all issue types for user
      description: |-
        Returns all issue types.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Issue types are only returned as follows:

         *  if the user has the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), all issue types are returned.
         *  if the user has the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, the issue types associated with the projects the user has permission to browse are returned.
         *  if the user is anonymous then they will be able to access projects with the *Browse projects* for anonymous users
         *  if the user authentication is incorrect they will fall back to anonymous
      operationId: getIssueAllTypes
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueTypeDetails'
              example: '[{"avatarId":1,"description":"A task that needs to be done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false},{"avatarId":10002,"description":"A
                problem with the software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}]'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue types
      summary: Create issue type
      description: |-
        Creates an issue type and adds it to the default issue type scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createIssueType
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeCreateBean'
            example:
              description: description
              name: name
              type: standard
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTypeDetails'
        '400':
          description: |-
            Returned if the request is invalid because:

             *  no content is sent.
             *  the issue type name exceeds 60 characters.
             *  a subtask issue type is requested on an instance where subtasks are disabled.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '409':
          description: Returned if the issue type name is in use.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type:jira
        - read:avatar:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /version/{id}/removeAndSwap:
    post:
      tags:
      - Project versions
      summary: Delete and replace version
      description: |-
        Deletes a project version.

        Alternative versions can be provided to update issues that use the deleted version in `fixVersion`, `affectedVersion`, or any version picker custom fields. If alternatives are not provided, occurrences of `fixVersion`, `affectedVersion`, and any version picker custom field, that contain the deleted version, are cleared. Any replacement version must be in the same project as the version being deleted and cannot be the version being deleted.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version.
      operationId: deleteAndReplaceVersion
      parameters:
      - name: id
        in: path
        description: The ID of the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAndReplaceVersionBean'
        required: true
      responses:
        '204':
          description: Returned if the version is deleted
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the version to delete is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project-version:jira
        - write:project-version:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /workflow/search:
    get:
      tags:
      - Workflows
      summary: Get workflows paginated
      description: |-
        This will be removed on [June 1, 2026](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2569); use [Search workflows](#api-rest-api-3-workflows-search-get) instead.

        Returns a [paginated](#pagination) list of published classic workflows. When workflow names are specified, details of those workflows are returned. Otherwise, all published classic workflows are returned.

        This operation does not return next-gen workflows.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getWorkflowsPaginated
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: workflowName
        in: query
        description: The name of a workflow to return. To include multiple workflows,
          provide an ampersand-separated list. For example, `workflowName=name1&workflowName=name2`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `transitions` For each workflow, returns information about the transitions inside the workflow.
           *  `transitions.rules` For each workflow transition, returns information about its rules. Transitions are included automatically if this expand is requested.
           *  `transitions.properties` For each workflow transition, returns information about its properties. Transitions are included automatically if this expand is requested.
           *  `statuses` For each workflow, returns information about the statuses inside the workflow.
           *  `statuses.properties` For each workflow status, returns information about its properties. Statuses are included automatically if this expand is requested.
           *  `default` For each workflow, returns information about whether this is the default workflow.
           *  `schemes` For each workflow, returns information about the workflow schemes the workflow is assigned to.
           *  `projects` For each workflow, returns information about the projects the workflow is assigned to, through workflow schemes.
           *  `hasDraftWorkflow` For each workflow, returns information about whether the workflow has a draft version.
           *  `operations` For each workflow, returns information about the actions that can be undertaken on the workflow
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: queryString
        in: query
        description: String used to perform a case-insensitive partial match with
          workflow name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `name` Sorts by workflow name.
           *  `created` Sorts by create time.
           *  `updated` Sorts by update time
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - -name
          - +name
          - created
          - -created
          - +created
          - updated
          - +updated
          - -updated
      - name: isActive
        in: query
        description: Filters active and inactive workflows
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanWorkflow'
              example: '{"isLast":false,"maxResults":1,"startAt":0,"total":5,"values":[{"id":{"name":"SCRUM
                Workflow","entityId":"5ed312c5-f7a6-4a78-a1f6-8ff7f307d063"},"description":"A
                workflow used for Software projects in the SCRUM methodology","transitions":[{"id":"5","name":"In
                Progress","description":"Start working on the issue.","from":["10","13"],"to":"14","type":"directed","screen":{"id":"10000","name":"Issue
                screen"},"rules":{"conditionsTree":{"nodeType":"compound","operator":"AND","conditions":[{"nodeType":"simple","type":"PermissionCondition","configuration":{"permissionKey":"WORK_ON_ISSUES"}},{"nodeType":"simple","type":"PermissionCondition","configuration":{"permissionKey":"RESOLVE_ISSUES"}}]},"validators":[{"type":"FieldRequiredValidator","configuration":{"errorMessage":"A
                custom error message","fields":["description","assignee"],"ignoreContext":true}}],"postFunctions":[{"type":"UpdateIssueStatusFunction"},{"type":"GenerateChangeHistoryFunction"},{"type":"FireIssueEventFunction"}]},"properties":{"jira.fieldscreen.id":1}}],"statuses":[{"id":"3","name":"In
                Progress","properties":{"issueEditable":false,"jira.issue.editable":"false"}}],"isDefault":false,"schemes":[{"id":"10001","name":"Test
                Workflow Scheme"}],"projects":[{"avatarUrls":{"16x16":"secure/projectavatar?size=xsmall&pid=10000","24x24":"secure/projectavatar?size=small&pid=10000","32x32":"secure/projectavatar?size=medium&pid=10000","48x48":"secure/projectavatar?size=large&pid=10000"},"id":"10000","key":"EX","name":"Example","projectCategory":{"description":"Project
                category description","id":"10000","name":"A project category"},"projectTypeKey":"ProjectTypeKey{key=''software''}","self":"project/EX","simplified":false}],"hasDraftWorkflow":true,"operations":{"canEdit":true,"canDelete":false},"created":"2018-12-10T16:30:15.000+0000","updated":"2018-12-11T11:45:13.000+0000"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only Jira administrators can access workflows."],"errors":{}}'
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        - read:issue-security-level:jira
        - read:project-role:jira
        - read:screen:jira
        - read:status:jira
        - read:user:jira
        - read:workflow:jira
        - read:webhook:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issuetypescheme/{issueTypeSchemeId}:
    put:
      tags:
      - Issue type schemes
      summary: Update issue type scheme
      description: |-
        Updates an issue type scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateIssueTypeScheme
      parameters:
      - name: issueTypeSchemeId
        in: path
        description: The ID of the issue type scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeSchemeUpdateDetails'
            example:
              defaultIssueTypeId: '10002'
              description: A collection of issue types suited to use in a kanban style
                project.
              name: Kanban Issue Type Scheme
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The default issue type has to be one of
                the issue types of the scheme."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["The issue type scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue type schemes
      summary: Delete issue type scheme
      description: |-
        Deletes an issue type scheme.

        Only issue type schemes used in classic projects can be deleted.

        Any projects assigned to the scheme are reassigned to the default issue type scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteIssueTypeScheme
      parameters:
      - name: issueTypeSchemeId
        in: path
        description: The ID of the issue type scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the issue type scheme is deleted
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is to delete the default issue type
            scheme.
          content:
            application/json:
              example: '{"errorMessages":["The default issue type scheme can''t be
                removed."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["The issue type scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue-type-scheme:jira
        - write:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issuetypescreenscheme/mapping:
    get:
      tags:
      - Issue type screen schemes
      summary: Get issue type screen scheme items
      description: |-
        Returns a [paginated](#pagination) list of issue type screen scheme items.

        Only issue type screen schemes used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueTypeScreenSchemeMappings
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: issueTypeScreenSchemeId
        in: query
        description: 'The list of issue type screen scheme IDs. To include multiple
          issue type screen schemes, separate IDs with ampersand: `issueTypeScreenSchemeId=10000&issueTypeScreenSchemeId=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueTypeScreenSchemeItem'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":4,"values":[{"issueTypeId":"10000","issueTypeScreenSchemeId":"10020","screenSchemeId":"10010"},{"issueTypeId":"10001","issueTypeScreenSchemeId":"10021","screenSchemeId":"10010"},{"issueTypeId":"10002","issueTypeScreenSchemeId":"10022","screenSchemeId":"10010"},{"issueTypeId":"default","issueTypeScreenSchemeId":"10023","screenSchemeId":"10011"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/features/{featureKey}:
    put:
      tags:
      - Project features
      summary: Set project feature state
      description: Sets the state of a project feature.
      operationId: toggleFeatureForProject
      parameters:
      - name: projectIdOrKey
        in: path
        description: The ID or (case-sensitive) key of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: featureKey
        in: path
        description: The key of the feature
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Details of the feature state change
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFeatureState'
            example:
              state: ENABLED
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerForProjectFeatures'
              example: '{"features":[{"feature":"jsw.classic.roadmap","imageUri":"https://jira.atlassian.com/s/sb53l8/b/3/ab8a7691e4738b4f147e293f0864adfd5b8d3c85/_/download/resources/com.atlassian.jira.rest:classic-project-features/simple-roadmap-feature.svg","localisedDescription":"Your
                roadmap is an optimized location to create and manage your epics.","localisedName":"Roadmap","prerequisites":[],"projectId":10001,"state":"ENABLED","toggleLocked":true},{"feature":"jsw.classic.backlog","imageUri":"https://jira.atlassian.com/s/sb53l8/b/3/ab8a7691e4738b4f147e293f0864adfd5b8d3c85/_/download/resources/com.atlassian.jira.rest:classic-project-features/simple-backlog-feature.svg","localisedDescription":"Plan
                and prioritize work in a dedicated space. To enable and configure
                the backlog for each board, go to board settings.","localisedName":"Backlog","prerequisites":[],"projectId":10001,"state":"ENABLED","toggleLocked":true}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
        '404':
          description: Returned if the project or project feature is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project.feature:jira
        - read:project.feature:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /resolution/move:
    put:
      tags:
      - Issue resolutions
      summary: Move resolutions
      description: |-
        Changes the order of issue resolutions.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: moveResolutions
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderIssueResolutionsRequest'
            example:
              after: '10002'
              ids:
              - '10000'
              - '10001'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The IDs must contain no more than 1,000
                items."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue resolution isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Resolution with ID 10000 not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /workflowscheme/{workflowSchemeId}/projectUsages:
    get:
      tags:
      - Workflow schemes
      summary: Get projects which are using a given workflow scheme
      description: Returns a page of projects using a given workflow scheme.
      operationId: getProjectUsagesForWorkflowScheme
      parameters:
      - name: workflowSchemeId
        in: path
        description: The workflow scheme ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nextPageToken
        in: query
        description: The cursor for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of results to return. Must be an integer between
          1 and 200
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSchemeProjectUsageDTO'
              example: '{"projects":{"nextPageToken":"eyJvIjoyfQ==","values":[{"id":"1003"}]},"workflowSchemeId":"10005"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Invalid format of nextPageToken"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '404':
          description: Returned if the workflow scheme with the given ID does not
            exist.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issuesecurityschemes/search:
    get:
      tags:
      - Issue security schemes
      summary: Search issue security schemes
      description: "Returns a [paginated](#pagination) list of issue security schemes.\
        \  \nIf you specify the project ID parameter, the result will contain issue\
        \ security schemes and related project IDs you filter by. Use \\{@link IssueSecuritySchemeResource\\\
        #searchProjectsUsingSecuritySchemes(String, String, Set, Set)\\} to obtain\
        \ all projects related to scheme.\n\nOnly issue security schemes in the context\
        \ of classic projects are returned.\n\n**[Permissions](#permissions) required:**\
        \ *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
      operationId: searchSecuritySchemes
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: id
        in: query
        description: 'The list of issue security scheme IDs. To include multiple issue
          security scheme IDs, separate IDs with an ampersand: `id=10000&id=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: projectId
        in: query
        description: 'The list of project IDs. To include multiple project IDs, separate
          IDs with an ampersand: `projectId=10000&projectId=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanSecuritySchemeWithProjects'
              example: '{"id":10000,"self":"https://your-domain.atlassian.net/rest/api/3/issuesecurityscheme/10000","name":"Default
                scheme","description":"Default scheme description","defaultLevel":10001,"projectIds":[10002]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              example: '{"errorMessages":["-1000 is not a valid value. id must be
                zero or a positive integer."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-security-level:jira
        - read:issue-security-scheme:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issueLink/{linkId}:
    get:
      tags:
      - Issue links
      summary: Get issue link
      description: |-
        Returns an issue link.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse project* [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the linked issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, permission to view both of the issues.
      operationId: getIssueLink
      parameters:
      - name: linkId
        in: path
        description: The ID of the issue link
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueLink'
              example: '{"id":"10001","inwardIssue":{"fields":{"issuetype":{"avatarId":10002,"description":"A
                problem with the software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false},"priority":{"description":"Very
                little impact.","iconUrl":"https://your-domain.atlassian.net/images/icons/priorities/trivial.png","id":"2","name":"Trivial","self":"https://your-domain.atlassian.net/rest/api/3/priority/5","statusColor":"#cfcfcf"},"status":{"description":"The
                issue is closed.","iconUrl":"https://your-domain.atlassian.net/images/icons/closed.gif","id":"5","name":"Closed","self":"https://your-domain.atlassian.net/rest/api/3/status/5","statusCategory":{"colorName":"green","id":9,"key":"completed","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/9"}}},"id":"10004","key":"PR-3","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-3"},"outwardIssue":{"fields":{"issuetype":{"avatarId":1,"description":"A
                task that needs to be done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false},"priority":{"description":"Major
                loss of function.","iconUrl":"https://your-domain.atlassian.net/images/icons/priorities/major.png","id":"1","name":"Major","self":"https://your-domain.atlassian.net/rest/api/3/priority/3","statusColor":"#009900"},"status":{"description":"The
                issue is currently being worked on.","iconUrl":"https://your-domain.atlassian.net/images/icons/progress.gif","id":"10000","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/status/10000","statusCategory":{"colorName":"yellow","id":1,"key":"in-flight","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/1"}}},"id":"10004L","key":"PR-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-2"},"type":{"id":"1000","inward":"Duplicated
                by","name":"Duplicate","outward":"Duplicates","self":"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000"}}'
        '400':
          description: Returned if the issue link ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  issue linking is disabled.
             *  the issue link is not found.
             *  the user doesn't have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:issue-link-type:jira
        - read:issue:jira
        - read:issue-type:jira
        - read:priority:jira
        - read:status:jira
        - read:avatar:jira
        - read:issue.time-tracking:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: READ
    delete:
      tags:
      - Issue links
      summary: Delete issue link
      description: |-
        Deletes an issue link.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  Browse project [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the issues in the link.
         *  *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one of the projects containing issues in the link.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, permission to view both of the issues.
      operationId: deleteIssueLink
      parameters:
      - name: linkId
        in: path
        description: The ID of the issue link
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: 200 response
        '204':
          description: Returned if the request is successful.
        '400':
          description: Returned if the issue link ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  issue linking is disabled.
             *  the issue link is not found.
             *  the user doesn't have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue-link:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /issueLinkType:
    get:
      tags:
      - Issue link types
      summary: Get issue link types
      description: |-
        Returns a list of all issue link types.

        To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project in the site.
      operationId: getIssueLinkTypes
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueLinkTypes'
              example: '{"issueLinkTypes":[{"id":"1000","inward":"Duplicated by","name":"Duplicate","outward":"Duplicates","self":"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000"},{"id":"1010","inward":"Blocked
                by","name":"Blocks","outward":"Blocks","self":"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1010"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if issue linking is disabled.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-link-type:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue link types
      summary: Create issue link type
      description: |-
        Creates an issue link type. Use this operation to create descriptions of the reasons why issues are linked. The issue link type consists of a name and descriptions for a link's inward and outward relationships.

        To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createIssueLinkType
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueLinkType'
            example:
              inward: Duplicated by
              name: Duplicate
              outward: Duplicates
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueLinkType'
              example: '{"id":"1000","inward":"Duplicated by","name":"Duplicate","outward":"Duplicates","self":"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  issue linking is disabled.
             *  the issue link type name is in use.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-link-type:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{fieldId}/context/{contextId}/option:
    get:
      tags:
      - Issue custom field options
      summary: Get custom field options (context)
      description: |-
        Returns a [paginated](#pagination) list of all custom field option for a context. Options are returned first then cascading options, in the order they display in Jira.

        This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). *Edit Workflow* [edit workflow permission](https://support.atlassian.com/jira-cloud-administration/docs/permissions-for-company-managed-projects/#Edit-Workflows)
      operationId: getOptionsForContext
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: optionId
        in: query
        description: The ID of the option
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: onlyOptions
        in: query
        description: Whether only options are returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanCustomFieldContextOption'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":4,"values":[{"id":"10001","value":"New
                York"},{"id":"10002","value":"Boston","disabled":true},{"id":"10004","value":"Denver"},{"id":"10003","value":"Brooklyn","optionId":"10001"}]}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The custom field doesn''t support options."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can manage custom
                field options."],"errors":{}}'
        '404':
          description: Returned if the custom field is not found or the context doesn't
            match the custom field.
          content:
            application/json:
              example: '{"errorMessages":["The custom field was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field.option:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue custom field options
      summary: Update custom field options (context)
      description: |-
        Updates the options of a custom field.

        If any of the options are not found, no options are updated. Options where the values in the request match the current values aren't updated and aren't reported in the response.

        Note that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateCustomFieldOption
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCustomFieldOptionUpdateRequest'
            example:
              options:
              - disabled: false
                id: '10001'
                value: Scranton
              - disabled: true
                id: '10002'
                value: Manhattan
              - disabled: false
                id: '10003'
                value: The Electric City
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldUpdatedContextOptionsList'
              example: '{"options":[{"disabled":false,"id":"10001","value":"Scranton"},{"disabled":true,"id":"10002","value":"Manhattan"},{"disabled":false,"id":"10003","value":"The
                Electric City"}]}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The custom field doesn''t support options."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can manage custom
                field options."],"errors":{}}'
        '404':
          description: Returned if the field, context, or one or more options is not
            found.
          content:
            application/json:
              example: '{"errorMessages":["The custom field was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field.option:jira
        - write:field.option:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Issue custom field options
      summary: Create custom field options (context)
      description: |-
        Creates options and, where the custom select field is of the type Select List (cascading), cascading options for a custom select field. The options are added to a context of the field.

        The maximum number of options that can be created per request is 1000 and each field can have a maximum of 10000 options.

        This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createCustomFieldOption
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCustomFieldOptionCreateRequest'
            example:
              options:
              - disabled: false
                value: Scranton
              - disabled: true
                optionId: '10000'
                value: Manhattan
              - disabled: false
                value: The Electric City
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldCreatedContextOptionsList'
              example: '{"options":[{"disabled":false,"id":"10001","value":"Scranton"},{"disabled":true,"id":"10002","optionId":"10000","value":"Manhattan"},{"disabled":false,"id":"10003","value":"The
                Electric City"}]}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The custom field doesn''t support options."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can manage custom
                field options."],"errors":{}}'
        '404':
          description: Returned if the custom field is not found or the context doesn't
            match the custom field.
          content:
            application/json:
              example: '{"errorMessages":["The custom field was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field.option:jira
        - write:field.option:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /app/field/value:
    post:
      tags:
      - Issue custom field values (apps)
      summary: Update custom fields
      description: |-
        Updates the value of one or more custom fields on one or more issues. Combinations of custom field and issue should be unique within the request.

        Apps can only perform this operation on [custom fields](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/) and [custom field types](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/) declared in their own manifests.

        **[Permissions](#permissions) required:** Only the app that owns the custom field or custom field type can update its values with this operation.

        The new `write:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: updateMultipleCustomFieldValues
      parameters:
      - name: generateChangelog
        in: query
        description: Whether to generate a changelog for this update
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCustomFieldValuesUpdateDetails'
            example:
              updates:
              - customField: customfield_10010
                issueIds:
                - 10010
                - 10011
                value: new value
              - customField: customfield_10011
                issueIds:
                - 10010
                value: 1000
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '403':
          description: Returned if the request is not authenticated as the app that
            provided all the fields.
        '404':
          description: Returned if any field is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes:
        - write:app-data:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /issue/archive:
    put:
      tags:
      - Issues
      summary: Archive issue(s) by issue ID/key
      description: "Enables admins to archive up to 1000 issues in a single request\
        \ using issue ID/key, returning details of the issue(s) archived in the process\
        \ and the errors encountered, if any.\n\n**Note that:**\n\n *  you can't archive\
        \ subtasks directly, only through their parent issues\n *  you can only archive\
        \ issues from software, service management, and business projects\n\n**[Permissions](#permissions)\
        \ required:** Jira admin or site admin: [global permission](https://confluence.atlassian.com/x/x4dKLg)\n\
        \n**License required:** Premium or Enterprise\n\n**Signed-in users only:**\
        \ This API can't be accessed anonymously.\n\n  \n"
      operationId: archiveIssues
      parameters: [
        ]
      requestBody:
        description: Contains a list of issue keys or IDs to be archived
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueArchivalSyncRequest'
            example:
              issueIdsOrKeys:
              - PR-1
              - '1001'
              - PROJECT-2
        required: true
      responses:
        '200':
          description: Returned if there is at least one valid issue to archive in
            the request. The return message will include the count of archived issues
            and subtasks, as well as error details for issues which failed to get
            archived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueArchivalSyncResponse'
              example: '{"errors":{"issueIsSubtask":{"count":3,"issueIdsOrKeys":["ST-1","ST-2","ST-3"],"message":"Issue
                is subtask."},"issuesInArchivedProjects":{"count":2,"issueIdsOrKeys":["AR-1","AR-2"],"message":"Issue
                exists in archived project."},"issuesInUnlicensedProjects":{"count":3,"issueIdsOrKeys":["UL-1","UL-2","UL-3"],"message":"Issues
                with these IDs are in unlicensed projects."},"issuesNotFound":{"count":3,"issueIdsOrKeys":["PR-1","PR-2","PR-3"],"message":"Issue
                not found."}},"numberOfIssuesUpdated":10}'
        '400':
          description: |-
            Returned if none of the issues in the request can be archived. Possible reasons:

             *  the issues weren't found
             *  the issues are subtasks
             *  the issues belong to unlicensed projects
             *  the issues belong to archived projects
          content:
            application/json:
              example: '{"errorMessages":["No valid issue to archive or unarchive.
                Bad request."],"errors":{}}'
        '401':
          description: Returned if no issues were archived because the provided authentication
            credentials are either missing or invalid.
          content:
            application/json:
              example: '{"errorMessages":["User is not logged in."],"errors":{}}'
        '403':
          description: Returned if no issues were archived because the user lacks
            the required Jira admin or site admin permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only admins can archive or unarchive issues.
                Access denied."],"errors":{}}'
        '412':
          description: Returned if one or more issues were successfully archived,
            but the operation was incomplete because the number of issue IDs or keys
            provided exceeds 1000.
          content:
            application/json:
              example: '{"errorMessages":["The number of issues to archive or unarchive
                exceeds the hard limit of 1000. Precondition failed."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
    post:
      tags:
      - Issues
      summary: Archive issue(s) by JQL
      description: "Enables admins to archive up to 100,000 issues in a single request\
        \ using JQL, returning the URL to check the status of the submitted request.\n\
        \nYou can use the [get task](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-tasks/#api-rest-api-3-task-taskid-get)\
        \ and [cancel task](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-tasks/#api-rest-api-3-task-taskid-cancel-post)\
        \ APIs to manage the request.\n\n**Note that:**\n\n *  you can't archive subtasks\
        \ directly, only through their parent issues\n *  you can only archive issues\
        \ from software, service management, and business projects\n\n**[Permissions](#permissions)\
        \ required:** Jira admin or site admin: [global permission](https://confluence.atlassian.com/x/x4dKLg)\n\
        \n**License required:** Premium or Enterprise\n\n**Signed-in users only:**\
        \ This API can't be accessed anonymously.\n\n**Rate limiting:** Only a single\
        \ request per jira instance can be active at any given time.\n\n  \n"
      operationId: archiveIssuesAsync
      parameters: [
        ]
      requestBody:
        description: A JQL query specifying the issues to archive. Note that subtasks
          can only be archived through their parent issues
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveIssueAsyncRequest'
            example:
              jql: project = FOO AND updated < -2y
        required: true
      responses:
        '202':
          description: Returns the URL to check the status of the submitted request
          content:
            application/json:
              schema:
                type: string
              example: '"https://your-domain.atlassian.net/rest/api/3/task/1010"'
        '400':
          description: Returned if no issues were archived due to a bad request, for
            example an invalid JQL query.
          content:
            application/json:
              example: '{"errorMessages":["Invalid JQL. Bad request."],"errors":{}}'
        '401':
          description: Returned if no issues were archived because the provided authentication
            credentials are either missing or invalid.
          content:
            application/json:
              example: '{"errorMessages":["User is not logged in."],"errors":{}}'
        '403':
          description: Returned if no issues were archived because the user lacks
            the required Jira admin or site admin permissions.
          content:
            application/json:
              example: '{"errorMessages":["Archiving issues is only available for
                premium editions of Jira."],"errors":{}}'
        '412':
          description: Returned if a request to archive issue(s) is already running.
          content:
            application/json:
              example: '{"errorMessages":["An issue archival task is already running
                with ID 1010. To start a new one, cancel the task or wait for it to
                finish."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
  /issue/createmeta:
    get:
      tags:
      - Issues
      summary: Get create issue metadata
      description: |-
        Returns details of projects, issue types within projects, and, when requested, the create screen fields for each issue type for the user. Use the information to populate the requests in [ Create issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post).

        Deprecated, see [Create Issue Meta Endpoint Deprecation Notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-1304).

        The request can be restricted to specific projects or issue types using the query parameters. The response will contain information for the valid projects, issue types, or project and issue type combinations requested. Note that invalid project, issue type, or project and issue type combinations do not generate errors.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Create issues* [project permission](https://confluence.atlassian.com/x/yodKLg) in the requested projects.
      operationId: getCreateIssueMeta
      parameters:
      - name: projectIds
        in: query
        description: List of project IDs. This parameter accepts a comma-separated
          list. Multiple project IDs can also be provided using an ampersand-separated
          list. For example, `projectIds=10000,10001&projectIds=10020,10021`. This
          parameter may be provided with `projectKeys`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: projectKeys
        in: query
        description: List of project keys. This parameter accepts a comma-separated
          list. Multiple project keys can also be provided using an ampersand-separated
          list. For example, `projectKeys=proj1,proj2&projectKeys=proj3`. This parameter
          may be provided with `projectIds`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: issuetypeIds
        in: query
        description: List of issue type IDs. This parameter accepts a comma-separated
          list. Multiple issue type IDs can also be provided using an ampersand-separated
          list. For example, `issuetypeIds=10000,10001&issuetypeIds=10020,10021`.
          This parameter may be provided with `issuetypeNames`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: issuetypeNames
        in: query
        description: List of issue type names. This parameter accepts a comma-separated
          list. Multiple issue type names can also be provided using an ampersand-separated
          list. For example, `issuetypeNames=name1,name2&issuetypeNames=name3`. This
          parameter may be provided with `issuetypeIds`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          issue metadata in the response. This parameter accepts `projects.issuetypes.fields`,
          which returns information about the fields in the issue creation screen
          for each issue type. Fields hidden from the screen are not returned. Use
          the information to populate the `fields` and `update` fields in [Create
          issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCreateMetadata'
              example: '{"projects":[{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000&avatarId=10011","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000&avatarId=10011","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000&avatarId=10011","48x48":"https://your-domain.atlassian.net/secure/projectavatar?pid=10000&avatarId=10011"},"id":"10000","issuetypes":[{"description":"An
                error in the code","fields":{"issuetype":{"allowedValues":["set"],"autoCompleteUrl":"issuetype","hasDefaultValue":false,"key":"issuetype","name":"Issue
                Type","required":true}},"iconUrl":"https://your-domain.atlassian.net/images/icons/issuetypes/bug.png","id":"1","name":"Bug","self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}],"key":"ED","name":"Edison
                Project","self":"https://your-domain.atlassian.net/rest/api/3/project/ED"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-meta:jira
        - read:avatar:jira
        - read:field-configuration:jira
        state: Beta
      x-changes:
      - announced: 2023-12-11T00:00:00Z
        details: https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-1304
        effective: 2024-06-03T00:00:00Z
        type: removed
      x-atlassian-connect-scope: READ
  /project/{projectKeyOrId}/issuesecuritylevelscheme:
    get:
      tags:
      - Project permission schemes
      summary: Get project issue security scheme
      description: |-
        Returns the [issue security scheme](https://confluence.atlassian.com/x/J4lKLg) associated with the project.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or the *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: getProjectIssueSecurityScheme
      parameters:
      - name: projectKeyOrId
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScheme'
              example: '{"defaultSecurityLevelId":10021,"description":"Description
                for the default issue security scheme","id":10000,"levels":[{"description":"Only
                the reporter and internal staff can see this issue.","id":"10021","name":"Reporter
                Only","self":"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021"}],"name":"Default
                Issue Security Scheme","self":"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the project is visible to the user but the user
            doesn't have administrative permissions.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-security-level:jira
        - read:issue-security-scheme:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /user/assignable/search:
    get:
      tags:
      - User search
      summary: Find users assignable to issues
      description: |-
        Returns a list of users that can be assigned to an issue. Use this operation to find the list of users who can be assigned to:

         *  a new issue, by providing the `projectKeyOrId`.
         *  an updated issue, by providing the `issueKey` or `issueId`.
         *  to an issue during a transition (workflow action), by providing the `issueKey` or `issueId` and the transition id in `actionDescriptorId`. You can obtain the IDs of an issue's valid transitions using the `transitions` option in the `expand` parameter of [ Get issue](#api-rest-api-3-issue-issueIdOrKey-get).

        In all these cases, you can pass an account ID to determine if a user can be assigned to an issue. The user is returned in the response if they can be assigned to the issue or issue transition.

        This operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that can be assigned the issue. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who can be assigned the issue, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.

        Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Assign issues* [project permission](https://confluence.atlassian.com/x/yodKLg)
      operationId: findAssignableUsers
      parameters:
      - name: query
        in: query
        description: A query string that is matched against user attributes, such
          as `displayName`, and `emailAddress`, to find relevant users. The string
          can match the prefix of the attribute's value. For example, *query=john*
          matches a user with a `displayName` of *John Smith* and a user with an `emailAddress`
          of *johnson@example.com*. Required, unless `username` or `accountId` is
          specified
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: query
        x-showInExample: 'true'
      - name: sessionId
        in: query
        description: The sessionId of this request. SessionId is the same until the
          assignee is set
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountId
        in: query
        description: A query string that is matched exactly against user `accountId`.
          Required, unless `query` is specified
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
      - name: project
        in: query
        description: The project ID or project key (case sensitive). Required, unless
          `issueKey` or `issueId` is specified
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: issueKey
        in: query
        description: The key of the issue. Required, unless `issueId` or `project`
          is specified
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: issueId
        in: query
        description: The ID of the issue. Required, unless `issueKey` or `project`
          is specified
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return. This operation may return
          less than the maximum number of items even if more are available. The operation
          fetches users up to the maximum and then, from the fetched users, returns
          only the users that can be assigned to the issue
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: actionDescriptorId
        in: query
        description: The ID of the transition
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: recommend
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example: '{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}'
        '400':
          description: |-
            Returned if:

             *  None of `issueKey`, `issueId` or `project` is present.
             *  `issueId` parameter is not valid.
             *  `query` or `accountId` is missing.
             *  `query` and `accountId` are provided.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project, issue, or transition is not found.
        '429':
          description: Returned if the rate limit is exceeded. User search endpoints
            share a collective rate limit for the tenant, in addition to Jira's normal
            rate limiting you may receive a rate limit for user search. Please respect
            the Retry-After header.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue:jira
        - read:project:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /version/{id}/mergeto/{moveIssuesTo}:
    put:
      tags:
      - Project versions
      summary: Merge versions
      description: |-
        Merges two project versions. The merge is completed by deleting the version specified in `id` and replacing any occurrences of its ID in `fixVersion` with the version ID specified in `moveIssuesTo`.

        Consider using [ Delete and replace version](#api-rest-api-3-version-id-removeAndSwap-post) instead. This resource supports swapping version values in `fixVersion`, `affectedVersion`, and custom fields.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version.
      operationId: mergeVersions
      parameters:
      - name: id
        in: path
        description: The ID of the version to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: moveIssuesTo
        in: path
        description: The ID of the version to merge into
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the version is deleted
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: |-
            Returned if:

             *  the authentication credentials are incorrect or missing.
             *  the user does not have the required permissions.
        '404':
          description: Returned if the version to be deleted or the version to merge
            to are not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project-version:jira
        - write:project-version:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /filter/{id}:
    get:
      tags:
      - Filters
      summary: Get filter
      description: |-
        Returns a filter.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None, however, the filter is only returned where it is:

         *  owned by the user.
         *  shared with a group that the user is a member of.
         *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  shared with a public project.
         *  shared with the public.
      operationId: getFilter
      parameters:
      - name: id
        in: path
        description: The ID of the filter to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
           *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: overrideSharePermissions
        in: query
        description: 'EXPERIMENTAL: Whether share permissions are overridden to enable
          filters with any share permissions to be returned. Available to users with
          *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
              example: '{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"}'
        '400':
          description: Returned if the filter is not found or the user does not have
            permission to view it.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:jql:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Filters
      summary: Update filter
      description: |-
        Updates a filter. Use this operation to update a filter's name, description, JQL, or sharing.

        **[Permissions](#permissions) required:** Permission to access Jira, however the user must own the filter.
      operationId: updateFilter
      parameters:
      - name: id
        in: path
        description: The ID of the filter to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
           *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: overrideSharePermissions
        in: query
        description: 'EXPERIMENTAL: Whether share permissions are overridden to enable
          the addition of any share permissions to filters. Available to users with
          *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: The filter to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
            example:
              description: Lists all open bugs
              jql: type = Bug and resolution is empty
              name: All Open Bugs
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
              example: '{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"}'
        '400':
          description: Returned if the request object is invalid. For example, the
            `name` is not unique or the project ID is not specified for a project
            role share permission.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:filter:jira
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:jql:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Filters
      summary: Delete filter
      description: |-
        Delete a filter.

        **[Permissions](#permissions) required:** Permission to access Jira, however filters can only be deleted by the creator of the filter or a user with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteFilter
      parameters:
      - name: id
        in: path
        description: The ID of the filter to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the filter is not found.
        '401':
          description: Returned if the user does not have permission to delete the
            filter.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:filter:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /group/user:
    post:
      tags:
      - Groups
      summary: Add user to group
      description: |-
        Adds a user to a group.

        **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).
      operationId: addUserToGroup
      parameters:
      - name: groupname
        in: query
        description: "As a group's name can change, use of `groupId` is recommended\
          \ to identify a group.  \nThe name of the group. This parameter cannot be\
          \ used with the `groupId` parameter"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupId
        in: query
        description: The ID of the group. This parameter cannot be used with the `groupName`
          parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-showInExample: 'true'
      requestBody:
        description: The user to add to the group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserToGroupBean'
            example:
              accountId: 5b10ac8d82e05b22cc7d4ef5
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: |-
            Returned if:

             *  `groupname` is not provided.
             *  `accountId` is missing.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing from the request.
        '403':
          description: Returned if the calling user does not have the necessary permission.
        '404':
          description: Returned if the group or user are not found.
        '429':
          description: Returned if rate limiting is being enforced.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:group:jira
        - read:avatar:jira
        - read:group:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
    delete:
      tags:
      - Groups
      summary: Remove user from group
      description: |-
        Removes a user from a group.

        **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).
      operationId: removeUserFromGroup
      parameters:
      - name: groupname
        in: query
        description: "As a group's name can change, use of `groupId` is recommended\
          \ to identify a group.  \nThe name of the group. This parameter cannot be\
          \ used with the `groupId` parameter"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupId
        in: query
        description: The ID of the group. This parameter cannot be used with the `groupName`
          parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-showInExample: 'true'
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: true
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
        '400':
          description: |-
            Returned if:

             *  `groupName` is missing.
             *  `accountId` is missing.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing from the request.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the group or user are not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:group:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /project/{projectIdOrKey}/avatars:
    get:
      tags:
      - Project avatars
      summary: Get all project avatars
      description: |-
        Returns all project avatars, grouped by system and custom avatars.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getAllProjectAvatars
      parameters:
      - name: projectIdOrKey
        in: path
        description: The ID or (case-sensitive) key of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAvatars'
              example: '{"custom":[{"id":"1010","isDeletable":true,"isSelected":false,"isSystemAvatar":false,"urls":{"16x16":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10080&avatarType=project","24x24":"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10080&avatarType=project","32x32":"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10080&avatarType=project","48x48":"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10080&avatarType=project"}}],"system":[{"id":"1000","isDeletable":false,"isSelected":false,"isSystemAvatar":true,"urls":{"16x16":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10040&avatarType=project","24x24":"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10040&avatarType=project","32x32":"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10040&avatarType=project","48x48":"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10040&avatarType=project"}}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view the project.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project.avatar:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /screens/{screenId}/availableFields:
    get:
      tags:
      - Screens
      summary: Get available screen fields
      description: |-
        Returns the fields that can be added to a tab on a screen.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAvailableScreenFields
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScreenableField'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:screen-field:jira
        - read:screenable-field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /priorityscheme:
    get:
      tags:
      - Priority schemes
      summary: Get priority schemes
      description: |-
        Returns a [paginated](#pagination) list of priority schemes.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getPrioritySchemes
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: priorityId
        in: query
        description: A set of priority IDs to filter by. To include multiple IDs,
          provide an ampersand-separated list. For example, `priorityId=10000&priorityId=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: schemeId
        in: query
        description: A set of priority scheme IDs. To include multiple IDs, provide
          an ampersand-separated list. For example, `schemeId=10000&schemeId=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: schemeName
        in: query
        description: The name of scheme to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: onlyDefault
        in: query
        description: Whether only the default priority is returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: orderBy
        in: query
        description: The ordering to return the priority schemes by
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - +name
          - -name
          default: +name
      - name: expand
        in: query
        description: A comma separated list of additional information to return. "priorities"
          will return priorities associated with the priority scheme. "projects" will
          return projects associated with the priority scheme. `expand=priorities,projects`
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":1,"values":[{"description":"This
                is the default scheme used by all new and unassigned projects","id":"1","isDefault":true,"name":"Default
                Priority Scheme","priorities":{"isLast":true,"maxResults":50,"startAt":0,"total":3,"values":[{"description":"Serious
                problem that could block progress.","iconUrl":"/images/icons/priorities/high.svg","id":"1","isDefault":false,"name":"High","statusColor":"#f15C75"},{"description":"Has
                the potential to affect progress.","iconUrl":"/images/icons/priorities/medium.svg","id":"2","isDefault":true,"name":"Medium","statusColor":"#f79232"},{"description":"Minor
                problem or easily worked around.","iconUrl":"/images/icons/priorities/low.svg","id":"3","isDefault":false,"name":"Low","statusColor":"#707070"}]},"projects":{"isLast":true,"maxResults":50,"startAt":0,"total":1,"values":[{"avatarUrls":{"16x16":"secure/projectavatar?size=xsmall&pid=10000","24x24":"secure/projectavatar?size=small&pid=10000","32x32":"secure/projectavatar?size=medium&pid=10000","48x48":"secure/projectavatar?size=large&pid=10000"},"id":"10000","key":"EX","name":"Example","projectCategory":{"description":"Project
                category description","id":"10000","name":"A project category"},"projectTypeKey":"ProjectTypeKey{key=''software''}","self":"project/EX","simplified":false}]}}]}'
        '400':
          description: Returned if the request isn't valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Priority schemes
      summary: Create priority scheme
      description: |-
        Creates a new priority scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createPriorityScheme
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrioritySchemeDetails'
            example:
              defaultPriorityId: 10001
              description: My priority scheme description
              mappings:
                in:
                  '10002': 10000
                  '10005': 10001
                  '10006': 10001
                  '10008': 10003
                out: {
                  }
              name: My new priority scheme
              priorityIds:
              - 10000
              - 10001
              - 10003
              projectIds:
              - 10005
              - 10006
              - 10007
        required: true
      responses:
        '201':
          description: Returned if the request is completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrioritySchemeId'
              example: '{"id":"10001"}'
        '202':
          description: Returned if the request is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrioritySchemeId'
              example: '{"id":"10001","task":{"self":"https://your-domain.atlassian.net/rest/api/3/task/1","id":"1","description":"Task
                description","status":"COMPLETE","result":"the task result, this may
                be any JSON","submittedBy":10000,"progress":100,"elapsedRuntime":156,"submitted":1501708132800,"started":1501708132900,"finished":1501708133000,"lastUpdate":1501708133000}}'
        '400':
          description: |-
            Returned if the request isn't valid.

            **Mappings Validation Errors**

             *  ``The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the 'in' mappings object, where these priorities are the keys with corresponding values.`` The listed priority ID(s) have not been provided as keys for ``in`` mappings but are required, add them to the mappings object.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user doesn't have the necessary permissions.
        '409':
          description: Returned if an action with this priority scheme is still in
            progress.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /atlassian-connect/1/migration/workflow/rule/search:
    post:
      tags:
      - App migration
      summary: Get workflow transition rule configurations
      description: Returns configurations for workflow transition rules migrated from
        server to cloud and owned by the calling Connect app.
      operationId: MigrationResource.workflowRuleSearch_post
      parameters:
      - name: Atlassian-Transfer-Id
        in: header
        description: The app migration transfer ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        x-ballerina-name: atlassianTransferId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowRulesSearch'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRulesSearchDetails'
              example:
                workflowEntityId: a498d711-685d-428d-8c3e-bc03bb450ea7
                invalidRules:
                - 55d44f1d-c859-42e5-9c27-2c5ec3f340b1
                validRules:
                - workflowId:
                    name: Workflow name
                    draft: true
                  postFunctions:
                  - id: '123'
                    key: WorkflowKey
                    configuration:
                      value: WorkflowValidator
                    transition:
                      name: transition
                      id: 123
                  conditions:
                  - id: '123'
                    key: WorkflowKey
                    configuration:
                      value: WorkflowValidator
                    transition:
                      name: transition
                      id: 123
                  validators:
                  - id: '123'
                    key: WorkflowKey
                    configuration:
                      value: WorkflowValidator
                    transition:
                      name: transition
                      id: 123
        '400':
          description: Returned if the request is not valid.
        '403':
          description: Returned if the authorisation credentials are incorrect or
            missing.
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: NONE
  /atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}:
    get:
      tags:
      - App properties
      summary: Get app property
      description: |-
        Returns the key and value of an app's property.

        **[Permissions](#permissions) required:** Only a Connect app whose key matches `addonKey` can make this request.
        Additionally, Forge apps can access Connect app properties (stored against the same `app.connect.key`).
      operationId: AddonPropertiesResource.getAddonProperty_get
      parameters:
      - name: addonKey
        in: path
        description: The key of the app, as defined in its descriptor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityProperty'
              example:
                self: https://your-domain.atlassian.net/jira/rest/atlassian-connect/1/addon/example.app.key/properties/propertyKey
                key: propertyKey
                value: propertyValue
        '400':
          description: Returned if the property key is longer than 127 characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: The property key cannot be longer than 127 characters.
                statusCode: 400
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Access to this resource must be authenticated as an app.
                statusCode: 401
        '404':
          description: Returned if the property is not found or doesn't belong to
            the app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Property with key not found.
                statusCode: 404
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes: [
          ]
        state: Beta
      x-atlassian-connect-scope: NONE
    put:
      tags:
      - App properties
      summary: Set app property
      description: |-
        Sets the value of an app's property. Use this resource to store custom data for your app.

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.

        **[Permissions](#permissions) required:** Only a Connect app whose key matches `addonKey` can make this request.
        Additionally, Forge apps can access Connect app properties (stored against the same `app.connect.key`).
      operationId: AddonPropertiesResource.putAddonProperty_put
      parameters:
      - name: addonKey
        in: path
        description: The key of the app, as defined in its descriptor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {
              }
        required: true
      responses:
        '200':
          description: Returned if the property is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Property updated.
                statusCode: 200
        '201':
          description: Returned is the property is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Property created.
                statusCode: 201
        '400':
          description: |-
            Returned if:
              * the property key is longer than 127 characters.
              * the value is not valid JSON.
              * the value is longer than 32768 characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: The property key cannot be longer than 127 characters.
                statusCode: 400
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Access to this resource must be authenticated as an app.
                statusCode: 401
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes: [
          ]
        state: Beta
      x-atlassian-connect-scope: NONE
    delete:
      tags:
      - App properties
      summary: Delete app property
      description: |-
        Deletes an app's property.

        **[Permissions](#permissions) required:** Only a Connect app whose key matches `addonKey` can make this request.
        Additionally, Forge apps can access Connect app properties (stored against the same `app.connect.key`).
      operationId: AddonPropertiesResource.deleteAddonProperty_delete
      parameters:
      - name: addonKey
        in: path
        description: The key of the app, as defined in its descriptor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the property key is longer than 127 characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: The property key cannot be longer than 127 characters.
                statusCode: 400
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Access to this resource must be authenticated as an app.
                statusCode: 401
        '404':
          description: Returned if the property is not found or doesn't belong to
            the app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Property with key not found.
                statusCode: 404
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes: [
          ]
        state: Beta
      x-atlassian-connect-scope: NONE
  /priority/{id}:
    get:
      tags:
      - Issue priorities
      summary: Get priority
      description: |-
        Returns an issue priority.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getPriority
      parameters:
      - name: id
        in: path
        description: The ID of the issue priority
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Priority'
              example: '{"description":"Major loss of function.","iconUrl":"https://your-domain.atlassian.net/images/icons/priorities/major.png","id":"1","name":"Major","self":"https://your-domain.atlassian.net/rest/api/3/priority/3","statusColor":"#009900"}'
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if the issue priority isn't found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:priority:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue priorities
      summary: Update priority
      description: |-
        Updates an issue priority.

        At least one request body parameter must be defined.

        Deprecation applies to iconUrl param in request body which will be sunset on 16th Mar 2025. For more details refer to [changelog](https://developer.atlassian.com/changelog/#CHANGE-1525).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updatePriority
      parameters:
      - name: id
        in: path
        description: The ID of the issue priority
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePriorityDetails'
            example:
              description: My updated priority description
              iconUrl: images/icons/priorities/minor.png
              name: My updated priority
              statusColor: '#123456'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The length of the description must not
                exceed 255 characters."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue priority isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Priority with ID 10000 not found."],"errors":{}}'
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-changes:
      - announced: 2024-09-16T00:00:00Z
        details: https://developer.atlassian.com/changelog/#CHANGE-1525
        effective: 2025-03-16T00:00:00Z
        type: removed
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue priorities
      summary: Delete priority
      description: |-
        Deletes an issue priority.

        This operation is [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deletePriority
      parameters:
      - name: id
        in: path
        description: The ID of the issue priority
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '303':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The newPriority has to be provided."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue priority isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Priority with ID 10000 not found."],"errors":{}}'
        '409':
          description: Returned if a task to delete the issue priority is already
            running.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-changes:
      - announced: 2023-07-18T00:00:00Z
        details: https://developer.atlassian.com/changelog/#CHANGE-1067
        effective: 2024-05-24T00:00:00Z
        type: removed
      x-atlassian-connect-scope: ADMIN
  /serverInfo:
    get:
      tags:
      - Server info
      summary: Get Jira instance info
      description: |-
        Returns information about the Jira instance.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getServerInfo
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInformation'
              example: '{"baseUrl":"https://your-domain.atlassian.net","buildDate":"2020-03-26T22:20:59.000+0000","buildNumber":582,"defaultLocale":{"locale":"en_AU"},"displayUrl":"https://instance.jira.your-domain.com","displayUrlConfluence":"https://instance.confluence.your-domain.com","displayUrlServicedeskHelpCenter":"https://instance.help.your-domain.com","scmInfo":"1f51473f5c7b75c1a69a0090f4832cdc5053702a","serverTime":"2020-03-31T16:43:50.000+0000","serverTimeZone":"Australia/Sydney","serverTitle":"My
                Jira instance","version":"1001.0.0-SNAPSHOT","versionNumbers":[5,0,0]}'
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes: [
          ]
        state: Beta
      x-atlassian-connect-scope: READ
  /app/field/{fieldIdOrKey}/value:
    put:
      tags:
      - Issue custom field values (apps)
      summary: Update custom field value
      description: |-
        Updates the value of a custom field on one or more issues.

        Apps can only perform this operation on [custom fields](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/) and [custom field types](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/) declared in their own manifests.

        **[Permissions](#permissions) required:** Only the app that owns the custom field or custom field type can update its values with this operation.

        The new `write:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: updateCustomFieldValue
      parameters:
      - name: fieldIdOrKey
        in: path
        description: The ID or key of the custom field. For example, `customfield_10010`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: generateChangelog
        in: query
        description: Whether to generate a changelog for this update
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldValueUpdateDetails'
            example:
              updates:
              - issueIds:
                - 10010
                value: new value
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '403':
          description: Returned if the request is not authenticated as the app that
            provided the field.
        '404':
          description: Returned if the field is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes:
        - write:app-data:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /data-policy:
    get:
      tags:
      - App data policies
      summary: Get data policy for the workspace
      description: Returns data policy for the workspace.
      operationId: getPolicy
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDataPolicy'
              example: '{"anyContentBlocked":false}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only apps can access this resource."],"errors":{}}'
        '403':
          description: Returned if the client is not authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":[""],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: READ
  /issue/{issueIdOrKey}/worklog/move:
    post:
      tags:
      - Issue worklogs
      summary: Bulk move worklogs
      description: |-
        Moves a list of worklogs from one issue to another. This is an experimental API with several limitations:

         *  You can't move more than 5000 worklogs at once.
         *  You can't move worklogs containing an attachment.
         *  You can't move worklogs restricted by project roles.
         *  No notifications will be sent for moved worklogs.
         *  No webhooks or events will be sent for moved worklogs.
         *  No issue history will be recorded for moved worklogs.

        Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the projects containing the source and destination issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  *Delete all worklogs*[ and *Edit all worklogs*](https://confluence.atlassian.com/x/yodKLg)[project permission](https://confluence.atlassian.com/x/yodKLg)
         *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: bulkMoveWorklogs
      parameters:
      - name: issueIdOrKey
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adjustEstimate
        in: query
        description: |-
          Defines how to update the issues' time estimate, the options are:

           *  `leave` Leaves the estimate unchanged.
           *  `auto` Reduces the estimate by the aggregate value of `timeSpent` across all worklogs being moved in the source issue, and increases it in the destination issue
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - leave
          - auto
          default: auto
      - name: overrideEditableFlag
        in: query
        description: Whether the work log entry should be moved to and from the issues
          even if the issues are not editable, because jira.issue.editable set to
          false or missing. For example, the issue is closed. Connect and Forge app
          users with admin permission can use this flag
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: A JSON object containing a list of worklog IDs and the ID or
          key of the destination issue
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorklogsMoveRequestBean'
            example:
              ids:
              - 1
              - 2
              - 5
              - 10
              issueIdOrKey: ABC-1234
        required: true
      responses:
        '200':
          description: Returned if the request is partially successful
        '204':
          description: Returned if the request is successful.
        '400':
          description: |-
            Returned if:

             *  `request` is not provided or is invalid
             *  the user does not have permission to move the worklogs
             *  the number of worklogs being moved exceeds the limit
             *  the total size of worklogs being moved is too large
             *  any worklog contains attachments
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: |-
            Returned if:

             *  the source or destination issue is not found or the user does not have permission to view the issues
             *  at least one of the worklogs is not associated with the provided issue
             *  time tracking is disabled
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-worklog:jira
        - write:issue-worklog:jira
        - delete:issue-worklog:jira
        - read:issue-worklog.property:jira
        - write:issue-worklog.property:jira
        - delete:issue-worklog.property:jira
        - write:issue.time-tracking:jira
        - read:group:jira
        - read:project-role:jira
        - read:user:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
  /attachment/{id}/expand/raw:
    get:
      tags:
      - Issue attachments
      summary: Get contents metadata for an expanded attachment
      description: |-
        Returns the metadata for the contents of an attachment, if it is an archive. For example, if the attachment is a ZIP archive, then information about the files in the archive is returned. Currently, only the ZIP archive format is supported.

        Use this operation if you are processing the data without presenting it to the user, as this operation only returns the metadata for the contents of the attachment. Otherwise, to retrieve data to present to the user, use [ Get all metadata for an expanded attachment](#api-rest-api-3-attachment-id-expand-human-get) which also returns the metadata for the attachment itself, such as the attachment's ID and name.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** For the issue containing the attachment:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If attachments are added in private comments, the comment-level restriction will be applied.
      operationId: expandAttachmentForMachines
      parameters:
      - name: id
        in: path
        description: The ID of the attachment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful. If an empty list is
            returned in the response, the attachment is empty, corrupt, or not an
            archive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentArchiveImpl'
              example: '{"entries":[{"entryIndex":0,"mediaType":"audio/mpeg","name":"Allegro
                from Duet in C Major.mp3","size":1430174},{"entryIndex":1,"mediaType":"text/rtf","name":"lrm.rtf","size":331}],"totalEntryCount":24}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: The user does not have the necessary permission.
        '404':
          description: |-
            Returned if:

             *  the attachment is not found.
             *  attachments are disabled in the Jira settings.
        '409':
          description: Returned if the attachment is an archive, but not a supported
            archive format.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:attachment:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /comment/list:
    post:
      tags:
      - Issue comments
      summary: Get comments by IDs
      description: |-
        Returns a [paginated](#pagination) list of comments specified by a list of comment IDs.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Comments are returned where the user:

         *  has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: getCommentsByIds
      parameters:
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `renderedBody` Returns the comment body rendered in HTML.
           *  `properties` Returns the comment's properties
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The list of comment IDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCommentListRequestBean'
            example:
              ids:
              - 1
              - 2
              - 5
              - 10
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanComment'
              example: '{"isLast":true,"maxResults":1048576,"startAt":0,"total":1,"values":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper."}]}]},"created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}]}'
        '400':
          description: Returned if the request contains more than 1000 IDs or is empty.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:comment.property:jira
        - read:avatar:jira
        - read:comment:jira
        - read:group:jira
        - read:project-role:jira
        - read:user:jira
        - read:comment.property:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issue/properties/multi:
    post:
      tags:
      - Issue properties
      summary: Bulk set issue properties by issue
      description: |-
        Sets or updates entity property values on issues. Up to 10 entity properties can be specified for each issue and up to 100 issues included in the request.

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON.

        This operation is:

         *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.
         *  non-transactional. Updating some entities may fail. Such information will available in the task result.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: bulkSetIssuePropertiesByIssue
      parameters: [
        ]
      requestBody:
        description: Details of the issue properties to be set or updated. Note that
          if an issue is not found, it is ignored
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiIssueEntityProperties'
            example:
              issues:
              - issueID: 1000
                properties:
                  myProperty:
                    owner: admin
                    weight: 100
              - issueID: 1001
                properties:
                  myOtherProperty:
                    cost: 150
                    transportation: car
        required: true
      responses:
        '303':
          description: Returned if the operation is successful
        '400':
          description: Return if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Return if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /issue/{issueIdOrKey}/worklog/{worklogId}/properties:
    get:
      tags:
      - Issue worklog properties
      summary: Get worklog property keys
      description: |-
        Returns the keys of all properties for a worklog.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: getWorklogPropertyKeys
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: worklogId
        in: path
        description: The ID of the worklog
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeys'
              example: '{"keys":[{"key":"issue.support","self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support"}]}'
        '400':
          description: Returned if the worklog ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the issue or worklog is not found.
             *  the user does not have permission to view the issue or worklog.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-worklog.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /workflow/rule/config:
    get:
      tags:
      - Workflow transition rules
      summary: Get workflow transition rule configurations
      description: |-
        Returns a [paginated](#pagination) list of workflows with transition rules. The workflows can be filtered to return only those containing workflow transition rules:

         *  of one or more transition rule types, such as [workflow post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/).
         *  matching one or more transition rule keys.

        Only workflows containing transition rules created by the calling [Connect](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) or [Forge](https://developer.atlassian.com/cloud/jira/platform/index/#forge-apps) app are returned.

        Due to server-side optimizations, workflows with an empty list of rules may be returned; these workflows can be ignored.

        **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) or [Forge](https://developer.atlassian.com/cloud/jira/platform/index/#forge-apps) apps can use this operation.
      operationId: getWorkflowTransitionRuleConfigurations
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          type: integer
          format: int32
          default: 10
      - name: types
        in: query
        description: The types of the transition rules to return
        required: true
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - postfunction
            - condition
            - validator
            default: ''
      - name: keys
        in: query
        description: The transition rule class keys, as defined in the Connect or
          the Forge app descriptor, of the transition rules to return
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      - name: workflowNames
        in: query
        description: The list of workflow names to filter by
        required: false
        style: form
        explode: true
        schema:
          maxLength: 50
          uniqueItems: true
          type: array
          items:
            maxLength: 50
            type: string
            default: ''
      - name: withTags
        in: query
        description: The list of `tags` to filter by
        required: false
        style: form
        explode: true
        schema:
          maxLength: 20
          uniqueItems: true
          type: array
          items:
            maxLength: 20
            type: string
            default: ''
      - name: draft
        in: query
        description: Whether draft or published workflows are returned. If not provided,
          both workflow types are returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information in
          the response. This parameter accepts `transition`, which, for each rule,
          returns information about the transition the rule is assigned to
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanWorkflowTransitionRules'
              example: '{"isLast":true,"maxResults":10,"startAt":0,"total":1,"values":[{"workflowId":{"name":"My
                Workflow name","draft":false},"postFunctions":[{"id":"b4d6cbdc-59f5-11e9-8647-d663bd873d93","key":"postfunction-key","configuration":{"value":"{
                \"color\": \"red\" }","disabled":false,"tag":"Sample tag"},"transition":{"id":1,"name":"Open"}}],"conditions":[{"id":"d663bd873d93-59f5-11e9-8647-b4d6cbdc","key":"condition-key","configuration":{"value":"{
                \"size\": \"medium\" }","disabled":false,"tag":"Another tag"},"transition":{"id":1,"name":"Open"}}],"validators":[{"id":"11e9-59f5-b4d6cbdc-8647-d663bd873d93","key":"validator-key","configuration":{"value":"\"{
                \\\"shape\\\": \\\"square\\\" }\"","disabled":false},"transition":{"id":1,"name":"Open"}}]}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the caller is not a Connect or Forge app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if any transition rule type is not supported.
        '503':
          description: Returned if we encounter a problem while trying to access the
            required data.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Workflow transition rules
      summary: Update workflow transition rule configurations
      description: |-
        Updates configuration of workflow transition rules. The following rule types are supported:

         *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)
         *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)
         *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)

        Only rules created by the calling [Connect](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) or [Forge](https://developer.atlassian.com/cloud/jira/platform/index/#forge-apps) app can be updated.

        To assist with app migration, this operation can be used to:

         *  Disable a rule.
         *  Add a `tag`. Use this to filter rules in the [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).

        Rules are enabled if the `disabled` parameter is not provided.

        **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) or [Forge](https://developer.atlassian.com/cloud/jira/platform/index/#forge-apps) apps can use this operation.
      operationId: updateWorkflowTransitionRuleConfigurations
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowTransitionRulesUpdate'
            example:
              workflows:
              - conditions:
                - configuration:
                    disabled: false
                    tag: Another tag
                    value: '{ "size": "medium" }'
                  id: d663bd873d93-59f5-11e9-8647-b4d6cbdc
                postFunctions:
                - configuration:
                    disabled: false
                    tag: Sample tag
                    value: '{ "color": "red" }'
                  id: b4d6cbdc-59f5-11e9-8647-d663bd873d93
                validators:
                - configuration:
                    disabled: false
                    value: '{ "shape": "square" }'
                  id: 11e9-59f5-b4d6cbdc-8647-d663bd873d93
                workflowId:
                  draft: false
                  name: My Workflow name
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTransitionRulesUpdateErrors'
              example: '{"updateResults":[{"workflowId":{"name":"Workflow with one
                rule not updated","draft":false},"ruleUpdateErrors":{"example-rule-id":["The
                rule with this id does not exist: example-rule-id"]},"updateErrors":[]},{"workflowId":{"name":"Workflow
                with all rules successfully updated","draft":true},"ruleUpdateErrors":{},"updateErrors":[]},{"workflowId":{"name":"Non-existing
                workflow","draft":false},"ruleUpdateErrors":{},"updateErrors":["Workflow
                not found: WorkflowIdBean{name=Non-existing workflow, draft=false}"]}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the caller is not a Connect or Forge app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '503':
          description: Returned if we encounter a problem while trying to access the
            required data.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /bulk/issues/move:
    post:
      tags:
      - Issue bulk operations
      summary: Bulk move issues
      description: "Use this API to submit a bulk issue move request. You can move\
        \ multiple issues from multiple projects in a single request, but they must\
        \ all be moved to a single project, issue type, and parent. You can't move\
        \ more than 1000 issues (including subtasks) at once.\n\n#### Scenarios: ####\n\
        \nThis is an early version of the API and it doesn't have full feature parity\
        \ with the Bulk Move UI experience.\n\n *  Moving issue of type A to issue\
        \ of type B in the same project or a different project: `SUPPORTED`\n *  Moving\
        \ multiple issues of type A in one or more projects to multiple issues of\
        \ type B in one of the source projects or a different project: `SUPPORTED`\n\
        \ *  Moving issues of multiple issue types in one or more projects to issues\
        \ of a single issue type in one of the source project or a different project:\
        \ **`SUPPORTED`**  \n    E.g. Moving issues of story and task issue types\
        \ in project 1 and project 2 to issues of task issue type in project 3\n *\
        \  Moving a standard parent issue of type A with its multiple subtask issue\
        \ types in one project to standard issue of type B and multiple subtask issue\
        \ types in the same project or a different project: `SUPPORTED`\n *  Moving\
        \ standard issues with their subtasks to a parent issue in the same project\
        \ or a different project without losing their relation: `SUPPORTED`\n *  Moving\
        \ an epic issue with its child issues to a different project without losing\
        \ their relation: `SUPPORTED`  \n    This usecase is **supported using multiple\
        \ requests**. Move the epic in one request and then move the children in a\
        \ separate request with target parent set to the epic issue id  \n      \n\
        \    (Alternatively, move them individually and stitch the relationship back\
        \ with the Bulk Edit API)\n\n#### Limits applied to bulk issue moves: ####\n\
        \nWhen using the bulk move, keep in mind that there are limits on the number\
        \ of issues and fields you can include.\n\n *  You can move up to 1,000 issues\
        \ in a single operation, including any subtasks.\n *  The total combined number\
        \ of fields across all issues must not exceed 1,500,000. For example, if each\
        \ issue includes 15,000 fields, then the maximum number of issues that can\
        \ be moved is 100.\n\n**[Permissions](#permissions) required:**\n\n *  Global\
        \ bulk change [permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-global-permissions/).\n\
        \ *  Move [issues permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/)\
        \ in source projects.\n *  Create [issues permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/)\
        \ in destination projects.\n *  Browse [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/)\
        \ in destination projects, if moving subtasks only.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg)\
        \ is configured, issue-level security permission to view the issue."
      operationId: submitBulkMove
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueBulkMovePayload'
            example:
              sendBulkNotification: true
              targetToSourcesMapping:
                PROJECT-KEY,10001:
                  inferClassificationDefaults: false
                  inferFieldDefaults: false
                  inferStatusDefaults: false
                  inferSubtaskTypeDefault: true
                  issueIdsOrKeys:
                  - ISSUE-1
                  targetClassification:
                  - classifications:
                      5bfa70f7-4af1-44f5-9e12-1ce185f15a38:
                      - bd58e74c-c31b-41a7-ba69-9673ebd9dae9
                      - '-1'
                  targetMandatoryFields:
                  - fields:
                      customfield_10000:
                        retain: false
                        type: raw
                        value:
                        - value-1
                        - value-2
                      description:
                        retain: true
                        type: adf
                        value:
                          content:
                          - content:
                            - text: New description value
                              type: text
                            type: paragraph
                          type: doc
                          version: 1
                      fixVersions:
                        retain: false
                        type: raw
                        value:
                        - '10009'
                      labels:
                        retain: false
                        type: raw
                        value:
                        - label-1
                        - label-2
                  targetStatus:
                  - statuses:
                      '10001':
                      - '10002'
                      - '10003'
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedBulkOperation'
              example: '{"taskId":"10641"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
              example: '{"errors":[{"message":"Some of the issues in the issueIdsOrKeys
                are not valid"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /issuesecurityschemes/{schemeId}:
    delete:
      tags:
      - Issue security schemes
      summary: Delete issue security scheme
      description: |-
        Deletes an issue security scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteSecurityScheme
      parameters:
      - name: schemeId
        in: path
        description: The ID of the issue security scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '"You can''t delete an issue security scheme if any projects
                are associated with it."'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue security scheme isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue security scheme with ID 10000 not
                found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/avatar2:
    post:
      tags:
      - Project avatars
      summary: Load project avatar
      description: "Loads an avatar for a project.\n\nSpecify the avatar's local file\
        \ location in the body of the request. Also, include the following headers:\n\
        \n *  `X-Atlassian-Token: no-check` To prevent XSRF protection blocking the\
        \ request, for more information see [Special Headers](#special-request-headers).\n\
        \ *  `Content-Type: image/image type` Valid image types are JPEG, GIF, or\
        \ PNG.\n\nFor example:  \n`curl --request POST `\n\n`--user email@example.com:<api_token>\
        \ `\n\n`--header 'X-Atlassian-Token: no-check' `\n\n`--header 'Content-Type:\
        \ image/< image_type>' `\n\n`--data-binary \"<@/path/to/file/with/your/avatar>\"\
        \ `\n\n`--url 'https://your-domain.atlassian.net/rest/api/3/project/{projectIdOrKey}/avatar2'`\n\
        \nThe avatar is cropped to a square. If no crop parameters are specified,\
        \ the square originates at the top left of the image. The length of the square's\
        \ sides is set to the smaller of the height or width of the image.\n\nThe\
        \ cropped image is then used to create avatars of 16x16, 24x24, 32x32, and\
        \ 48x48 in size.\n\nAfter creating the avatar use [Set project avatar](#api-rest-api-3-project-projectIdOrKey-avatar-put)\
        \ to set it as the project's displayed avatar.\n\n**[Permissions](#permissions)\
        \ required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg)."
      operationId: createProjectAvatar
      parameters:
      - name: projectIdOrKey
        in: path
        description: The ID or (case-sensitive) key of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x
        in: query
        description: The X coordinate of the top-left corner of the crop region
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: y
        in: query
        description: The Y coordinate of the top-left corner of the crop region
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        description: The length of each side of the crop region
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      requestBody:
        content:
          '*/*':
            schema: {
              }
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avatar'
              example: '{"id":"1010","isDeletable":true,"isSelected":false,"isSystemAvatar":false}'
        '400':
          description: |-
            Returned if:

             *  an image isn't included in the request.
             *  the image type is unsupported.
             *  the crop parameters extend the crop area beyond the edge of the image.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to administer
            the project or an anonymous call is made to the operation.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view the project.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project.avatar:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /attachment/{id}/expand/human:
    get:
      tags:
      - Issue attachments
      summary: Get all metadata for an expanded attachment
      description: |-
        Returns the metadata for the contents of an attachment, if it is an archive, and metadata for the attachment itself. For example, if the attachment is a ZIP archive, then information about the files in the archive is returned and metadata for the ZIP archive. Currently, only the ZIP archive format is supported.

        Use this operation to retrieve data that is presented to the user, as this operation returns the metadata for the attachment itself, such as the attachment's ID and name. Otherwise, use [ Get contents metadata for an expanded attachment](#api-rest-api-3-attachment-id-expand-raw-get), which only returns the metadata for the attachment's contents.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** For the issue containing the attachment:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If attachments are added in private comments, the comment-level restriction will be applied.
      operationId: expandAttachmentForHumans
      parameters:
      - name: id
        in: path
        description: The ID of the attachment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful. If an empty list is
            returned in the response, the attachment is empty, corrupt, or not an
            archive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentArchiveMetadataReadable'
              example: '{"entries":[{"index":0,"label":"MG00N067.JPG","mediaType":"image/jpeg","path":"MG00N067.JPG","size":"119
                kB"},{"index":1,"label":"Allegro from Duet in C Major.mp3","mediaType":"audio/mpeg","path":"Allegro
                from Duet in C Major.mp3","size":"1.36 MB"},{"index":2,"label":"long/path/thanks/to/.../reach/the/leaf.txt","mediaType":"text/plain","path":"long/path/thanks/to/lots/of/subdirectories/inside/making/it/quite/hard/to/reach/the/leaf.txt","size":"0.0
                k"}],"id":7237823,"mediaType":"application/zip","name":"images.zip","totalEntryCount":39}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: The user does not have the necessary permission.
        '404':
          description: |-
            Returned if:

             *  the attachment is not found.
             *  attachments are disabled in the Jira settings.
        '409':
          description: Returned if the attachment is an archive, but not a supported
            archive format.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:attachment:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /dashboard/{dashboardId}/items/{itemId}/properties:
    get:
      tags:
      - Dashboards
      summary: Get dashboard item property keys
      description: |-
        Returns the keys of all properties for a dashboard item.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** The user must be the owner of the dashboard or have the dashboard shared with them. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users, and is accessible to anonymous users when Jira\\u2019s anonymous access is permitted.
      operationId: getDashboardItemPropertyKeys
      parameters:
      - name: dashboardId
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: itemId
        in: path
        description: The ID of the dashboard item
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeys'
              example: '{"keys":[{"key":"issue.support","self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the dashboard or dashboard item is not found, or
            the dashboard is not owned by or shared with the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /screens/{screenId}/tabs/{tabId}/fields/{id}:
    delete:
      tags:
      - Screen tab fields
      summary: Remove screen tab field
      description: |-
        Removes a field from a screen tab.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeScreenTabField
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tabId
        in: path
        description: The ID of the screen tab
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: The ID of the field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen, screen tab, or field is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:screenable-field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{fieldId}/context/{contextId}/project:
    put:
      tags:
      - Issue custom field contexts
      summary: Assign custom field context to projects
      description: |-
        Assigns a custom field context to projects.

        If any project in the request is assigned to any context of the custom field, the operation fails.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: assignProjectsToCustomFieldContext
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIds'
            example:
              projectIds:
              - '10001'
              - '10005'
              - '10006'
        required: true
      responses:
        '204':
          description: Returned if operation is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The projectIds must not contain duplicates."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field, context, or project is not found.
          content:
            application/json:
              example: '{"errorMessages":["The context was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/changelog/list:
    post:
      tags:
      - Issues
      summary: Get changelogs by IDs
      description: |-
        Returns changelogs for an issue specified by a list of changelog IDs.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getChangeLogsByIds
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueChangelogIds'
            example:
              changelogIds:
              - 10001
              - 10002
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfChangelogs'
              example: '{"histories":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"created":"1970-01-18T06:27:50.429+0000","id":"10001","items":[{"field":"fields","fieldtype":"jira","fieldId":"fieldId","from":null,"fromString":"","to":null,"toString":"label-1"}]},{"author":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"created":"1970-01-18T06:27:51.429+0000","id":"10002","items":[{"field":"fields","fieldtype":"jira","fieldId":"fieldId","from":null,"fromString":"label-1","to":null,"toString":"label-1
                label-2"}]}],"maxResults":2,"startAt":0,"total":2}'
        '400':
          description: Returned if the request is not valid.
        '404':
          description: Returned if the issue is not found or the user does not have
            the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-meta:jira
        - read:avatar:jira
        - read:issue.changelog:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /workflows/search:
    get:
      tags:
      - Workflows
      summary: Search workflows
      description: |-
        Returns a [paginated](#pagination) list of global and project workflows. If workflow names are specified in the query string, details of those workflows are returned. Otherwise, all workflows are returned.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* global permission to access all, including project-scoped, workflows
         *  At least one of the *Administer projects* and *View (read-only) workflow* project permissions to access project-scoped workflows
      operationId: searchWorkflows
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `values.transitions` Returns the transitions that each workflow is associated with
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: queryString
        in: query
        description: String used to perform a case-insensitive partial match with
          workflow name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `name` Sorts by workflow name.
           *  `created` Sorts by create time.
           *  `updated` Sorts by update time
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: scope
        in: query
        description: The scope of the workflow. Global for company-managed projects
          and Project for team-managed projects
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: isActive
        in: query
        description: Filters active and inactive workflows
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSearchResponse'
              example: '{"isLast":false,"maxResults":50,"nextPage":"https://your-domain.atlassian.net/rest/api/3/workflows/search?startAt=50","self":"https://your-domain.atlassian.net/rest/api/3/workflows/search","startAt":0,"statuses":[{"description":"","id":"10001","name":"To
                Do","scope":{"type":"GLOBAL"},"statusCategory":"TODO","statusReference":"10001","usages":[]},{"description":"","id":"10002","name":"In
                Progress","scope":{"type":"GLOBAL"},"statusCategory":"IN_PROGRESS","statusReference":"10002","usages":[]},{"description":"","id":"10003","name":"Done","scope":{"type":"GLOBAL"},"statusCategory":"DONE","statusReference":"10003","usages":[]}],"total":100,"values":[{"description":"","id":"b9ff2384-d3b6-4d4e-9509-3ee19f607168","isEditable":true,"name":"Workflow
                1","scope":{"type":"GLOBAL"},"startPointLayout":{"x":-100.00030899047852,"y":-153.00020599365234},"statuses":[{"deprecated":false,"layout":{"x":317.0000915527344,"y":-16.0},"properties":{},"statusReference":"10002"},{"deprecated":false,"layout":{"x":508.000244140625,"y":-16.0},"properties":{},"statusReference":"10003"},{"deprecated":false,"layout":{"x":114.99993896484375,"y":-16.0},"properties":{},"statusReference":"10001"}],"transitions":[{"actions":[],"description":"","id":"11","links":[],"name":"To
                Do","properties":{},"toStatusReference":"10001","triggers":[],"type":"GLOBAL","validators":[]},{"actions":[],"description":"","id":"21","links":[],"name":"In
                Progress","properties":{},"toStatusReference":"10002","triggers":[],"type":"GLOBAL","validators":[]},{"actions":[],"description":"","id":"41","links":[{"fromPort":0,"fromStatusReference":"10001","toPort":1}],"name":"Start
                work","properties":{},"toStatusReference":"10002","triggers":[],"type":"DIRECTED","validators":[]},{"actions":[],"description":"","id":"1","links":[],"name":"Create","properties":{},"toStatusReference":"10001","triggers":[],"type":"INITIAL","validators":[]},{"actions":[],"description":"","id":"31","links":[],"name":"Done","properties":{},"toStatusReference":"10003","triggers":[],"type":"GLOBAL","validators":[]}],"usages":[],"version":{"id":"f010ac1b-3dd3-43a3-aa66-0ee8a447f76e","versionNumber":0}}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issuetype/{issueTypeId}/properties:
    get:
      tags:
      - Issue type properties
      summary: Get issue type property keys
      description: |-
        Returns all the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) keys of the issue type.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) to get the property keys of any issue type.
         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) to get the property keys of any issue types associated with the projects the user has permission to browse.
      operationId: getIssueTypePropertyKeys
      parameters:
      - name: issueTypeId
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeys'
              example: '{"keys":[{"key":"issue.support","self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support"}]}'
        '400':
          description: Returned if the issue type ID is invalid.
        '404':
          description: |-
            Returned if:

             *  the issue type is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /notificationscheme/project:
    get:
      tags:
      - Issue notification schemes
      summary: Get projects using notification schemes paginated
      description: |-
        Returns a [paginated](#pagination) mapping of project that have notification scheme assigned. You can provide either one or multiple notification scheme IDs or project IDs to filter by. If you don't provide any, this will return a list of all mappings. Note that only company-managed (classic) projects are supported. This is because team-managed projects don't have a concept of a default notification scheme. The mappings are ordered by projectId.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getNotificationSchemeToProjectMappings
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: notificationSchemeId
        in: query
        description: The list of notifications scheme IDs to be filtered out
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      - name: projectId
        in: query
        description: The list of project IDs to be filtered out
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanNotificationSchemeAndProjectMappingJsonBean'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":4,"values":[{"notificationSchemeId":"10001","projectId":"100001"}]}'
        '400':
          description: Returned if search criteria are invalid, strings vs numbers
            for projectId, notificationSchemeId, startAt and maxResult
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:notification-scheme:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /dashboard/gadgets:
    get:
      tags:
      - Dashboards
      summary: Get available gadgets
      description: |-
        Gets a list of all available gadgets that can be added to all dashboards.

        **[Permissions](#permissions) required:** None.
      operationId: getAllAvailableDashboardGadgets
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableDashboardGadgetsResponse'
              example: '{"gadgets":[{"moduleKey":"com.atlassian.plugins.atlassian-connect-plugin:com.atlassian.connect.node.sample-addon__sample-dashboard-item","title":"Issue
                statistics"},{"uri":"rest/gadgets/1.0/g/com.atlassian.streams.streams-jira-plugin:activitystream-gadget/gadgets/activitystream-gadget.xml","title":"Activity
                Stream"}]}'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /screenscheme/{screenSchemeId}:
    put:
      tags:
      - Screen schemes
      summary: Update screen scheme
      description: |-
        Updates a screen scheme. Only screen schemes used in classic projects can be updated.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateScreenScheme
      parameters:
      - name: screenSchemeId
        in: path
        description: The ID of the screen scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The screen scheme update details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScreenSchemeDetails'
            example:
              name: Employee screen scheme v2
              screens:
                create: '10019'
                default: '10018'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The name is used by another scheme."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access screen
                schemes."],"errors":{}}'
        '404':
          description: Returned if the screen scheme or a screen used as one of the
            screen types is not found.
          content:
            application/json:
              example: '{"errorMessages":["The screen scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Screen schemes
      summary: Delete screen scheme
      description: |-
        Deletes a screen scheme. A screen scheme cannot be deleted if it is used in an issue type screen scheme.

        Only screens schemes used in classic projects can be deleted.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteScreenScheme
      parameters:
      - name: screenSchemeId
        in: path
        description: The ID of the screen scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the screen scheme is deleted
        '400':
          description: Returned if the screen scheme is used in an issue type screen
            scheme.
          content:
            application/json:
              example: '{"errorMessages":["The screen scheme cannot be deleted as
                it is in use in an issue type screen scheme."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access screen
                schemes."],"errors":{}}'
        '404':
          description: Returned if the screen scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["The screen scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /plans/plan/{planId}:
    get:
      tags:
      - Plans
      summary: Get plan
      description: |-
        Returns a plan.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getPlan
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: useGroupId
        in: query
        description: Whether to return group IDs instead of group names. Group names
          are deprecated
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlanResponse'
              example: '{"crossProjectReleases":[{"name":"x-plr","releaseIds":[345]}],"customFields":[{"customFieldId":34,"filter":false},{"customFieldId":39,"filter":true}],"exclusionRules":{"issueIds":[1,2],"issueTypeIds":[13,23],"numberOfDaysToShowCompletedIssues":50,"releaseIds":[14,24],"workStatusCategoryIds":[12,22],"workStatusIds":[11,21]},"id":23,"issueSources":[{"type":"Project","value":12},{"type":"Filter","value":10293}],"lastSaved":"2024-10-03T10:15:30Z","leadAccountId":"628f5e86d5ec1f006ne7363x2s","name":"Onset
                TBJ Plan","permissions":[{"holder":{"type":"AccountId","value":"04jekw86d5jjje006ne7363x2s"},"type":"Edit"}],"scheduling":{"dependencies":"Concurrent","endDate":{"dateCustomFieldId":1098,"type":"DateCustomField"},"estimation":"Hours","inferredDates":"ReleaseDates","startDate":{"type":"TargetStartDate"}},"status":"Active"}'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Plans
      summary: Update plan
      description: "Updates any of the following details of a plan using [JSON Patch](https://datatracker.ietf.org/doc/html/rfc6902).\n\
        \n *  name\n *  leadAccountId\n *  scheduling\n    \n     *  estimation with\
        \ StoryPoints, Days or Hours as possible values\n     *  startDate\n     \
        \   \n         *  type with DueDate, TargetStartDate, TargetEndDate or DateCustomField\
        \ as possible values\n         *  dateCustomFieldId\n     *  endDate\n   \
        \     \n         *  type with DueDate, TargetStartDate, TargetEndDate or DateCustomField\
        \ as possible values\n         *  dateCustomFieldId\n     *  inferredDates\
        \ with None, SprintDates or ReleaseDates as possible values\n     *  dependencies\
        \ with Sequential or Concurrent as possible values\n *  issueSources\n   \
        \ \n     *  type with Board, Project or Filter as possible values\n     *\
        \  value\n *  exclusionRules\n    \n     *  numberOfDaysToShowCompletedIssues\n\
        \     *  issueIds\n     *  workStatusIds\n     *  workStatusCategoryIds\n\
        \     *  issueTypeIds\n     *  releaseIds\n *  crossProjectReleases\n    \n\
        \     *  name\n     *  releaseIds\n *  customFields\n    \n     *  customFieldId\n\
        \     *  filter\n *  permissions\n    \n     *  type with View or Edit as\
        \ possible values\n     *  holder\n        \n         *  type with Group or\
        \ AccountId as possible values\n         *  value\n\n**[Permissions](#permissions)\
        \ required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n\
        \n*Note that \"add\" operations do not respect array indexes in target locations.\
        \ Call the \"Get plan\" endpoint to find out the order of array elements.*"
      operationId: updatePlan
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: useGroupId
        in: query
        description: Whether to accept group IDs instead of group names. Group names
          are deprecated
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: object
            example: |
              [{"op": "replace", "path": "/scheduling/estimation", "value": "Days"}]
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issueLink:
    post:
      tags:
      - Issue links
      summary: Create issue link
      description: |-
        Creates a link between two issues. Use this operation to indicate a relationship between two issues and optionally add a comment to the from (outward) issue. To use this resource the site must have [Issue Linking](https://confluence.atlassian.com/x/yoXKM) enabled.

        This resource returns nothing on the creation of an issue link. To obtain the ID of the issue link, use `https://your-domain.atlassian.net/rest/api/3/issue/[linked issue key]?fields=issuelinks`.

        If the link request duplicates a link, the response indicates that the issue link was created. If the request included a comment, the comment is added.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse project* [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the issues to be linked,
         *  *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) on the project containing the from (outward) issue,
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: linkIssues
      parameters: [
        ]
      requestBody:
        description: The issue link request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkIssueRequestJsonBean'
            example:
              comment:
                body:
                  content:
                  - content:
                    - text: Linked related issue!
                      type: text
                    type: paragraph
                  type: doc
                  version: 1
                visibility:
                  identifier: 276f955c-63d7-42c8-9520-92d01dca0625
                  type: group
                  value: jira-software-users
              inwardIssue:
                key: HSP-1
              outwardIssue:
                key: MKY-1
              type:
                name: Duplicate
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the comment is not created. The response contains
            an error message indicating why the comment wasn't created. The issue
            link is also not created.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  issue linking is disabled.
             *  the user cannot view one or both of the issues. For example, the user doesn't have *Browse project* project permission for a project containing one of the issues.
             *  the user does not have *link issues* project permission.
             *  either of the link issues are not found.
             *  the issue link type is not found.
        '413':
          description: Returned if the per-issue limit for issue links has been breached.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:comment:jira
        - write:issue:jira
        - write:issue-link:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /issuetypescheme:
    get:
      tags:
      - Issue type schemes
      summary: Get all issue type schemes
      description: |-
        Returns a [paginated](#pagination) list of issue type schemes.

        Only issue type schemes used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAllIssueTypeSchemes
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: id
        in: query
        description: The list of issue type schemes IDs. To include multiple IDs,
          provide an ampersand-separated list. For example, `id=10000&id=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `name` Sorts by issue type scheme name.
           *  `id` Sorts by issue type scheme ID
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - -name
          - +name
          - id
          - -id
          - +id
          default: id
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `projects` For each issue type schemes, returns information about the projects the issue type scheme is assigned to.
           *  `issueTypes` For each issue type schemes, returns information about the issueTypes the issue type scheme have
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: queryString
        in: query
        description: String used to perform a case-insensitive partial match with
          issue type scheme name
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueTypeScheme'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":3,"values":[{"id":"10000","name":"Default
                Issue Type Scheme","description":"Default issue type scheme is the
                list of global issue types. All newly created issue types will automatically
                be added to this scheme.","defaultIssueTypeId":"10003","isDefault":true},{"id":"10001","name":"SUP:
                Kanban Issue Type Scheme","description":"A collection of issue types
                suited to use in a kanban style project.","projects":{"isLast":true,"maxResults":100,"startAt":0,"total":1,"values":[{"avatarUrls":{"16x16":"secure/projectavatar?size=xsmall&pid=10000","24x24":"secure/projectavatar?size=small&pid=10000","32x32":"secure/projectavatar?size=medium&pid=10000","48x48":"secure/projectavatar?size=large&pid=10000"},"id":"10000","key":"EX","name":"Example","projectCategory":{"description":"Project
                category description","id":"10000","name":"A project category"},"projectTypeKey":"ProjectTypeKey{key=''software''}","self":"project/EX","simplified":false}]}},{"id":"10002","name":"HR:
                Scrum issue type scheme","description":"","defaultIssueTypeId":"10004","issueTypes":{"isLast":true,"maxResults":100,"startAt":0,"total":1,"values":[{"description":"Improvement
                Issue Type","hierarchyLevel":-1,"iconUrl":"www.example.com","id":"1000L","name":"Improvements","subtask":true}]}}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Issue type schemes
      summary: Create issue type scheme
      description: |-
        Creates an issue type scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createIssueTypeScheme
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeSchemeDetails'
            example:
              defaultIssueTypeId: '10002'
              description: A collection of issue types suited to use in a kanban style
                project.
              issueTypeIds:
              - '10001'
              - '10002'
              - '10003'
              name: Kanban Issue Type Scheme
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTypeSchemeID'
              example: '{"issueTypeSchemeId":"10010"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The default issue type ID has to be present
                in issue type IDs list."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type schemes."],"errors":{}}'
        '409':
          description: Returned if the scheme name is used by another scheme.
          content:
            application/json:
              example: '{"errorMessages":["The name is used by another scheme."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /plans/plan/{planId}/team/planonly:
    post:
      tags:
      - Teams in plan
      summary: Create plan-only team
      description: |-
        Creates a plan-only team and configures their planning settings.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createPlanOnlyTeam
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanOnlyTeamRequest'
            example:
              capacity: 200
              issueSourceId: 0
              memberAccountIds:
              - member1AccountId
              - member2AccountId
              name: Team1
              planningStyle: Scrum
              sprintLength: 2
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /screenscheme:
    get:
      tags:
      - Screen schemes
      summary: Get screen schemes
      description: |-
        Returns a [paginated](#pagination) list of screen schemes.

        Only screen schemes used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getScreenSchemes
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 25
      - name: id
        in: query
        description: The list of screen scheme IDs. To include multiple IDs, provide
          an ampersand-separated list. For example, `id=10000&id=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: expand
        in: query
        description: Use [expand](#expansion) include additional information in the
          response. This parameter accepts `issueTypeScreenSchemes` that, for each
          screen schemes, returns information about the issue type screen scheme the
          screen scheme is assigned to
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: queryString
        in: query
        description: String used to perform a case-insensitive partial match with
          screen scheme name
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `id` Sorts by screen scheme ID.
           *  `name` Sorts by screen scheme name
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - -name
          - +name
          - id
          - -id
          - +id
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanScreenScheme'
              example: '{"isLast":true,"maxResults":100,"self":"https://your-domain.atlassian.net/rest/api/3/screenscheme?maxResults=25&startAt=0","startAt":0,"total":2,"values":[{"id":10010,"name":"Employee
                screen scheme","description":"Manage employee data","screens":{"default":10017,"edit":10019,"create":10019,"view":10020},"issueTypeScreenSchemes":{"isLast":true,"maxResults":100,"startAt":0,"total":1,"values":[{"id":"10000","name":"Office
                issue type screen scheme","description":"Managing office projects"}]}},{"id":10032,"name":"Office
                screen scheme","description":"Manage office data","screens":{"default":10020}}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:screen-scheme:jira
        - read:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Screen schemes
      summary: Create screen scheme
      description: |-
        Creates a screen scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createScreenScheme
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenSchemeDetails'
            example:
              description: Manage employee data
              name: Employee screen scheme
              screens:
                default: 10017
                edit: 10019
                view: 10020
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenSchemeId'
              example: '{"id":10001}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The name is used by another scheme."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access screen
                schemes."],"errors":{}}'
        '404':
          description: Returned if a screen used as one of the screen types in the
            screen scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["One or more screens assigned to screen
                types was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /workflowscheme/{id}/draft/default:
    get:
      tags:
      - Workflow scheme drafts
      summary: Get draft default workflow
      description: |-
        Returns the default workflow for a workflow scheme's draft. The default workflow is the workflow that is assigned any issue types that have not been mapped to any other workflow. The default workflow has *All Unassigned Issue Types* listed in its issue types for the workflow scheme in Jira.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getDraftDefaultWorkflow
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultWorkflow'
              example: '{"workflow":"jira"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission..
        '404':
          description: |-
            Returned if any of the following is true:

             *  The workflow scheme is not found.
             *  The workflow scheme does not have a draft.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow scheme drafts
      summary: Update draft default workflow
      description: |-
        Sets the default workflow for a workflow scheme's draft.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateDraftDefaultWorkflow
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The object for the new default workflow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultWorkflow'
            example:
              updateDraftIfNeeded: false
              workflow: jira
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"scrum workflow","description":"The description
                of the example workflow scheme.","draft":true,"id":17218781,"issueTypeMappings":{"10000":"jira","10001":"jira"},"lastModified":"Today
                6:38 PM","lastModifiedUser":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"name":"Example
                workflow scheme","originalDefaultWorkflow":"jira","originalIssueTypeMappings":{"10001":"builds
                workflow"},"self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if any of the following is true:

             *  The workflow scheme is not found.
             *  The workflow scheme does not have a draft.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Workflow scheme drafts
      summary: Delete draft default workflow
      description: |-
        Resets the default workflow for a workflow scheme's draft. That is, the default workflow is set to Jira's system workflow (the *jira* workflow).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteDraftDefaultWorkflow
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"scrum workflow","description":"The description
                of the example workflow scheme.","draft":true,"id":17218781,"issueTypeMappings":{"10000":"jira","10001":"jira"},"lastModified":"Today
                6:38 PM","lastModifiedUser":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"name":"Example
                workflow scheme","originalDefaultWorkflow":"jira","originalIssueTypeMappings":{"10001":"builds
                workflow"},"self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if any of the following is true:

             *  The workflow scheme is not found.
             *  The workflow scheme does not have a draft.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /expression/analyse:
    post:
      tags:
      - Jira expressions
      summary: Analyse Jira expression
      description: |-
        Analyses and validates Jira expressions.

        As an experimental feature, this operation can also attempt to type-check the expressions.

        Learn more about Jira expressions in the [documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).

        **[Permissions](#permissions) required**: None.
      operationId: analyseExpression
      parameters:
      - name: check
        in: query
        description: |-
          The check to perform:

           *  `syntax` Each expression's syntax is checked to ensure the expression can be parsed. Also, syntactic limits are validated. For example, the expression's length.
           *  `type` EXPERIMENTAL. Each expression is type checked and the final type of the expression inferred. Any type errors that would result in the expression failure at runtime are reported. For example, accessing properties that don't exist or passing the wrong number of arguments to functions. Also performs the syntax check.
           *  `complexity` EXPERIMENTAL. Determines the formulae for how many [expensive operations](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#expensive-operations) each expression may execute
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - syntax
          - type
          - complexity
          default: syntax
      requestBody:
        description: The Jira expressions to analyse
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraExpressionForAnalysis'
            example:
              contextVariables:
                listOfStrings: List<String>
                record: '{ a: Number, b: String }'
                value: User
              expressions:
              - issues.map(issue => issue.properties['property_key'])
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraExpressionsAnalysis'
              example: '{"results":[{"expression":"analysed expression","errors":[{"line":1,"column":4,"message":"!,
                -, typeof, (, IDENTIFIER, null, true, false, NUMBER, STRING, TEMPLATE_LITERAL,
                new, [ or { expected, > encountered.","type":"syntax"},{"message":"Jira
                expression is too long (1040), limit: 1000 characters","type":"other"},{"message":"Jira
                expression has too many nodes (150), limit: 100 leaves","type":"other"}],"valid":false},{"expression":"issues.map(i
                => {idAndKey: [i.id, i.key], summary: i.summary, comments: i.comments})","valid":true,"type":"List<{idAndKey:
                [Number, String], summary: String, comments: List<Comment>}>","complexity":{"expensiveOperations":"N","variables":{"N":"issues"}}},{"expression":"issues.map(i
                => i.id > ''0'')","errors":[{"expression":"i.id > 0","message":"Can''t
                compare Number to String.","type":"type"}],"valid":false,"type":"TypeError"}]}'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:jira-expressions:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /jql/autocompletedata:
    get:
      tags:
      - JQL
      summary: Get field reference data (GET)
      description: |-
        Returns reference data for JQL searches. This is a downloadable version of the documentation provided in [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ) and [Advanced searching - functions reference](https://confluence.atlassian.com/x/hgORLQ), along with a list of JQL-reserved words. Use this information to assist with the programmatic creation of JQL queries or the validation of queries built in a custom query builder.

        To filter visible field details by project or collapse non-unique fields by field type then [Get field reference data (POST)](#api-rest-api-3-jql-autocompletedata-post) can be used.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getAutoComplete
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JQLReferenceData'
              example: '{"jqlReservedWords":["empty","and","or","in","distinct"],"visibleFieldNames":[{"displayName":"summary","operators":["~","!~","is","is
                not"],"orderable":"true","searchable":"true","types":["java.lang.String"],"value":"summary"},{"auto":"true","cfid":"cf[10880]","displayName":"Sprint
                - cf[10880]","operators":["=","!=","in","not in","is","is not"],"orderable":"true","searchable":"true","types":["com.atlassian.greenhopper.service.sprint.Sprint"],"value":"Sprint"}],"visibleFunctionNames":[{"displayName":"standardIssueTypes()","isList":"true","types":["com.atlassian.jira.issue.issuetype.IssueType"],"value":"standardIssueTypes()"},{"displayName":"issuesWithText()","supportsListAndSingleValueOperators":"true","types":["com.atlassian.jira.issue.issuetype.IssueType"],"value":"issuesWithText()"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - JQL
      summary: Get field reference data (POST)
      description: |-
        Returns reference data for JQL searches. This is a downloadable version of the documentation provided in [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ) and [Advanced searching - functions reference](https://confluence.atlassian.com/x/hgORLQ), along with a list of JQL-reserved words. Use this information to assist with the programmatic creation of JQL queries or the validation of queries built in a custom query builder.

        This operation can filter the custom fields returned by project. Invalid project IDs in `projectIds` are ignored. System fields are always returned.

        It can also return the collapsed field for custom fields. Collapsed fields enable searches to be performed across all fields with the same name and of the same field type. For example, the collapsed field `Component - Component[Dropdown]` enables dropdown fields `Component - cf[10061]` and `Component - cf[10062]` to be searched simultaneously.

        **[Permissions](#permissions) required:** None.
      operationId: getAutoCompletePost
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAutoCompleteFilter'
            example:
              includeCollapsedFields: true
              projectIds:
              - 10000
              - 10001
              - 10002
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JQLReferenceData'
              example: '{"jqlReservedWords":["empty","and","or","in","distinct"],"visibleFieldNames":[{"displayName":"summary","operators":["~","!~","is","is
                not"],"orderable":"true","searchable":"true","types":["java.lang.String"],"value":"summary"},{"auto":"true","cfid":"cf[10061]","displayName":"Component
                - cf[10061]","operators":["=","!=","in","not in","is","is not"],"orderable":"true","types":["com.atlassian.jira.issue.customfields.option.Option"],"value":"cf[10061]"},{"auto":"true","cfid":"cf[10062]","displayName":"Component
                - cf[10062]","operators":["=","!=","in","not in","is","is not"],"orderable":"true","types":["com.atlassian.jira.issue.customfields.option.Option"],"value":"cf[10062]"},{"auto":"true","displayName":"Component
                - Component[Dropdown]","operators":["=","!=","in","not in","is","is
                not"],"searchable":"true","types":["com.atlassian.jira.issue.customfields.option.Option"],"value":"\"Component[Dropdown]\""}],"visibleFunctionNames":[{"displayName":"standardIssueTypes()","isList":"true","types":["com.atlassian.jira.issue.issuetype.IssueType"],"value":"standardIssueTypes()"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/type:
    get:
      tags:
      - Project types
      summary: Get all project types
      description: |-
        Returns all [project types](https://confluence.atlassian.com/x/Var1Nw), whether or not the instance has a valid license for each type.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getAllProjectTypes
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectType'
              example: '[{"color":"#FFFFFF","descriptionI18nKey":"jira.project.type.business.description","formattedKey":"Business","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"business"},{"color":"#AAAAAA","descriptionI18nKey":"jira.project.type.software.description","formattedKey":"Software","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"software"}]'
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-type:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /workflow/rule/config/delete:
    put:
      tags:
      - Workflow transition rules
      summary: Delete workflow transition rule configurations
      description: |-
        Deletes workflow transition rules from one or more workflows. These rule types are supported:

         *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)
         *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)
         *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)

        Only rules created by the calling Connect app can be deleted.

        **[Permissions](#permissions) required:** Only Connect apps can use this operation.
      operationId: deleteWorkflowTransitionRuleConfigurations
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowsWithTransitionRulesDetails'
            example:
              workflows:
              - workflowId:
                  draft: false
                  name: Internal support workflow
                workflowRuleIds:
                - b4d6cbdc-59f5-11e9-8647-d663bd873d93
                - d663bd873d93-59f5-11e9-8647-b4d6cbdc
                - 11e9-59f5-b4d6cbdc-8647-d663bd873d93
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTransitionRulesUpdateErrors'
              example: '{"updateResults":[{"workflowId":{"name":"Workflow with one
                rule not updated","draft":false},"ruleUpdateErrors":{"example-rule-id":["The
                rule with this id does not exist: example-rule-id"]},"updateErrors":[]},{"workflowId":{"name":"Workflow
                with all rules successfully updated","draft":true},"ruleUpdateErrors":{},"updateErrors":[]},{"workflowId":{"name":"Non-existing
                workflow","draft":false},"ruleUpdateErrors":{},"updateErrors":["Workflow
                not found: WorkflowIdBean{name=Non-existing workflow, draft=false}"]}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Jira Administration permission is required
                to access workflow configuration."],"errors":{},"httpStatusCode":{"empty":false,"present":true}}'
        '403':
          description: Returned if the caller is not a Connect app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/remotelink:
    get:
      tags:
      - Issue remote links
      summary: Get remote issue links
      description: |-
        Returns the remote issue links for an issue. When a remote issue link global ID is provided the record with that global ID is returned, otherwise all remote issue links are returned. Where a global ID includes reserved URL characters these must be escaped in the request. For example, pass `system=http://www.mycompany.com/support&id=1` as `system%3Dhttp%3A%2F%2Fwww.mycompany.com%2Fsupport%26id%3D1`.

        This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getRemoteIssueLinks
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '10000'
        x-showInExample: 'true'
      - name: globalId
        in: query
        description: The global ID of the remote issue link
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteIssueLink'
              example: '[{"application":{"name":"My Acme Tracker","type":"com.acme.tracker"},"globalId":"system=http://www.mycompany.com/support&id=1","id":10000,"object":{"icon":{"title":"Support
                Ticket","url16x16":"http://www.mycompany.com/support/ticket.png"},"status":{"icon":{"link":"http://www.mycompany.com/support?id=1&details=closed","title":"Case
                Closed","url16x16":"http://www.mycompany.com/support/resolved.png"},"resolved":true},"summary":"Customer
                support issue","title":"TSTSUP-111","url":"http://www.mycompany.com/support?id=1"},"relationship":"causes","self":"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000"},{"application":{"name":"My
                Acme Tester","type":"com.acme.tester"},"globalId":"system=http://www.anothercompany.com/tester&id=1234","id":10001,"object":{"icon":{"title":"Test
                Case","url16x16":"http://www.anothercompany.com/tester/images/testcase.gif"},"status":{"icon":{"link":"http://www.anothercompany.com/tester/person?accountId=5b10a2844c20165700ede21g","title":"Tested
                by Mia Krystof","url16x16":"http://www.anothercompany.com/tester/images/person/mia.gif"},"resolved":false},"summary":"Test
                that the submit button saves the item","title":"Test Case #1234","url":"http://www.anothercompany.com/tester/testcase/1234"},"relationship":"is
                tested by","self":"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10001"}]'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if issue linking is disabled.
        '404':
          description: Returned if the issue or remote issue link is not found or
            the user does not have permission to view the issue.
        '413':
          description: Returned if the per-issue limit for remote links has been breached.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.remote-link:jira
        - read:status:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue remote links
      summary: Create or update remote issue link
      description: |-
        Creates or updates a remote issue link for an issue.

        If a `globalId` is provided and a remote issue link with that global ID is found it is updated. Any fields without values in the request are set to null. Otherwise, the remote issue link is created.

        This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: createOrUpdateRemoteIssueLink
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteIssueLinkRequest'
            example:
              application:
                name: My Acme Tracker
                type: com.acme.tracker
              globalId: system=http://www.mycompany.com/support&id=1
              object:
                icon:
                  title: Support Ticket
                  url16x16: http://www.mycompany.com/support/ticket.png
                status:
                  icon:
                    link: http://www.mycompany.com/support?id=1&details=closed
                    title: Case Closed
                    url16x16: http://www.mycompany.com/support/resolved.png
                  resolved: true
                summary: Customer support issue
                title: TSTSUP-111
                url: http://www.mycompany.com/support?id=1
              relationship: causes
        required: true
      responses:
        '200':
          description: Returned if the remote issue link is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteIssueLinkIdentifies'
              example: '{"id":10000,"self":"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000"}'
        '201':
          description: Returned if the remote issue link is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteIssueLinkIdentifies'
              example: '{"id":10000,"self":"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              example: '{"errorMessages":[],"errors":{"title":"''title'' is required."}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to link issues.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - write:issue.remote-link:jira
        - read:issue.remote-link:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue remote links
      summary: Delete remote issue link by global ID
      description: |-
        Deletes the remote issue link from the issue using the link's global ID. Where the global ID includes reserved URL characters these must be escaped in the request. For example, pass `system=http://www.mycompany.com/support&id=1` as `system%3Dhttp%3A%2F%2Fwww.mycompany.com%2Fsupport%26id%3D1`.

        This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is implemented, issue-level security permission to view the issue.
      operationId: deleteRemoteIssueLinkByGlobalId
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '10000'
        x-showInExample: 'true'
      - name: globalId
        in: query
        description: The global ID of a remote issue link
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: system=http://www.mycompany.com/support&id=1
        x-showInExample: 'true'
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if a global ID isn't provided.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to link issues.
        '404':
          description: Returned if the issue or remote issue link is not found or
            the user does not have permission to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue.remote-link:jira
        - write:issue:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /fieldconfigurationscheme/{id}/mapping:
    put:
      tags:
      - Issue field configurations
      summary: Assign issue types to field configurations
      description: |-
        Assigns issue types to field configurations on field configuration scheme.

        This operation can only modify field configuration schemes used in company-managed (classic) projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setFieldConfigurationSchemeMapping
      parameters:
      - name: id
        in: path
        description: The ID of the field configuration scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateFieldConfigurationsWithIssueTypesRequest'
            example:
              mappings:
              - fieldConfigurationId: '10000'
                issueTypeId: default
              - fieldConfigurationId: '10002'
                issueTypeId: '10001'
              - fieldConfigurationId: '10001'
                issueTypeId: '10002'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the field configuration scheme, the field configuration,
            or the issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field-configuration-scheme:jira
        - read:field-configuration-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /changelog/bulkfetch:
    post:
      tags:
      - Issues
      summary: Bulk fetch changelogs
      description: |-
        Bulk fetch changelogs for multiple issues and filter by fields

        Returns a paginated list of all changelogs for given issues sorted by changelog date and issue IDs, starting from the oldest changelog and smallest issue ID.

        Issues are identified by their ID or key, and optionally changelogs can be filtered by their field IDs. You can request the changelogs of up to 1000 issues and can filter them by up to 10 field IDs.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the projects that the issues are in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issues.
      operationId: getBulkChangelogs
      parameters: [
        ]
      requestBody:
        description: A JSON object containing the bulk fetch changelog request filters
          such as issue IDs and field IDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkChangelogRequestBean'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkChangelogResponseBean'
              example: '{"issueChangeLogs":[{"changeHistories":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"created":1492070429,"id":"10001","items":[{"field":"fields","fieldId":"fieldId","fieldtype":"jira","fromString":"old
                summary","toString":"new summary"}]},{"author":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"created":1492071429,"id":"10002","items":[{"field":"fields","fieldId":"fieldId","fieldtype":"jira","fromString":"old
                summary 2","toString":"new summary 2"}]}],"issueId":"10100"}],"nextPageToken":"UxAQBFRF"}'
        '400':
          description: Returned if there are input validation problems such as no
            issue IDs/keys were present, or more than 1000 issue IDs/keys were requested.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-meta:jira
        - read:avatar:jira
        - read:issue.changelog:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /fieldconfigurationscheme/project:
    get:
      tags:
      - Issue field configurations
      summary: Get field configuration schemes for projects
      description: |-
        Returns a [paginated](#pagination) list of field configuration schemes and, for each scheme, a list of the projects that use it.

        The list is sorted by field configuration scheme ID. The first item contains the list of project IDs assigned to the default field configuration scheme.

        Only field configuration schemes used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getFieldConfigurationSchemeProjectMapping
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: projectId
        in: query
        description: 'The list of project IDs. To include multiple projects, separate
          IDs with ampersand: `projectId=10000&projectId=10001`'
        required: true
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanFieldConfigurationSchemeProjects'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":5,"values":[{"projectIds":["10","11"]},{"fieldConfigurationScheme":{"id":"10002","name":"Field
                Configuration Scheme for software related projects","description":"We
                can use this one for software projects."},"projectIds":["12","13","14"]}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field-configuration-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Issue field configurations
      summary: Assign field configuration scheme to project
      description: |-
        Assigns a field configuration scheme to a project. If the field configuration scheme ID is `null`, the operation assigns the default field configuration scheme.

        Field configuration schemes can only be assigned to classic projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: assignFieldConfigurationSchemeToProject
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldConfigurationSchemeProjectAssociation'
            example:
              fieldConfigurationSchemeId: '10000'
              projectId: '10000'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the project is not a classic project.
          content:
            application/json:
              example: '{"errorMessages":["Only classic projects can have field configuration
                schemes assigned."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access field
                configurations."],"errors":{}}'
        '404':
          description: Returned if the project is missing.
          content:
            application/json:
              example: '{"errorMessages":["The project was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field-configuration-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /configuration/timetracking/options:
    get:
      tags:
      - Time tracking
      summary: Get time tracking settings
      description: |-
        Returns the time tracking settings. This includes settings such as the time format, default time unit, and others. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getSharedTimeTrackingConfiguration
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingConfiguration'
              example: '{"defaultUnit":"hour","timeFormat":"pretty","workingDaysPerWeek":5.5,"workingHoursPerDay":7.6}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.time-tracking:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Time tracking
      summary: Set time tracking settings
      description: |-
        Sets the time tracking settings.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setSharedTimeTrackingConfiguration
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingConfiguration'
            example:
              defaultUnit: hour
              timeFormat: pretty
              workingDaysPerWeek: 5.5
              workingHoursPerDay: 7.6
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingConfiguration'
              example: '{"defaultUnit":"hour","timeFormat":"pretty","workingDaysPerWeek":5.5,"workingHoursPerDay":7.6}'
        '400':
          description: Returned if the request object is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue.time-tracking:jira
        - read:issue.time-tracking:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/worklog/{id}:
    get:
      tags:
      - Issue worklogs
      summary: Get worklog
      description: |-
        Returns a worklog.

        Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: getWorklog
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the worklog
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts

          `properties`, which returns worklog properties
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worklog'
              example: '{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"comment":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"I
                did some work here."}]}]},"id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}'
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: |-
            Returned if:

             *  the issue is not found or the user does not have permission to view it.
             *  the worklog is not found or the user does not have permission to view it.
             *  time tracking is disabled.

            .
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment:jira
        - read:group:jira
        - read:issue-worklog:jira
        - read:issue-worklog.property:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue worklogs
      summary: Update worklog
      description: |-
        Updates a worklog.

        Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  *Edit all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or *Edit own worklogs* to update worklogs created by the user.
         *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: updateWorklog
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the worklog
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notifyUsers
        in: query
        description: Whether users watching the issue are notified by email
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: adjustEstimate
        in: query
        description: |-
          Defines how to update the issue's time estimate, the options are:

           *  `new` Sets the estimate to a specific value, defined in `newEstimate`.
           *  `leave` Leaves the estimate unchanged.
           *  `auto` Updates the estimate by the difference between the original and updated value of `timeSpent` or `timeSpentSeconds`
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - new
          - leave
          - manual
          - auto
          default: auto
      - name: newEstimate
        in: query
        description: The value to set as the issue's remaining time estimate, as days
          (\#d), hours (\#h), or minutes (\#m or \#). For example, *2d*. Required
          when `adjustEstimate` is `new`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          worklogs in the response. This parameter accepts `properties`, which returns
          worklog properties
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: overrideEditableFlag
        in: query
        description: Whether the worklog should be added to the issue even if the
          issue is not editable. For example, because the issue is closed. Connect
          and Forge app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
          can use this flag
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Worklog'
            example:
              comment:
                content:
                - content:
                  - text: I did some work here.
                    type: text
                  type: paragraph
                type: doc
                version: 1
              started: 2021-01-17T12:34:00.000+0000
              timeSpentSeconds: 12000
              visibility:
                identifier: 276f955c-63d7-42c8-9520-92d01dca0625
                type: group
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worklog'
              example: '{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"comment":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"I
                did some work here."}]}]},"id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}'
        '400':
          description: |-
            Returned if:

             *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.
             *  the user does not have permission to update the worklog.
             *  the request JSON is malformed.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: |-
            Returned if:

             *  the issue is not found or user does not have permission to view the issue.
             *  the worklog is not found or the user does not have permission to view it.
             *  time tracking is disabled.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment:jira
        - read:group:jira
        - read:issue-worklog:jira
        - read:issue-worklog.property:jira
        - read:project-role:jira
        - read:user:jira
        - write:comment:jira
        - write:issue-worklog:jira
        - write:issue-worklog.property:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue worklogs
      summary: Delete worklog
      description: |-
        Deletes a worklog from an issue.

        Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  *Delete all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any worklog or *Delete own worklogs* to delete worklogs created by the user,
         *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: deleteWorklog
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the worklog
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notifyUsers
        in: query
        description: Whether users watching the issue are notified by email
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: adjustEstimate
        in: query
        description: |-
          Defines how to update the issue's time estimate, the options are:

           *  `new` Sets the estimate to a specific value, defined in `newEstimate`.
           *  `leave` Leaves the estimate unchanged.
           *  `manual` Increases the estimate by amount specified in `increaseBy`.
           *  `auto` Reduces the estimate by the value of `timeSpent` in the worklog
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - new
          - leave
          - manual
          - auto
          default: auto
      - name: newEstimate
        in: query
        description: The value to set as the issue's remaining time estimate, as days
          (\#d), hours (\#h), or minutes (\#m or \#). For example, *2d*. Required
          when `adjustEstimate` is `new`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: increaseBy
        in: query
        description: The amount to increase the issue's remaining estimate by, as
          days (\#d), hours (\#h), or minutes (\#m or \#). For example, *2d*. Required
          when `adjustEstimate` is `manual`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: overrideEditableFlag
        in: query
        description: Whether the work log entry should be added to the issue even
          if the issue is not editable, because jira.issue.editable set to false or
          missing. For example, the issue is closed. Connect and Forge app users with
          admin permission can use this flag
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: |-
            Returned if:

             *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.
             *  `adjustEstimate` is set to `manual` but `reduceBy` is not provided or is invalid.
             *  the user does not have permission to delete the worklog.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: |-
            Returned if:

             *  the issue is not found or user does not have permission to view the issue.
             *  the worklog is not found or the user does not have permission to view it.
             *  time tracking is disabled.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue-worklog:jira
        - delete:issue-worklog.property:jira
        - write:issue.time-tracking:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /issue/createmeta/{projectIdOrKey}/issuetypes:
    get:
      tags:
      - Issues
      summary: Get create metadata issue types for a project
      description: |-
        Returns a page of issue type metadata for a specified project. Use the information to populate the requests in [ Create issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Create issues* [project permission](https://confluence.atlassian.com/x/yodKLg) in the requested projects.
      operationId: getCreateIssueMetaIssueTypes
      parameters:
      - name: projectIdOrKey
        in: path
        description: The ID or key of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfCreateMetaIssueTypes'
              example: '{"issueTypes":[{"description":"An error in the code","iconUrl":"https://your-domain.atlassian.net/images/icons/issuetypes/bug.png","id":"1","name":"Bug","self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}],"maxResults":1,"startAt":0,"total":1}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              example: '{"errorMessages":["Parameter ''maxResults'' must not exceed
                the limit ''200''"],"errors":{},"httpStatusCode":{"empty":false,"present":true}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-meta:jira
        - read:avatar:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/{projectKeyOrId}/notificationscheme:
    get:
      tags:
      - Projects
      summary: Get project notification scheme
      description: |-
        Gets a [notification scheme](https://confluence.atlassian.com/x/8YdKLg) associated with the project.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: getNotificationSchemeForProject
      parameters:
      - name: projectKeyOrId
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `all` Returns all expandable information
           *  `field` Returns information about any custom fields assigned to receive an event
           *  `group` Returns information about any groups assigned to receive an event
           *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information
           *  `projectRole` Returns information about any project roles assigned to receive an event
           *  `user` Returns information about any users assigned to receive an event
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationScheme'
              example: '{"description":"description","expand":"notificationSchemeEvents,user,group,projectRole,field,all","id":10100,"name":"notification
                scheme name","notificationSchemeEvents":[{"event":{"description":"Event
                published when an issue is created","id":1,"name":"Issue created"},"notifications":[{"expand":"group","group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":1,"notificationType":"Group","parameter":"jira-administrators","recipient":"276f955c-63d7-42c8-9520-92d01dca0625"},{"id":2,"notificationType":"CurrentAssignee"},{"expand":"projectRole","id":3,"notificationType":"ProjectRole","parameter":"10360","projectRole":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"}},"recipient":"10360"},{"emailAddress":"rest-developer@atlassian.com","id":4,"notificationType":"EmailAddress","parameter":"rest-developer@atlassian.com","recipient":"rest-developer@atlassian.com"},{"expand":"user","id":5,"notificationType":"User","parameter":"5b10a2844c20165700ede21g","recipient":"5b10a2844c20165700ede21g","user":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}},{"expand":"field","field":{"clauseNames":["cf[10101]","New
                custom field"],"custom":true,"id":"customfield_10101","key":"customfield_10101","name":"New
                custom field","navigable":true,"orderable":true,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:project","customId":10101,"type":"project"},"searchable":true,"untranslatedName":"New
                custom field"},"id":6,"notificationType":"GroupCustomField","parameter":"customfield_10101","recipient":"customfield_10101"}]},{"event":{"description":"Custom
                event that is published together with an issue created event","id":20,"name":"Custom
                event","templateEvent":{"description":"Event published when an issue
                is created","id":1,"name":"Issue created"}},"notifications":[{"expand":"group","group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":1,"notificationType":"Group","parameter":"jira-administrators","recipient":"276f955c-63d7-42c8-9520-92d01dca0625"},{"id":2,"notificationType":"CurrentAssignee"},{"expand":"projectRole","id":3,"notificationType":"ProjectRole","parameter":"10360","projectRole":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"}},"recipient":"10360"},{"emailAddress":"rest-developer@atlassian.com","id":4,"notificationType":"EmailAddress","parameter":"rest-developer@atlassian.com","recipient":"rest-developer@atlassian.com"},{"expand":"user","id":5,"notificationType":"User","parameter":"5b10a2844c20165700ede21g","recipient":"5b10a2844c20165700ede21g","user":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}},{"expand":"field","field":{"clauseNames":["cf[10101]","New
                custom field"],"custom":true,"id":"customfield_10101","key":"customfield_10101","name":"New
                custom field","navigable":true,"orderable":true,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:project","customId":10101,"type":"project"},"searchable":true,"untranslatedName":"New
                custom field"},"id":6,"notificationType":"GroupCustomField","parameter":"customfield_10101","recipient":"customfield_10101"}]}],"projects":[10001,10002],"self":"https://your-domain.atlassian.net/rest/api/3/notificationscheme"}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user is not an
            administrator.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-category:jira
        - read:project-role:jira
        - read:project:jira
        - read:user:jira
        - read:group:jira
        - read:field:jira
        - read:avatar:jira
        - read:field-configuration:jira
        - read:notification-scheme:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/{projectIdOrKey}/properties/{propertyKey}:
    get:
      tags:
      - Project properties
      summary: Get project property
      description: |-
        Returns the value of a [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the property.
      operationId: getProjectProperty
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The project property key. Use [Get project property keys](#api-rest-api-3-project-projectIdOrKey-properties-get)
          to get a list of all project property keys
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityProperty'
              example: '{"key":"issue.support","value":{"system.conversation.id":"b1bf38be-5e94-4b40-a3b8-9278735ee1e6","system.support.time":"1m"}}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have permission to view the project.
        '404':
          description: Returned if the project or property is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Project properties
      summary: Set project property
      description: |-
        Sets the value of the [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties). You can use project properties to store custom data against the project.

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the property is created.
      operationId: setProjectProperty
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the project property. The maximum length is 255 characters
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The value of the property. The value has to be a valid, non-empty
          [JSON](https://tools.ietf.org/html/rfc4627) value. The maximum length of
          the property value is 32768 bytes
        content:
          application/json:
            schema: {
              }
            example:
              number: 5
              string: string-value
        required: true
      responses:
        '200':
          description: Returned if the project property is updated
          content:
            application/json:
              schema: {
                }
        '201':
          description: Returned if the project property is created.
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the project key or id is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have permission to administer
            the project.
        '404':
          description: Returned if the project is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Project properties
      summary: Delete project property
      description: |-
        Deletes the [property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) from a project.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the property.
      operationId: deleteProjectProperty
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The project property key. Use [Get project property keys](#api-rest-api-3-project-projectIdOrKey-properties-get)
          to get a list of all project property keys
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the project property is deleted
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have permission to administer
            the project.
        '404':
          description: Returned if the project or property is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project.property:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /group:
    get:
      tags:
      - Groups
      summary: Get group
      description: |-
        This operation is deprecated, use [`group/member`](#api-rest-api-3-group-member-get).

        Returns all users in a group.

        **[Permissions](#permissions) required:** either of:

         *  *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getGroup
      parameters:
      - name: groupname
        in: query
        description: "As a group's name can change, use of `groupId` is recommended\
          \ to identify a group.  \nThe name of the group. This parameter cannot be\
          \ used with the `groupId` parameter"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupId
        in: query
        description: The ID of the group. This parameter cannot be used with the `groupName`
          parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-showInExample: 'true'
      - name: expand
        in: query
        description: List of fields to expand
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Returned if the group name is not specified.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the calling user does not have the Administer Jira
            global permission.
        '404':
          description: Returned if the group is not found.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Groups
      summary: Create group
      description: |-
        Creates a group.

        **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).
      operationId: createGroup
      parameters: [
        ]
      requestBody:
        description: The name of the group
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupBean'
            example:
              name: power-users
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              example: '{"expand":"users","groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"power-users","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625","users":{"end-index":0,"items":[{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}],"max-results":50,"size":1,"start-index":0}}'
        '400':
          description: Returned if group name is not specified or the group name is
            in use.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        - read:user:jira
        - write:group:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
    delete:
      tags:
      - Groups
      summary: Remove group
      description: |-
        Deletes a group.

        **[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* strategic [group](https://confluence.atlassian.com/x/24xjL)).
      operationId: removeGroup
      parameters:
      - name: groupname
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupId
        in: query
        description: The ID of the group. This parameter cannot be used with the `groupname`
          parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-showInExample: 'true'
      - name: swapGroup
        in: query
        description: "As a group's name can change, use of `swapGroupId` is recommended\
          \ to identify a group.  \nThe group to transfer restrictions to. Only comments\
          \ and worklogs are transferred. If restrictions are not transferred, comments\
          \ and worklogs are inaccessible after the deletion. This parameter cannot\
          \ be used with the `swapGroupId` parameter"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: swapGroupId
        in: query
        description: The ID of the group to transfer restrictions to. Only comments
          and worklogs are transferred. If restrictions are not transferred, comments
          and worklogs are inaccessible after the deletion. This parameter cannot
          be used with the `swapGroup` parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
        '400':
          description: Returned if the group name is not specified.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing from the request.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the group is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:group:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /data-policy/project:
    get:
      tags:
      - App data policies
      summary: Get data policy for projects
      description: Returns data policies for the projects specified in the request.
      operationId: getPolicies
      parameters:
      - name: ids
        in: query
        description: A list of project identifiers. This parameter accepts a comma-separated
          list
        required: false
        style: form
        explode: true
        schema:
          type: string
          description: A list of up to 50 project identifiers. This parameter accepts
            a comma-separated list.
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDataPolicies'
              example: '{"projectDataPolicies":[{"dataPolicy":{"anyContentBlocked":false},"id":1000},{"dataPolicy":{"anyContentBlocked":true},"id":1001}]}'
        '400':
          description: Returned if the request is not valid or includes invalid or
            not-permitted project identifiers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Invalid request: some projects are not
                available or do not exist."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only apps can access this resource."],"errors":{}}'
        '403':
          description: Returned if the client is not authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":[""],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: READ
  /dashboard/{id}:
    get:
      tags:
      - Dashboards
      summary: Get dashboard
      description: |-
        Returns a dashboard.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.

        However, to get a dashboard, the dashboard must be shared with the user or the user must own it. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users.
      operationId: getDashboard
      parameters:
      - name: id
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
              example: '{"id":"10000","isFavourite":false,"name":"System Dashboard","popularity":1,"self":"https://your-domain.atlassian.net/rest/api/3/dashboard/10000","sharePermissions":[{"type":"global"}],"view":"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000"}'
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the dashboard is not found or the dashboard is
            not owned by or shared with the user.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Dashboards
      summary: Update dashboard
      description: |-
        Updates a dashboard, replacing all the dashboard details with those provided.

        **[Permissions](#permissions) required:** None

        The dashboard to be updated must be owned by the user.
      operationId: updateDashboard
      parameters:
      - name: id
        in: path
        description: The ID of the dashboard to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: extendAdminPermissions
        in: query
        description: Whether admin level permissions are used. It should only be true
          if the user has *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: Replacement dashboard details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardDetails'
            example:
              description: A dashboard to help auditors identify sample of issues
                to check.
              editPermissions: [
                ]
              name: Auditors dashboard
              sharePermissions:
              - type: global
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
              example: '{"id":"10000","isFavourite":false,"name":"System Dashboard","popularity":1,"self":"https://your-domain.atlassian.net/rest/api/3/dashboard/10000","sharePermissions":[{"type":"global"}],"view":"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the dashboard is not found or the dashboard is
            not owned by the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:dashboard:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Dashboards
      summary: Delete dashboard
      description: |-
        Deletes a dashboard.

        **[Permissions](#permissions) required:** None

        The dashboard to be deleted must be owned by the user.
      operationId: deleteDashboard
      parameters:
      - name: id
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the dashboard is deleted
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:dashboard:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: DELETE
  /app/field/{fieldIdOrKey}/context/configuration:
    get:
      tags:
      - Issue custom field configuration (apps)
      summary: Get custom field configurations
      description: |-
        Returns a [paginated](#pagination) list of configurations for a custom field of a [type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/) created by a [Forge app](https://developer.atlassian.com/platform/forge/).

        The result can be filtered by one of these criteria:

         *  `id`.
         *  `fieldContextId`.
         *  `issueId`.
         *  `projectKeyOrId` and `issueTypeId`.

        Otherwise, all configurations are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the Forge app that provided the custom field type.
      operationId: getCustomFieldConfiguration
      parameters:
      - name: fieldIdOrKey
        in: path
        description: The ID or key of the custom field, for example `customfield_10000`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: 'The list of configuration IDs. To include multiple configurations,
          separate IDs with an ampersand: `id=10000&id=10001`. Can''t be provided
          with `fieldContextId`, `issueId`, `projectKeyOrId`, or `issueTypeId`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: fieldContextId
        in: query
        description: 'The list of field context IDs. To include multiple field contexts,
          separate IDs with an ampersand: `fieldContextId=10000&fieldContextId=10001`.
          Can''t be provided with `id`, `issueId`, `projectKeyOrId`, or `issueTypeId`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: issueId
        in: query
        description: The ID of the issue to filter results by. If the issue doesn't
          exist, an empty list is returned. Can't be provided with `projectKeyOrId`,
          or `issueTypeId`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: projectKeyOrId
        in: query
        description: The ID or key of the project to filter results by. Must be provided
          with `issueTypeId`. Can't be provided with `issueId`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: issueTypeId
        in: query
        description: The ID of the issue type to filter results by. Must be provided
          with `projectKeyOrId`. Can't be provided with `issueId`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanContextualConfiguration'
              example: '{"isLast":true,"maxResults":1000,"startAt":0,"total":2,"values":[{"id":"10000","fieldContextId":"10010"},{"id":"10001","fieldContextId":"10011","configuration":{"minValue":0,"maxValue":10000},"schema":{"properties":{"amount":{"type":"number"},"currency":{"type":"string"}},"required":["amount","currency"]}}]}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user is not a Jira admin or the request is
            not authenticated as from the app that provided the field.
        '404':
          description: Returned if the custom field is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:custom-field-contextual-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Issue custom field configuration (apps)
      summary: Update custom field configurations
      description: |-
        Update the configuration for contexts of a custom field of a [type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/) created by a [Forge app](https://developer.atlassian.com/platform/forge/).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the Forge app that created the custom field type.
      operationId: updateCustomFieldConfiguration
      parameters:
      - name: fieldIdOrKey
        in: path
        description: The ID or key of the custom field, for example `customfield_10000`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldConfigurations'
            example:
              configurations:
              - id: '10000'
              - configuration:
                  maxValue: 10000
                  minValue: 0
                id: '10001'
                schema:
                  properties:
                    amount:
                      type: number
                    currency:
                      type: string
                  required:
                  - amount
                  - currency
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user is not a Jira admin or the request is
            not authenticated as from the app that provided the field.
        '404':
          description: Returned if the custom field is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:custom-field-contextual-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /permissionscheme/{schemeId}/permission/{permissionId}:
    get:
      tags:
      - Permission schemes
      summary: Get permission scheme grant
      description: |-
        Returns a permission grant.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getPermissionSchemeGrant
      parameters:
      - name: schemeId
        in: path
        description: The ID of the permission scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: permissionId
        in: path
        description: The ID of the permission grant
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:

           *  `all` Returns all expandable information.
           *  `field` Returns information about the custom field granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `permissions` Returns all permission grants for each permission scheme.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `user` Returns information about the user who is granted the permission
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGrant'
              example: '{"holder":{"expand":"group","parameter":"jira-core-users","type":"group","value":"ca85fac0-d974-40ca-a615-7af99c48d24f"},"id":10000,"permission":"ADMINISTER_PROJECTS","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the permission scheme or permission grant is not
            found or the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: READ
    delete:
      tags:
      - Permission schemes
      summary: Delete permission scheme grant
      description: |-
        Deletes a permission grant from a permission scheme. See [About permission schemes and grants](../api-group-permission-schemes/#about-permission-schemes-and-grants) for more details.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deletePermissionSchemeEntity
      parameters:
      - name: schemeId
        in: path
        description: The ID of the permission scheme to delete the permission grant
          from
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: permissionId
        in: path
        description: The ID of the permission grant to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the permission grant is deleted
        '400':
          description: Returned if permission grant with the provided ID is not found.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:permission:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /auditing/record:
    get:
      tags:
      - Audit records
      summary: Get audit records
      description: "Returns a list of audit records. The list can be filtered to include\
        \ items:\n\n *  where each item in `filter` has at least one match in any\
        \ of these fields:\n    \n     *  `summary`\n     *  `category`\n     *  `eventSource`\n\
        \     *  `objectItem.name` If the object is a user, account ID is available\
        \ to filter.\n     *  `objectItem.parentName`\n     *  `objectItem.typeName`\n\
        \     *  `changedValues.changedFrom`\n     *  `changedValues.changedTo`\n\
        \     *  `remoteAddress`\n    \n    For example, if `filter` contains *man\
        \ ed*, an audit record containing `summary\": \"User added to group\"` and\
        \ `\"category\": \"group management\"` is returned.\n *  created on or after\
        \ a date and time.\n *  created or or before a date and time.\n\n**[Permissions](#permissions)\
        \ required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
      operationId: getAuditRecords
      parameters:
      - name: offset
        in: query
        description: The number of records to skip before returning the first result
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        description: The maximum number of results to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1000
      - name: filter
        in: query
        description: The strings to match with audit field content, space separated
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: from
        in: query
        description: The date and time on or after which returned audit records must
          have been created. If `to` is provided `from` must be before `to` or no
          audit records are returned
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: to
        in: query
        description: The date and time on or before which returned audit results must
          have been created. If `from` is provided `to` must be after `from` or no
          audit records are returned
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditRecords'
              example: '{"limit":1000,"offset":0,"records":[{"associatedItems":[{"id":"jira-software-users","name":"jira-software-users","parentId":"1","parentName":"Jira
                Internal Directory","typeName":"GROUP"}],"authorAccountId":"5ab8f18d741e9c2c7e9d4538","authorKey":"administrator","category":"user
                management","changedValues":[{"changedFrom":"user@atlassian.com","changedTo":"newuser@atlassian.com","fieldName":"email"}],"created":"2014-03-19T18:45:42.967+0000","description":"Optional
                description","eventSource":"Jira Connect Plugin","id":1,"objectItem":{"id":"user","name":"user","parentId":"1","parentName":"Jira
                Internal Directory","typeName":"USER"},"remoteAddress":"192.168.1.1","summary":"User
                created"}],"total":1}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: |-
            Returned if:

             *  the user does not have the required permissions.
             *  all Jira products are on free plans. Audit logs are available when at least one Jira product is on a paid plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:audit-log:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /uiModifications:
    get:
      tags:
      - UI modifications (apps)
      summary: Get UI modifications
      description: |-
        Gets UI modifications. UI modifications can only be retrieved by Forge apps.

        **[Permissions](#permissions) required:** None.

        The new `read:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: getUiModifications
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `data` Returns UI modification data.
           *  `contexts` Returns UI modification contexts
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanUiModificationDetails'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":3,"values":[{"id":"d7dbda8a-6239-4b63-8e13-a5ef975c8e61","name":"Reveal
                Story Points","description":"Reveals Story Points field when any Sprint
                is selected.","self":"https://api.atlassian.com/ex/jira/{cloudid}/rest/api/2/uiModifications/d7dbda8a-6239-4b63-8e13-a5ef975c8e61","data":"{field:
                ''Story Points'', config: {hidden: false}}","contexts":[{"id":"1533537a-bda3-4ac6-8481-846128cd9ef4","projectId":"10000","issueTypeId":"10000","viewType":"GIC","isAvailable":true},{"id":"c016fefa-6eb3-40c9-8596-4c4ef273e67c","projectId":"10000","issueTypeId":"10001","viewType":"IssueView","isAvailable":true},{"id":"1016defa-7ew3-40c5-8696-4c1efg73e67s","projectId":"10000","issueTypeId":"10002","viewType":"IssueTransition","isAvailable":true}]},{"id":"e4fe8db5-f82f-416b-a3aa-b260b55da577","name":"Set
                Assignee","description":"Sets the Assignee field automatically.","self":"https://api.atlassian.com/ex/jira/{cloudid}/rest/api/2/uiModifications/e4fe8db5-f82f-416b-a3aa-b260b55da577","contexts":[{"id":"8b3740f9-8780-4958-8228-69dcfbda11d9","projectId":"10000","issueTypeId":"10000","viewType":"GIC","isAvailable":true}]},{"id":"1453f993-79ce-4389-a36d-eb72d5c85dd6","name":"Hide
                Labels","description":"Hides Labels if any component is provided.","self":"https://api.atlassian.com/ex/jira/{cloudid}/rest/api/2/uiModifications/1453f993-79ce-4389-a36d-eb72d5c85dd6","contexts":[]},{"id":"d3f4097e-8d8e-451e-9fb6-27c3c8c3bfff","name":"Wildcard
                example","description":"This context is applied to all issue types","self":"https://api.atlassian.com/ex/jira/{cloudid}/rest/api/2/uiModifications/d3f4097e-8d8e-451e-9fb6-27c3c8c3bfff","contexts":[{"id":"521f2181-5d5e-46ea-9fc9-871bbf245b8b","projectId":"10000","issueTypeId":null,"viewType":"GIC","isAvailable":true}]}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the request is not from a Forge app.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - read:app-data:jira
        state: Beta
      x-atlassian-connect-scope: NONE
    post:
      tags:
      - UI modifications (apps)
      summary: Create UI modification
      description: |-
        Creates a UI modification. UI modification can only be created by Forge apps.

        Each app can define up to 3000 UI modifications. Each UI modification can define up to 1000 contexts. The same context can be assigned to maximum 100 UI modifications.

        **[Permissions](#permissions) required:**

         *  *None* if the UI modification is created without contexts.
         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the UI modification is created with contexts.

        The new `write:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: createUiModification
      parameters: [
        ]
      requestBody:
        description: Details of the UI modification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUiModificationDetails'
            example:
              contexts:
              - issueTypeId: '10000'
                projectId: '10000'
                viewType: GIC
              - issueTypeId: '10001'
                projectId: '10000'
                viewType: IssueView
              - issueTypeId: '10002'
                projectId: '10000'
                viewType: IssueTransition
              - issueTypeId: '10003'
                projectId: '10000'
                viewType: null
              data: '{field: ''Story Points'', config: {hidden: false}}'
              description: Reveals Story Points field when any Sprint is selected.
              name: Reveal Story Points
        required: true
      responses:
        '201':
          description: Returned if the UI modification is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UiModificationIdentifiers'
              example: '{"id":"d7dbda8a-6239-4b63-8e13-a5ef975c8e61","self":"https://api.atlassian.com/ex/jira/{cloudid}/rest/api/2/uiModifications/d7dbda8a-6239-4b63-8e13-a5ef975c8e61"}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the request is not from a Forge app.
        '404':
          description: Returned if a project or an issue type in the context are not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorCollection'
              example: '{"details":{"issueTypesNotFound":{"10001":["10000","10001"]},"projectNotFound":["10000"]},"errorMessages":["Project
                with ID ''10000'' was not found.","Project with ID ''10001''. The
                following issue types were not found: [10000, 10001]"],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - write:app-data:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /workflows/create/validation:
    post:
      tags:
      - Workflows
      summary: Validate create workflows
      description: |-
        Validate the payload for bulk create workflows.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* project permission to create all, including global-scoped, workflows
         *  *Administer projects* project permissions to create project-scoped workflows
      operationId: validateCreateWorkflows
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowCreateValidateRequest'
            example:
              payload:
                scope:
                  type: GLOBAL
                statuses:
                - description: ''
                  name: To Do
                  statusCategory: TODO
                  statusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                - description: ''
                  name: In Progress
                  statusCategory: IN_PROGRESS
                  statusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                - description: ''
                  name: Done
                  statusCategory: DONE
                  statusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                workflows:
                - description: ''
                  name: Software workflow 1
                  startPointLayout:
                    x: -100.00030899047852
                    y: -153.00020599365234
                  statuses:
                  - layout:
                      x: 114.99993896484375
                      y: -16
                    properties: {
                      }
                    statusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                  - layout:
                      x: 317.0000915527344
                      y: -16
                    properties: {
                      }
                    statusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                  - layout:
                      x: 508.000244140625
                      y: -16
                    properties: {
                      }
                    statusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                  transitions:
                  - actions: [
                      ]
                    description: ''
                    id: '1'
                    links: [
                      ]
                    name: Create
                    properties: {
                      }
                    toStatusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                    triggers: [
                      ]
                    type: INITIAL
                    validators: [
                      ]
                  - actions: [
                      ]
                    description: ''
                    id: '11'
                    links: [
                      ]
                    name: To Do
                    properties: {
                      }
                    toStatusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                    triggers: [
                      ]
                    type: GLOBAL
                    validators: [
                      ]
                  - actions: [
                      ]
                    description: ''
                    id: '21'
                    links: [
                      ]
                    name: In Progress
                    properties: {
                      }
                    toStatusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                    triggers: [
                      ]
                    type: GLOBAL
                    validators: [
                      ]
                  - actions: [
                      ]
                    description: Move a work item from in progress to done
                    id: '31'
                    links:
                    - fromPort: 0
                      fromStatusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                      toPort: 1
                    name: Done
                    properties: {
                      }
                    toStatusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                    triggers: [
                      ]
                    type: DIRECTED
                    validators: [
                      ]
              validationOptions:
                levels:
                - ERROR
                - WARNING
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowValidationErrorList'
              example: '{"errors":[{"code":"NON_UNIQUE_STATUS_NAME","elementReference":{"statusReference":"1f0443ff-47e4-4306-9c26-0af696059a43"},"level":"ERROR","message":"You
                must use a unique status name.","type":"STATUS"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issuesecurityschemes/{schemeId}/level/{levelId}/member/{memberId}:
    delete:
      tags:
      - Issue security schemes
      summary: Remove member from issue security level
      description: |-
        Removes an issue security level member from an issue security scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeMemberFromSecurityLevel
      parameters:
      - name: schemeId
        in: path
        description: The ID of the issue security scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: levelId
        in: path
        description: The ID of the issue security level
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: memberId
        in: path
        description: The ID of the issue security level member to be removed
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the security scheme isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue security scheme with ID 10000 not
                found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /version/{id}:
    get:
      tags:
      - Project versions
      summary: Get version
      description: |-
        Returns a project version.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the version.
      operationId: getVersion
      parameters:
      - name: id
        in: path
        description: The ID of the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `operations` Returns the list of operations available for this version.
           *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property represents the number of issues with a status other than *to do*, *in progress*, and *done*.
           *  `driver` Returns the Atlassian account ID of the version driver.
           *  `approvers` Returns a list containing the Atlassian account IDs of approvers for this version
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
              example: '{"archived":false,"description":"An excellent version","id":"10000","name":"New
                Version 1","overdue":true,"projectId":10000,"releaseDate":"2010-07-06","released":true,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000","userReleaseDate":"6/Jul/2010"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the version is not found or the user does not have
            the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-version:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Project versions
      summary: Update version
      description: |-
        Updates a project version.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version.
      operationId: updateVersion
      parameters:
      - name: id
        in: path
        description: The ID of the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
            example:
              archived: false
              description: An excellent version
              id: '10000'
              name: New Version 1
              overdue: true
              projectId: 10000
              releaseDate: 2010-07-06T00:00:00Z
              released: true
              self: https://your-domain.atlassian.net/rest/api/~ver~/version/10000
              userReleaseDate: 6/Jul/2010
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
              example: '{"archived":false,"description":"An excellent version","id":"10000","name":"New
                Version 1","project":"PXA","projectId":10000,"releaseDate":"2010-07-06","released":true,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000","userReleaseDate":"6/Jul/2010"}'
        '400':
          description: |-
            Returned if:

             *  the request is invalid.
             *  the user does not have the required permissions.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if the version is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project-version:jira
        - read:project-version:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
    delete:
      tags:
      - Project versions
      summary: Delete version
      description: |-
        Deletes a project version.

        Deprecated, use [ Delete and replace version](#api-rest-api-3-version-id-removeAndSwap-post) that supports swapping version values in custom fields, in addition to the swapping for `fixVersion` and `affectedVersion` provided in this resource.

        Alternative versions can be provided to update issues that use the deleted version in `fixVersion` or `affectedVersion`. If alternatives are not provided, occurrences of `fixVersion` and `affectedVersion` that contain the deleted version are cleared.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version.
      operationId: deleteVersion
      parameters:
      - name: id
        in: path
        description: The ID of the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: moveFixIssuesTo
        in: query
        description: The ID of the version to update `fixVersion` to when the field
          contains the deleted version. The replacement version must be in the same
          project as the version being deleted and cannot be the version being deleted
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: moveAffectedIssuesTo
        in: query
        description: The ID of the version to update `affectedVersion` to when the
          field contains the deleted version. The replacement version must be in the
          same project as the version being deleted and cannot be the version being
          deleted
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '204':
          description: Returned if the version is deleted
        '400':
          description: Returned if the request is invalid.
        '401':
          description: |-
            Returned if:

             *  the authentication credentials are incorrect.
             *  the user does not have the required permissions.
        '404':
          description: Returned if the version is not found.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project-version:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /issuetypescreenscheme/{issueTypeScreenSchemeId}/mapping:
    put:
      tags:
      - Issue type screen schemes
      summary: Append mappings to issue type screen scheme
      description: |-
        Appends issue type to screen scheme mappings to an issue type screen scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: appendMappingsForIssueTypeScreenScheme
      parameters:
      - name: issueTypeScreenSchemeId
        in: path
        description: The ID of the issue type screen scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeScreenSchemeMappingDetails'
            example:
              issueTypeMappings:
              - issueTypeId: '10000'
                screenSchemeId: '10001'
              - issueTypeId: '10001'
                screenSchemeId: '10002'
              - issueTypeId: '10002'
                screenSchemeId: '10002'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["A default mapping cannot be added."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
        '404':
          description: Returned if the issue type screen scheme, issue type, or screen
            scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["The issue type screen scheme was not found."],"errors":{}}'
        '409':
          description: Returned if the issue type is a sub-task, but sub-tasks are
            disabled in Jira settings.
          content:
            application/json:
              example: '{"errorMessages":["Sub-tasks are disabled in Jira. At least
                one of the issue types is a sub-task."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /permissions:
    get:
      tags:
      - Permissions
      summary: Get all permissions
      description: |-
        Returns all permissions, including:

         *  global permissions.
         *  project permissions.
         *  global permissions added by plugins.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getAllPermissions
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permissions'
              example: '{"permissions":{"BULK_CHANGE":{"description":"Ability to modify
                a collection of issues at once. For example, resolve multiple issues
                in one step.","key":"BULK_CHANGE","name":"Bulk Change","type":"GLOBAL"}}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:permission:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /priority:
    get:
      tags:
      - Issue priorities
      summary: Get priorities
      description: |-
        Returns the list of all issue priorities.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getPriorities
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Priority'
              example: '[{"description":"Major loss of function.","iconUrl":"https://your-domain.atlassian.net/images/icons/priorities/major.png","id":"1","name":"Major","self":"https://your-domain.atlassian.net/rest/api/3/priority/3","statusColor":"#009900"},{"description":"Very
                little impact.","iconUrl":"https://your-domain.atlassian.net/images/icons/priorities/trivial.png","id":"2","name":"Trivial","self":"https://your-domain.atlassian.net/rest/api/3/priority/5","statusColor":"#cfcfcf"}]'
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:priority:jira
        state: Beta
      x-changes:
      - announced: 2022-10-11T00:00:00Z
        details: https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-762
        effective: 2023-04-11T00:00:00Z
        type: removed
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue priorities
      summary: Create priority
      description: |-
        Creates an issue priority.

        Deprecation applies to iconUrl param in request body which will be sunset on 16th Mar 2025. For more details refer to [changelog](https://developer.atlassian.com/changelog/#CHANGE-1525).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createPriority
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePriorityDetails'
            example:
              description: My priority description
              iconUrl: images/icons/priorities/major.png
              name: My new priority
              statusColor: '#ABCDEF'
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriorityId'
              example: '{"id":"10001"}'
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The length of the description must not
                exceed 255 characters."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only Jira administrators can access issue
                type screen schemes."],"errors":{}}'
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-changes:
      - announced: 2024-09-16T00:00:00Z
        details: https://developer.atlassian.com/changelog/#CHANGE-1525
        effective: 2025-03-16T00:00:00Z
        type: removed
      x-atlassian-connect-scope: ADMIN
  /issuetype/{id}/alternatives:
    get:
      tags:
      - Issue types
      summary: Get alternative issue types
      description: |-
        Returns a list of issue types that can be used to replace the issue type. The alternative issue types are those assigned to the same workflow scheme, field configuration scheme, and screen scheme.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getAlternativeIssueTypes
      parameters:
      - name: id
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueTypeDetails'
              example: '[{"avatarId":1,"description":"A task that needs to be done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false},{"avatarId":10002,"description":"A
                problem with the software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}]'
        '404':
          description: |-
            Returned if:

             *  the issue type is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issuetypescheme/project:
    get:
      tags:
      - Issue type schemes
      summary: Get issue type schemes for projects
      description: |-
        Returns a [paginated](#pagination) list of issue type schemes and, for each issue type scheme, a list of the projects that use it.

        Only issue type schemes used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueTypeSchemeForProjects
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: projectId
        in: query
        description: The list of project IDs. To include multiple project IDs, provide
          an ampersand-separated list. For example, `projectId=10000&projectId=10001`
        required: true
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueTypeSchemeProjects'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":3,"values":[{"issueTypeScheme":{"id":"10000","name":"Default
                Issue Type Scheme","description":"Default issue type scheme is the
                list of global issue types. All newly created issue types will automatically
                be added to this scheme.","defaultIssueTypeId":"10003","isDefault":true},"projectIds":["10000","10001"]},{"issueTypeScheme":{"id":"10001","name":"SUP:
                Kanban Issue Type Scheme","description":"A collection of issue types
                suited to use in a kanban style project."},"projectIds":["10002"]},{"issueTypeScheme":{"id":"10002","name":"HR:
                Scrum issue type scheme","description":"","defaultIssueTypeId":"10004","issueTypes":{"isLast":true,"maxResults":100,"startAt":0,"total":1,"values":[{"description":"Improvement
                Issue Type","hierarchyLevel":-1,"iconUrl":"www.example.com","id":"1000L","name":"Improvements","subtask":true}]}},"projectIds":["10003","10004","10005"]}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Issue type schemes
      summary: Assign issue type scheme to project
      description: |-
        Assigns an issue type scheme to a project.

        If any issues in the project are assigned issue types not present in the new scheme, the operation will fail. To complete the assignment those issues must be updated to use issue types in the new scheme.

        Issue type schemes can only be assigned to classic projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: assignIssueTypeSchemeToProject
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeSchemeProjectAssociation'
            example:
              issueTypeSchemeId: '10000'
              projectId: '10000'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["This issue type scheme can''t be assigned
                to the project. This is because some issues in this project use issue
                types not present in the scheme. Before assigning the scheme to the
                project, update the issue types on these issues: 7"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type scheme or the project is not found.
          content:
            application/json:
              example: '{"errorMessages":["The issue type scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-scheme:jira
        - write:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /jql/function/computation/search:
    post:
      tags:
      - JQL functions (apps)
      summary: Get precomputations by ID (apps)
      description: |-
        Returns function precomputations by IDs, along with information about when they were created, updated, and last used. Each precomputation has a `value` \- the JQL fragment to replace the custom function clause with.

        **[Permissions](#permissions) required:** This API is only accessible to apps and apps can only inspect their own functions.

        The new `read:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: getPrecomputationsByID
      parameters:
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `functionKey` Sorts by the functionKey.
           *  `used` Sorts by the used timestamp.
           *  `created` Sorts by the created timestamp.
           *  `updated` Sorts by the updated timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JqlFunctionPrecomputationGetByIdRequest'
            example:
              precomputationIDs:
              - f2ef228b-367f-4c6b-bd9d-0d0e96b5bd7b
              - 2a854f11-d0e1-4260-aea8-64a562a7062a
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JqlFunctionPrecomputationGetByIdResponse'
              example: '{"notFoundPrecomputationIDs":["cce1ef75-d566-40f8-a1a8-a9067f70ad69","82583f5d-0a44-454b-a1f5-4e06838fbf80"],"precomputations":[{"arguments":["Test"],"created":"2023-10-14T05:25:20.000+0000","field":"issue","functionKey":"ari:cloud:ecosystem::extension/00000000-1111-2222-3333-4444444/111111-2222-3333-4444-55555/static/issuesWithText","functionName":"issuesWithText","id":"cf75a1b0-4ac6-4bd8-8a50-29a465a96520","operator":"in","updated":"2023-10-14T05:25:20.000+0000","used":"2023-10-14T05:25:20.000+0000","value":"issue
                in (TEST-1, TEST-2, TEST-3)"},{"arguments":["10001"],"created":"2023-10-14T05:25:20.000+0000","error":"Error
                message to be displayed to the user","field":"issue","functionKey":"ari:cloud:ecosystem::extension/00000000-1111-2222-3333-4444444/111111-2222-3333-4444-55555/static/issuesWithText","functionName":"issuesWithText","id":"2a854f11-d0e1-4260-aea8-64a562a7062a","operator":"=","updated":"2023-10-14T05:25:20.000+0000","used":"2023-10-14T05:25:20.000+0000"}]}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the request is not authenticated as the app that
            provided the function.
        '404':
          description: Returned if the function is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes:
        - read:app-data:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /expression/evaluate:
    post:
      tags:
      - Jira expressions
      summary: Evaluate Jira expression using enhanced search API
      description: "Evaluates a Jira expression and returns its value. The difference\
        \ between this and `eval` is that this endpoint uses the enhanced search API\
        \ when evaluating JQL queries. This API is eventually consistent, unlike the\
        \ strongly consistent `eval` API. This allows for better performance and scalability.\
        \ In addition, this API's response for JQL evaluation is based on a scrolling\
        \ view (backed by a `nextPageToken`) instead of a paginated view (backed by\
        \ `startAt` and `totalCount`).\n\nThis resource can be used to test Jira expressions\
        \ that you plan to use elsewhere, or to fetch data in a flexible way. Consult\
        \ the [Jira expressions documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/)\
        \ for more details.\n\n#### Context variables ####\n\nThe following context\
        \ variables are available to Jira expressions evaluated by this resource.\
        \ Their presence depends on various factors; usually you need to manually\
        \ request them in the context object sent in the payload, but some of them\
        \ are added automatically under certain conditions.\n\n *  `user` ([User](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user)):\
        \ The current user. Always available and equal to `null` if the request is\
        \ anonymous.\n *  `app` ([App](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#app)):\
        \ The [Connect app](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps)\
        \ that made the request. Available only for authenticated requests made by\
        \ Connect apps (read more here: [Authentication for Connect apps](https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/)).\n\
        \ *  `issue` ([Issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)):\
        \ The current issue. Available only when the issue is provided in the request\
        \ context object.\n *  `issues` ([List](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#list)\
        \ of [Issues](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)):\
        \ A collection of issues matching a JQL query. Available only when JQL is\
        \ provided in the request context object.\n *  `project` ([Project](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#project)):\
        \ The current project. Available only when the project is provided in the\
        \ request context object.\n *  `sprint` ([Sprint](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#sprint)):\
        \ The current sprint. Available only when the sprint is provided in the request\
        \ context object.\n *  `board` ([Board](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#board)):\
        \ The current board. Available only when the board is provided in the request\
        \ context object.\n *  `serviceDesk` ([ServiceDesk](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#servicedesk)):\
        \ The current service desk. Available only when the service desk is provided\
        \ in the request context object.\n *  `customerRequest` ([CustomerRequest](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#customerrequest)):\
        \ The current customer request. Available only when the customer request is\
        \ provided in the request context object.\n\nIn addition, you can pass custom\
        \ context variables along with their types. You can then access them from\
        \ the Jira expression by key. You can use the following variables in a custom\
        \ context:\n\n *  `user`: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user)\
        \ specified as an Atlassian account ID.\n *  `issue`: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)\
        \ specified by ID or key. All the fields of the issue object are available\
        \ in the Jira expression.\n *  `json`: A JSON object containing custom content.\n\
        \ *  `list`: A JSON list of `user`, `issue`, or `json` variable types.\n\n\
        This operation can be accessed anonymously.\n\n**[Permissions](#permissions)\
        \ required**: None. However, an expression may return different results for\
        \ different users depending on their permissions. For example, different users\
        \ may see different comments on the same issue.  \nPermission to access Jira\
        \ Software is required to access Jira Software context variables (`board`\
        \ and `sprint`) or fields (for example, `issue.sprint`)."
      operationId: evaluateJSISJiraExpression
      parameters:
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information in
          the response. This parameter accepts `meta.complexity` that returns information
          about the expression complexity. For example, the number of expensive operations
          used by the expression and how close the expression is to reaching the [complexity
          limit](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#restrictions).
          Useful when designing and debugging your expressions
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The Jira expression and the evaluation context
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraExpressionEvaluateRequestBean'
            example:
              context:
                board: 10100
                custom:
                  config:
                    type: json
                    value:
                      userId: '10002'
                  issuesList:
                  - key: ACJIRA-1471
                    type: issue
                  - id: 100001
                    type: issue
                  myUser:
                    accountId: '100001'
                    type: user
                  nullField:
                    type: json
                customerRequest: 1450
                issue:
                  key: ACJIRA-1470
                issues:
                  jql:
                    maxResults: 100
                    nextPageToken: EgQIlMIC
                    query: project = HSP
                project:
                  key: ACJIRA
                serviceDesk: 10023
                sprint: 10001
              expression: '{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link
                => link.linkedIssue.id), listCustomVariable: issuesList.includes(issue),
                customVariables: myUser.accountId == config.userId}'
        required: true
      responses:
        '200':
          description: Returned if the evaluation results in a value. The result is
            a JSON primitive value, list, or object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JExpEvaluateJiraExpressionResultBean'
              example: '{"value":"The expression''s result. This value can be any
                JSON, not necessarily a String","meta":{"complexity":{"steps":{"value":1,"limit":10000},"expensiveOperations":{"value":3,"limit":10},"beans":{"value":0,"limit":1000},"primitiveValues":{"value":1,"limit":10000}},"issues":{"jql":{"nextPageToken":"EgQIlMIC","isLast":false}}}}'
        '400':
          description: "Returned if:\n\n *  the request is invalid, that is:\n   \
            \ \n     *  invalid data is provided, such as a request including issue\
            \ ID and key.\n     *  the expression is invalid and can not be parsed.\n\
            \ *  evaluation fails at runtime. This may happen for various reasons.\
            \ For example, accessing a property on a null object (such as the expression\
            \ `issue.id` where `issue` is `null`). In this case an error message is\
            \ provided.\n *  If jql is unbounded or empty.\n *  If nextPageToken is\
            \ invalid"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Evaluation failed: \"issue[''a'' + ''b'']\"
                - Unrecognized property of `issue`: \"ab\" (''a'' + ''b''). Available
                properties of type ''Issue'' are: ''assignee'', ''comments'', ''description'',
                ''id'', ''issueType'', ''key'', ''priority'', ''project'', ''properties'',
                ''reporter'', ''status'', ''summary''"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if any object provided in the request context is not
            found or the user does not have permission to view it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue does not exist or you do not have
                permission to see it."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:jira-expressions:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issuetypescreenscheme/{issueTypeScreenSchemeId}/mapping/default:
    put:
      tags:
      - Issue type screen schemes
      summary: Update issue type screen scheme default screen scheme
      description: |-
        Updates the default screen scheme of an issue type screen scheme. The default screen scheme is used for all unmapped issue types.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateDefaultScreenScheme
      parameters:
      - name: issueTypeScreenSchemeId
        in: path
        description: The ID of the issue type screen scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultScreenScheme'
            example:
              screenSchemeId: '10010'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The screenSchemeId has to be provided."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type screen schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type screen scheme or the screen scheme
            is not found, or the screen scheme isn't used in classic projects.
          content:
            application/json:
              example: '{"errorMessages":["The issue type screen scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /group/member:
    get:
      tags:
      - Groups
      summary: Get users from group
      description: |-
        Returns a [paginated](#pagination) list of all users in a group.

        Note that users are ordered by username, however the username is not returned in the results due to privacy reasons.

        **[Permissions](#permissions) required:** either of:

         *  *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getUsersFromGroup
      parameters:
      - name: groupname
        in: query
        description: "As a group's name can change, use of `groupId` is recommended\
          \ to identify a group.  \nThe name of the group. This parameter cannot be\
          \ used with the `groupId` parameter"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupId
        in: query
        description: The ID of the group. This parameter cannot be used with the `groupName`
          parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-showInExample: 'true'
      - name: includeInactiveUsers
        in: query
        description: Include inactive users
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page (number should
          be between 1 and 50)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanUserDetails'
              example: '{"isLast":false,"maxResults":2,"nextPage":"https://your-domain.atlassian.net/rest/api/3/group/member?groupId=276f955c-63d7-42c8-9520-92d01dca0625&includeInactiveUsers=false&startAt=4&maxResults=2","self":"https://your-domain.atlassian.net/rest/api/3/group/member?groupId=276f955c-63d7-42c8-9520-92d01dca0625&includeInactiveUsers=false&startAt=2&maxResults=2","startAt":3,"total":5,"values":[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"avatarUrls":{},"displayName":"Mia","emailAddress":"mia@example.com","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},{"accountId":"5b10a0effa615349cb016cd8","accountType":"atlassian","active":false,"avatarUrls":{},"displayName":"Will","emailAddress":"will@example.com","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a0effa615349cb016cd8","timeZone":"Australia/Sydney"}]}'
        '400':
          description: Returned if the group name is not specified.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the calling user does not have the Administer Jira
            global permission.
        '404':
          description: Returned if the group is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /jql/sanitize:
    post:
      tags:
      - JQL
      summary: Sanitize JQL queries
      description: |-
        Sanitizes one or more JQL queries by converting readable details into IDs where a user doesn't have permission to view the entity.

        For example, if the query contains the clause *project = 'Secret project'*, and a user does not have browse permission for the project "Secret project", the sanitized query replaces the clause with *project = 12345"* (where 12345 is the ID of the project). If a user has the required permission, the clause is not sanitized. If the account ID is null, sanitizing is performed for an anonymous user.

        Note that sanitization doesn't make the queries GDPR-compliant, because it doesn't remove user identifiers (username or user key). If you need to make queries GDPR-compliant, use [Convert user identifiers to account IDs in JQL queries](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-jql/#api-rest-api-3-jql-sanitize-post).

        Before sanitization each JQL query is parsed. The queries are returned in the same order that they were passed.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: sanitiseJqlQueries
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JqlQueriesToSanitize'
            example:
              queries:
              - query: project = 'Sample project'
              - accountId: 5b10ac8d82e05b22cc7d4ef5
                query: project = 'Sample project'
              - accountId: cda2aa1395ac195d951b3387
                query: project = 'Sample project'
              - accountId: 5b10ac8d82e05b22cc7d4ef5
                query: invalid query
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanitizedJqlQueries'
              example: '{"queries":[{"initialQuery":"project = ''Sample project''","sanitizedQuery":"project
                = 12345"},{"initialQuery":"project = ''Sample project''","sanitizedQuery":"project
                = ''Sample project''","accountId":"5b10ac8d82e05b22cc7d4ef5"},{"initialQuery":"project
                = ''Sample project''","sanitizedQuery":"project = 12345","accountId":"cda2aa1395ac195d951b3387"},{"initialQuery":"non-parsable
                query","errors":{"errorMessages":["Error in the JQL Query: Expecting
                operator but got ''query''. The valid operators are ''='', ''!='',
                ''<'', ''>'', ''<='', ''>='', ''~'', ''!~'', ''IN'', ''NOT IN'', ''IS''
                and ''IS NOT''. (line 1, character 9)"],"errors":{}},"accountId":"5b10ac8d82e05b22cc7d4ef5"}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The queries has to be provided."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:jql:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issueLinkType/{issueLinkTypeId}:
    get:
      tags:
      - Issue link types
      summary: Get issue link type
      description: |-
        Returns an issue link type.

        To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project in the site.
      operationId: getIssueLinkType
      parameters:
      - name: issueLinkTypeId
        in: path
        description: The ID of the issue link type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueLinkType'
              example: '{"id":"1000","inward":"Duplicated by","name":"Duplicate","outward":"Duplicates","self":"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000"}'
        '400':
          description: Returned if the issue link type ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  issue linking is disabled.
             *  the issue link type is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-link-type:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue link types
      summary: Update issue link type
      description: |-
        Updates an issue link type.

        To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateIssueLinkType
      parameters:
      - name: issueLinkTypeId
        in: path
        description: The ID of the issue link type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueLinkType'
            example:
              inward: Duplicated by
              name: Duplicate
              outward: Duplicates
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueLinkType'
              example: '{"id":"1000","inward":"Duplicated by","name":"Duplicate","outward":"Duplicates","self":"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000"}'
        '400':
          description: Returned if the issue link type ID or the request body are
            invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  issue linking is disabled.
             *  the issue link type is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-link-type:jira
        - write:issue-link-type:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue link types
      summary: Delete issue link type
      description: |-
        Deletes an issue link type.

        To use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteIssueLinkType
      parameters:
      - name: issueLinkTypeId
        in: path
        description: The ID of the issue link type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the issue link type ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  issue linking is disabled.
             *  the issue link type is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue-link-type:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}ore:
    post:
      tags:
      - Projects
      summary: Restore deleted or archived project
      description: |-
        Restores a project that has been archived or placed in the Jira recycle bin.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)for Company managed projects.
         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project for Team managed projects.
      operationId: restore
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
              example: '{"assigneeType":"PROJECT_LEAD","avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"components":[{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}],"description":"This
                project was created as an example for REST.","email":"from-jira@example.com","id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"issueTypes":[{"avatarId":1,"description":"A
                task that needs to be done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false},{"avatarId":10002,"description":"A
                problem with the software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}],"key":"EX","lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"properties":{"propertyKey":"propertyValue"},"roles":{"Developers":"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic","url":"https://www.example.com","versions":[]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:project:jira
        - read:project.property:jira
        - read:user:jira
        - write:project:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type-hierarchy:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /redact:
    post:
      tags:
      - Issue redaction
      summary: Redact
      description: |-
        Submit a job to redact issue field data. This will trigger the redaction of the data in the specified fields asynchronously.

        The redaction status can be polled using the job id.
      operationId: redact
      parameters: [
        ]
      requestBody:
        description: List of redaction requests
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRedactionRequest'
        required: true
      responses:
        '202':
          description: Returned if the job submission is successful. The response
            contains the job id
          content:
            application/json:
              schema:
                type: string
                format: uuid
        '400':
          description: Returned if the redaction request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the user / app is not authorised to redact data
        '403':
          description: Returned if the AGP subscription is not present.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - redact:issue:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /field/{fieldId}:
    put:
      tags:
      - Issue fields
      summary: Update custom field
      description: |-
        Updates a custom field.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateCustomField
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The custom field update details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomFieldDetails'
            example:
              description: Select the manager and the corresponding employee.
              name: Managers and employees list
              searcherKey: com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["searcherKey is invalid for the field type."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can edit custom
                fields."],"errors":{}}'
        '404':
          description: Returned if the custom field is not found.
          content:
            application/json:
              example: '{"errorMessages":["The custom field was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /statuscategory/{idOrKey}:
    get:
      tags:
      - Workflow status categories
      summary: Get status category
      description: |-
        Returns a status category. Status categories provided a mechanism for categorizing [statuses](#api-rest-api-3-status-idOrName-get).

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getStatusCategory
      parameters:
      - name: idOrKey
        in: path
        description: The ID or key of the status category
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusCategory'
              example: '{"colorName":"yellow","id":1,"key":"in-flight","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/1"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the status category is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:status:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /user/groups:
    get:
      tags:
      - Users
      summary: Get user groups
      description: |-
        Returns the groups to which a user belongs.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getUserGroups
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: true
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupName'
              example: '{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the calling user does not have the *Browse users
            and groups* global permission.
        '404':
          description: Returned if the user is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /universal_avatar/view/type/{type}/owner/{entityId}:
    get:
      tags:
      - Avatars
      summary: Get avatar image by owner
      description: |-
        Returns the avatar image for a project, issue type or priority.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  For system avatars, none.
         *  For custom project avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project the avatar belongs to.
         *  For custom issue type avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the issue type is used in.
         *  For priority avatars, none.
      operationId: getAvatarImageByOwner
      parameters:
      - name: type
        in: path
        description: The icon type of the avatar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - issuetype
          - project
          - priority
        x-showInExample: 'true'
      - name: entityId
        in: path
        description: The ID of the project or issue type the avatar belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-showInExample: 'true'
      - name: size
        in: query
        description: The size of the avatar image. If not provided the default size
          is returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - xsmall
          - small
          - medium
          - large
          - xlarge
        x-showInExample: 'true'
      - name: format
        in: query
        description: The format to return the avatar image in. If not provided the
          original content format is returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - png
          - svg
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            '*/*': {
              }
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
            image/png: {
              }
            image/svg+xml: {
              }
        '400':
          description: Returned if the request is not valid.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
        '404':
          description: Returned if an avatar is not found or an avatar matching the
            requested size is not found.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /users:
    get:
      tags:
      - Users
      summary: Get all users default
      description: |-
        Returns a list of all users, including active users, inactive users and previously deleted users that have an Atlassian account.

        Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAllUsersDefault
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return (limited to 1000)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example: '[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},{"accountId":"5b10ac8d82e05b22cc7d4ef5","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48"},"displayName":"Emma
                Richards","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5"}]'
        '400':
          description: Returned if the request is invalid.
        '403':
          description: Returned if the user doesn't have the necessary permission.
        '409':
          description: Returned if the request takes longer than 10 seconds or is
            interrupted.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /field/{fieldId}/context/{contextId}/option/move:
    put:
      tags:
      - Issue custom field options
      summary: Reorder custom field options (context)
      description: |-
        Changes the order of custom field options or cascading options in a context.

        This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: reorderCustomFieldOptions
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderOfCustomFieldOptions'
            example:
              customFieldOptionIds:
              - '10001'
              - '10002'
              position: First
        required: true
      responses:
        '204':
          description: Returned if options are reordered
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["''after'' and ''position'' were provided.
                Only ''after'' or ''position'' can be specified."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can manage custom
                field options."],"errors":{}}'
        '404':
          description: Returned if the field, the context, or one or more of the options
            is not found..
          content:
            application/json:
              example: '{"errorMessages":["The custom field was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field.option:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/worklog:
    get:
      tags:
      - Issue worklogs
      summary: Get issue worklogs
      description: |-
        Returns worklogs for an issue (ordered by created time), starting from the oldest worklog or from the worklog started on or after a date and time.

        Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Workloads are only returned where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: getIssueWorklog
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 5000
      - name: startedAfter
        in: query
        description: The worklog start date and time, as a UNIX timestamp in milliseconds,
          after which worklogs are returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: startedBefore
        in: query
        description: The worklog start date and time, as a UNIX timestamp in milliseconds,
          before which worklogs are returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          worklogs in the response. This parameter accepts`properties`, which returns
          worklog properties
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfWorklogs'
              example: '{"maxResults":1,"startAt":0,"total":1,"worklogs":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"comment":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"I
                did some work here."}]}]},"id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the issue is not found or the user does not have permission to view the issue.
             *  `startAt` or `maxResults` has non-numeric values.
             *  time tracking is disabled.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        - read:issue-worklog:jira
        - read:issue-worklog.property:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue worklogs
      summary: Add worklog
      description: |-
        Adds a worklog to an issue.

        Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Work on issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: addWorklog
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notifyUsers
        in: query
        description: Whether users watching the issue are notified by email
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: adjustEstimate
        in: query
        description: |-
          Defines how to update the issue's time estimate, the options are:

           *  `new` Sets the estimate to a specific value, defined in `newEstimate`.
           *  `leave` Leaves the estimate unchanged.
           *  `manual` Reduces the estimate by amount specified in `reduceBy`.
           *  `auto` Reduces the estimate by the value of `timeSpent` in the worklog
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - new
          - leave
          - manual
          - auto
          default: auto
      - name: newEstimate
        in: query
        description: The value to set as the issue's remaining time estimate, as days
          (\#d), hours (\#h), or minutes (\#m or \#). For example, *2d*. Required
          when `adjustEstimate` is `new`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: reduceBy
        in: query
        description: The amount to reduce the issue's remaining estimate by, as days
          (\#d), hours (\#h), or minutes (\#m). For example, *2d*. Required when `adjustEstimate`
          is `manual`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          work logs in the response. This parameter accepts `properties`, which returns
          worklog properties
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: overrideEditableFlag
        in: query
        description: Whether the worklog entry should be added to the issue even if
          the issue is not editable, because jira.issue.editable set to false or missing.
          For example, the issue is closed. Connect and Forge app users with *Administer
          Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) can
          use this flag
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Worklog'
            example:
              comment:
                content:
                - content:
                  - text: I did some work here.
                    type: text
                  type: paragraph
                type: doc
                version: 1
              started: 2021-01-17T12:34:00.000+0000
              timeSpentSeconds: 12000
              visibility:
                identifier: 276f955c-63d7-42c8-9520-92d01dca0625
                type: group
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worklog'
        '400':
          description: |-
            Returned if:

             *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.
             *  `adjustEstimate` is set to `manual` but `reduceBy` is not provided or is invalid.
             *  the user does not have permission to add the worklog.
             *  the request JSON is malformed.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
        '413':
          description: |-
            Returned if the per-issue limit has been breached for one of the following fields:

             *  worklogs
             *  attachments
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-worklog:jira
        - write:issue-worklog.property:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-worklog:jira
        - read:project-role:jira
        - read:user:jira
        - read:issue-worklog.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue worklogs
      summary: Bulk delete worklogs
      description: |-
        Deletes a list of worklogs from an issue. This is an experimental API with limitations:

         *  You can't delete more than 5000 worklogs at once.
         *  No notifications will be sent for deleted worklogs.

        Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  *Delete all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any worklog.
         *  If any worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: bulkDeleteWorklogs
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: adjustEstimate
        in: query
        description: |-
          Defines how to update the issue's time estimate, the options are:

           *  `leave` Leaves the estimate unchanged.
           *  `auto` Reduces the estimate by the aggregate value of `timeSpent` across all worklogs being deleted
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - leave
          - auto
          default: auto
      - name: overrideEditableFlag
        in: query
        description: Whether the work log entries should be removed to the issue even
          if the issue is not editable, because jira.issue.editable set to false or
          missing. For example, the issue is closed. Connect and Forge app users with
          admin permission can use this flag
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: A JSON object containing a list of worklog IDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorklogIdsRequestBean'
            example:
              ids:
              - 1
              - 2
              - 5
              - 10
        required: true
      responses:
        '200':
          description: Returned if the bulk deletion request was partially successful,
            with a message indicating partial success
        '204':
          description: Returned if the request is successful.
        '400':
          description: |-
            Returned if:

             *  `request` is not provided or is invalid
             *  the user does not have permission to delete the worklogs
             *  the number of worklogs being deleted exceeds the limit
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: |-
            Returned if:

             *  the issue is not found or user does not have permission to view the issue
             *  at least one of the worklogs is not associated with the provided issue
             *  time tracking is disabled
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue-worklog:jira
        - delete:issue-worklog.property:jira
        - write:issue.time-tracking:jira
        - read:group:jira
        - read:issue-worklog:jira
        - read:project-role:jira
        - read:user:jira
        - read:issue-worklog.property:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: DELETE
  /issuesecurityschemes/level/member:
    get:
      tags:
      - Issue security schemes
      summary: Get issue security level members
      description: |-
        Returns a [paginated](#pagination) list of issue security level members.

        Only issue security level members in the context of classic projects are returned.

        Filtering using parameters is inclusive: if you specify both security scheme IDs and level IDs, the result will include all issue security level members from the specified schemes and levels.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getSecurityLevelMembers
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: id
        in: query
        description: 'The list of issue security level member IDs. To include multiple
          issue security level members separate IDs with an ampersand: `id=10000&id=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: schemeId
        in: query
        description: 'The list of issue security scheme IDs. To include multiple issue
          security schemes separate IDs with an ampersand: `schemeId=10000&schemeId=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: levelId
        in: query
        description: 'The list of issue security level IDs. To include multiple issue
          security levels separate IDs with an ampersand: `levelId=10000&levelId=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `all` Returns all expandable information
           *  `field` Returns information about the custom field granted the permission
           *  `group` Returns information about the group that is granted the permission
           *  `projectRole` Returns information about the project role granted the permission
           *  `user` Returns information about the user who is granted the permission
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanSecurityLevelMember'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":3,"values":[{"id":"10000","issueSecurityLevelId":"20010","issueSecuritySchemeId":"10010","holder":{"expand":"group","type":"group"}}]}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-security-level:jira
        - read:issue-security-scheme:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/components:
    get:
      tags:
      - Project components
      summary: Get project components
      description: |-
        Returns all components in a project. See the [Get project components paginated](#api-rest-api-3-project-projectIdOrKey-component-get) resource if you want to get a full list of components with pagination.

        If your project uses Compass components, this API will return a paginated list of Compass components that are linked to issues in that project.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectComponents
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: componentSource
        in: query
        description: The source of the components to return. Can be `jira` (default),
          `compass` or `auto`. When `auto` is specified, the API will return connected
          Compass components if the project is opted into Compass, otherwise it will
          return Jira components. Defaults to `jira`
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - jira
          - compass
          - auto
          default: jira
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectComponent'
              example: '[{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"},{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-11ee-4e70-be56-0242ac120002/fdb3fdec-4e70-11ee-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a another Jira component","id":"10050","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"PXA","project":"PROJECTKEY","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:project.component:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /dashboard/bulk/edit:
    put:
      tags:
      - Dashboards
      summary: Bulk edit dashboards
      description: |-
        Bulk edit dashboards. Maximum number of dashboards to be edited at the same time is 100.

        **[Permissions](#permissions) required:** None

        The dashboards to be updated must be owned by the user, or the user must be an administrator.
      operationId: bulkEditDashboards
      parameters: [
        ]
      requestBody:
        description: The details of dashboards being updated in bulk
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkEditShareableEntityRequest'
            example:
              action: changePermission
              entityIds:
              - 10001
              - 10002
              extendAdminPermissions: true
              permissionDetails:
                editPermissions:
                - group:
                    groupId: 276f955c-63d7-42c8-9520-92d01dca0625
                    name: jira-administrators
                    self: https://your-domain.atlassian.net/rest/api/~ver~/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625
                  id: 10010
                  type: group
                sharePermissions:
                - id: 10000
                  type: global
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkEditShareableEntityResponse'
              example: '{"action":"changePermission","entityErrors":{"10002":{"errorMessages":["Only
                owner or editors of the dashboard can change permissions."],"errors":{}}}}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:dashboard:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
  /issuetype/{id}:
    get:
      tags:
      - Issue types
      summary: Get issue type
      description: |-
        Returns an issue type.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) in a project the issue type is associated with or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueType
      parameters:
      - name: id
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTypeDetails'
              example: '{"avatarId":1,"description":"A task that needs to be done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false}'
        '400':
          description: Returned if the issue type ID is invalid.
        '404':
          description: |-
            Returned if:

             *  the issue type is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue types
      summary: Update issue type
      description: |-
        Updates the issue type.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateIssueType
      parameters:
      - name: id
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeUpdateBean'
            example:
              avatarId: 1
              description: description
              name: name
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTypeDetails'
        '400':
          description: |-
            Returned if the request is invalid because:

             *  no content is sent.
             *  the issue type name exceeds 60 characters.
             *  the avatar is not associated with this issue type.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the issue type is not found.
        '409':
          description: Returned if the issue type name is in use.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type:jira
        - read:avatar:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue types
      summary: Delete issue type
      description: |-
        Deletes the issue type. If the issue type is in use, all uses are updated with the alternative issue type (`alternativeIssueTypeId`). A list of alternative issue types are obtained from the [Get alternative issue types](#api-rest-api-3-issuetype-id-alternatives-get) resource.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteIssueType
      parameters:
      - name: id
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: alternativeIssueTypeId
        in: query
        description: The ID of the replacement issue type
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if any issues cannot be updated with the alternative
            issue type.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if:

             *  the issue type is in use and an alternative issue type is not specified.
             *  the issue type or alternative issue type is not found.
        '409':
          description: |-
            Returned if the issue type is in use and:

             *  also specified as the alternative issue type.
             *  is a *standard* issue type and the alternative issue type is a *subtask*.
        '423':
          description: Returned if a resource related to deletion is locked.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue-type:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /role/{id}:
    get:
      tags:
      - Project roles
      summary: Get project role by ID
      description: |-
        Gets the project role details and the default actors associated with the role. The list of default actors is sorted by display name.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getProjectRoleById
      parameters:
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have administrative permissions.
        '404':
          description: Returned if the project role is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project-role:jira
        - read:project:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Project roles
      summary: Fully update project role
      description: |-
        Updates the project role's name and description. You must include both a name and a description in the request.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: fullyUpdateProjectRole
      parameters:
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateRoleRequestBean'
            example:
              description: A project role that represents developers in a project
              name: Developers
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}'
        '400':
          description: Returned if the request is not valid. The `name` cannot be
            empty or start or end with whitespace.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have administrative permissions.
        '404':
          description: Returned if the project role is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project:jira
        - write:project-role:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project-role:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Project roles
      summary: Partial update project role
      description: |-
        Updates either the project role's name or its description.

        You cannot update both the name and description at the same time using this operation. If you send a request with a name and a description only the name is updated.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: partialUpdateProjectRole
      parameters:
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateRoleRequestBean'
            example:
              description: A project role that represents developers in a project
              name: Developers
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have administrative permissions.
        '404':
          description: Returned if the project role is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project:jira
        - write:project-role:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project-role:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Project roles
      summary: Delete project role
      description: |-
        Deletes a project role. You must specify a replacement project role if you wish to delete a project role that is in use.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteProjectRole
      parameters:
      - name: id
        in: path
        description: The ID of the project role to delete. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: swap
        in: query
        description: The ID of the project role that will replace the one being deleted.
          The swap will attempt to swap the role in schemes (notifications, permissions,
          issue security), workflows, worklogs and comments
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the request is invalid or if the replacement project
            role is not found.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have administrative permissions.
        '404':
          description: Returned if the project role being deleted is not found.
        '409':
          description: Returned if the project role being deleted is in use and a
            replacement project role is not specified in the request.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project-role:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /status:
    get:
      tags:
      - Workflow statuses
      summary: Get all statuses
      description: |-
        Returns a list of all statuses associated with active workflows.

        This operation can be accessed anonymously.

        [Permissions](#permissions) required: *Browse projects* [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) for the project.
      operationId: getStatuses
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusDetails'
              example: '[{"description":"The issue is currently being worked on.","iconUrl":"https://your-domain.atlassian.net/images/icons/progress.gif","id":"10000","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/status/10000","statusCategory":{"colorName":"yellow","id":1,"key":"in-flight","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/1"}},{"description":"The
                issue is closed.","iconUrl":"https://your-domain.atlassian.net/images/icons/closed.gif","id":"5","name":"Closed","self":"https://your-domain.atlassian.net/rest/api/3/status/5","statusCategory":{"colorName":"green","id":9,"key":"completed","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/9"}}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:status:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /field/{fieldId}/context/issuetypemapping:
    get:
      tags:
      - Issue custom field contexts
      summary: Get issue types for custom field context
      description: |-
        Returns a [paginated](#pagination) list of context to issue type mappings for a custom field. Mappings are returned for all contexts or a list of contexts. Mappings are ordered first by context ID and then by issue type ID.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueTypeMappingsForContexts
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: query
        description: The ID of the context. To include multiple contexts, provide
          an ampersand-separated list. For example, `contextId=10001&contextId=10002`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if operation is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueTypeToContextMapping'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":3,"values":[{"contextId":"10001","issueTypeId":"10010"},{"contextId":"10001","issueTypeId":"10011"},{"contextId":"10002","isAnyIssueType":true}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issue/createmeta/{projectIdOrKey}/issuetypes/{issueTypeId}:
    get:
      tags:
      - Issues
      summary: Get create field metadata for a project and issue type id
      description: |-
        Returns a page of field metadata for a specified project and issuetype id. Use the information to populate the requests in [ Create issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Create issues* [project permission](https://confluence.atlassian.com/x/yodKLg) in the requested projects.
      operationId: getCreateIssueMetaIssueTypeId
      parameters:
      - name: projectIdOrKey
        in: path
        description: The ID or key of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: issueTypeId
        in: path
        description: The issuetype ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfCreateMetaIssueTypeWithField'
              example: '{"fields":[{"fieldId":"assignee","hasDefaultValue":false,"key":"assignee","name":"Assignee","operations":["set"],"required":true}],"maxResults":1,"startAt":0,"total":1}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              example: '{"errorMessages":["Parameter ''maxResults'' must not exceed
                the limit ''200''"],"errors":{},"httpStatusCode":{"empty":false,"present":true}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-meta:jira
        - read:avatar:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /jql/autocompletedata/suggestions:
    get:
      tags:
      - JQL
      summary: Get field auto complete suggestions
      description: |-
        Returns the JQL search auto complete suggestions for a field.

        Suggestions can be obtained by providing:

         *  `fieldName` to get a list of all values for the field.
         *  `fieldName` and `fieldValue` to get a list of values containing the text in `fieldValue`.
         *  `fieldName` and `predicateName` to get a list of all predicate values for the field.
         *  `fieldName`, `predicateName`, and `predicateValue` to get a list of predicate values containing the text in `predicateValue`.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getFieldAutoCompleteForQueryString
      parameters:
      - name: fieldName
        in: query
        description: The name of the field
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: reporter
        x-showInExample: 'true'
      - name: fieldValue
        in: query
        description: The partial field item name entered by the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: predicateName
        in: query
        description: The name of the [ CHANGED operator predicate](https://confluence.atlassian.com/x/hQORLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED)
          for which the suggestions are generated. The valid predicate operators are
          *by*, *from*, and *to*
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: predicateValue
        in: query
        description: The partial predicate item name entered by the user
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoCompleteSuggestions'
              example: '{"results":[{"displayName":"<b>Ac</b>tiveObjects (AO)","value":"ActiveObjects"},{"displayName":"Atlassian
                Connect (<b>AC</b>)","value":"Atlassian Connect"},{"displayName":"Atlassian
                Connect in Jira (<b>AC</b>JIRA)","value":"Atlassian Connect in Jira"}]}'
        '400':
          description: Returned if an invalid combination of parameters is passed.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-details:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /workflowscheme/{id}:
    get:
      tags:
      - Workflow schemes
      summary: Get workflow scheme
      description: |-
        Returns a workflow scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getWorkflowScheme
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme. Find this ID by editing the desired
          workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example,
          *schemeId=10301*
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: returnDraftIfExists
        in: query
        description: Returns the workflow scheme's draft rather than scheme itself,
          if set to true. If the workflow scheme does not have a draft, then the workflow
          scheme is returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"jira","description":"The description of
                the example workflow scheme.","draft":false,"id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow schemes
      summary: Classic update workflow scheme
      description: |-
        Updates a company-manged project workflow scheme, including the name, default workflow, issue type to project mappings, and more. If the workflow scheme is active (that is, being used by at least one project), then a draft workflow scheme is created or updated instead, provided that `updateDraftIfNeeded` is set to `true`.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateWorkflowScheme
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme. Find this ID by editing the desired
          workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example,
          *schemeId=10301*
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowScheme'
            example:
              defaultWorkflow: jira
              description: The description of the example workflow scheme.
              issueTypeMappings:
                '10000': scrum workflow
              name: Example workflow scheme
              updateDraftIfNeeded: false
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"jira","description":"The description of
                the example workflow scheme.","draft":false,"id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - write:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Workflow schemes
      summary: Delete workflow scheme
      description: |-
        Deletes a workflow scheme. Note that a workflow scheme cannot be deleted if it is active (that is, being used by at least one project).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteWorkflowScheme
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme. Find this ID by editing the desired
          workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example,
          *schemeId=10301*
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the scheme is active.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /user/search/query:
    get:
      tags:
      - User search
      summary: Find users by query
      description: |-
        Finds users with a structured query and returns a [paginated](#pagination) list of user details.

        This operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that match the structured query. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the structured query, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).

        The query statements are:

         *  `is assignee of PROJ` Returns the users that are assignees of at least one issue in project *PROJ*.
         *  `is assignee of (PROJ-1, PROJ-2)` Returns users that are assignees on the issues *PROJ-1* or *PROJ-2*.
         *  `is reporter of (PROJ-1, PROJ-2)` Returns users that are reporters on the issues *PROJ-1* or *PROJ-2*.
         *  `is watcher of (PROJ-1, PROJ-2)` Returns users that are watchers on the issues *PROJ-1* or *PROJ-2*.
         *  `is voter of (PROJ-1, PROJ-2)` Returns users that are voters on the issues *PROJ-1* or *PROJ-2*.
         *  `is commenter of (PROJ-1, PROJ-2)` Returns users that have posted a comment on the issues *PROJ-1* or *PROJ-2*.
         *  `is transitioner of (PROJ-1, PROJ-2)` Returns users that have performed a transition on issues *PROJ-1* or *PROJ-2*.
         *  `[propertyKey].entity.property.path is "property value"` Returns users with the entity property value. For example, if user property `location` is set to value `{"office": {"country": "AU", "city": "Sydney"}}`, then it's possible to use `[location].office.city is "Sydney"` to match the user.

        The list of issues can be extended as needed, as in *(PROJ-1, PROJ-2, ... PROJ-n)*. Statements can be combined using the `AND` and `OR` operators to form more complex queries. For example:

        `is assignee of PROJ AND [propertyKey].entity.property.path is "property value"`
      operationId: findUsersByQuery
      parameters:
      - name: query
        in: query
        description: The search query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanUser'
        '400':
          description: Returned if the query is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '408':
          description: Returned if the search is timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment:jira
        - read:issue:jira
        - read:issue.vote:jira
        - read:issue.watcher:jira
        - read:project:jira
        - read:user:jira
        - read:user.property:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/{projectIdOrKey}/roledetails:
    get:
      tags:
      - Project roles
      summary: Get project role details
      description: |-
        Returns all [project roles](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-roles/) and the details for each role. Note that the list of project roles is common to all projects.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectRoleDetails
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: currentMember
        in: query
        description: Whether the roles should be filtered to include only those the
          user is assigned to
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: excludeConnectAddons
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRoleDetails'
              example: '[{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","admin":false,"default":true,"roleConfigurable":true,"translatedName":"Developers"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or if the user does not
            have the necessary permissions for the project.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-category:jira
        - read:project-role:jira
        - read:project:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /configuration/timetracking:
    get:
      tags:
      - Time tracking
      summary: Get selected time tracking provider
      description: |-
        Returns the time tracking provider that is currently selected. Note that if time tracking is disabled, then a successful but empty response is returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getSelectedTimeTrackingImplementation
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful and time tracking is
            enabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeTrackingProvider'
              example: '{"key":"Jira","name":"JIRA provided time tracking","url":"/example/config/url"}'
        '204':
          description: Returned if the request is successful but time tracking is
            disabled.
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.time-tracking:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Time tracking
      summary: Select time tracking provider
      description: |-
        Selects a time tracking provider.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: selectTimeTrackingImplementation
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeTrackingProvider'
            example:
              key: Jira
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the time tracking provider is not found.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue.time-tracking:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{id}/trash:
    post:
      tags:
      - Issue fields
      summary: Move custom field to trash
      description: |-
        Moves a custom field to trash. See [Edit or delete a custom field](https://confluence.atlassian.com/x/Z44fOw) for more information on trashing and deleting custom fields.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: trashCustomField
      parameters:
      - name: id
        in: path
        description: The ID of a custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the custom field is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /atlassian-connect/1/service-registry:
    get:
      tags:
      - Service Registry
      summary: Retrieve the attributes of service registries
      description: |-
        Retrieve the attributes of given service registries.

        **[Permissions](#permissions) required:** Only Connect apps can make this request and the servicesIds belong to the tenant you are requesting
      operationId: ServiceRegistryResource.services_get
      parameters:
      - name: serviceIds
        in: query
        description: The ID of the services (the strings starting with "b:" need to
          be decoded in Base64)
        required: true
        style: form
        explode: true
        schema:
          maxItems: 20
          minItems: 1
          type: array
          items:
            type: string
        example: '["ari:cloud:graph::service/ca075ed7-6ea7-4563-acb3-000000000000/f51d7252-61e0-11ee-b94d-000000000000",
          "ari:cloud:graph::service/ca075ed7-6ea7-4563-acb3-000000000000/f51d7252-61e0-11ee-b94d-000000000001"]'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceRegistry'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: The request needs to be authenticated.
        '403':
          description: The request isn't authorized.
        '500':
          description: The endpoint failed internally.
        '501':
          description: The endpoint isn't ready for receiving requests.
        '504':
          description: The upstream service is busy.
      deprecated: false
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: INACCESSIBLE
  /filter/{id}/favourite:
    put:
      tags:
      - Filters
      summary: Add filter as favorite
      description: |-
        Add a filter as a favorite for the user.

        **[Permissions](#permissions) required:** Permission to access Jira, however, the user can only favorite:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: setFavouriteForFilter
      parameters:
      - name: id
        in: path
        description: The ID of the filter
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
           *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
              example: '{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"}'
        '400':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to favorite the filter.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:filter:jira
        - read:jql:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Filters
      summary: Remove filter as favorite
      description: |-
        Removes a filter as a favorite for the user. Note that this operation only removes filters visible to the user from the user's favorites list. For example, if the user favorites a public filter that is subsequently made private (and is therefore no longer visible on their favorites list) they cannot remove it from their favorites list.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: deleteFavouriteForFilter
      parameters:
      - name: id
        in: path
        description: The ID of the filter
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
           *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
              example: '{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"}'
        '400':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to view the filter.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:filter:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:filter:jira
        - read:group:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-role:jira
        - read:project-version:jira
        - read:project.component:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /workflowscheme/update/mappings:
    post:
      tags:
      - Workflow schemes
      summary: Get required status mappings for workflow scheme update
      description: |-
        Gets the required status mappings for the desired changes to a workflow scheme. The results are provided per issue type and workflow. When updating a workflow scheme, status mappings can be provided per issue type, per workflow, or both.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* permission to update all, including global-scoped, workflow schemes.
         *  *Administer projects* project permission to update project-scoped workflow schemes.
      operationId: updateWorkflowSchemeMappings
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowSchemeUpdateRequiredMappingsRequest'
            example:
              defaultWorkflowId: '10010'
              id: '10001'
              workflowsForIssueTypes:
              - issueTypeIds:
                - '10010'
                - '10011'
                workflowId: '10001'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowSchemeUpdateRequiredMappingsResponse'
              example: '{"statusMappingsByIssueTypes":[{"issueTypeId":"10000","statusIds":["10000","10001"]}],"statusMappingsByWorkflows":[{"sourceWorkflowId":"10000","statusIds":["10000","10001"],"targetWorkflowId":"10001"}],"statuses":[{"category":"TODO","id":"10000","name":"To
                Do"}],"statusesPerWorkflow":[{"initialStatusId":"10000","statuses":["10000","10001"],"workflowId":"10000"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{fieldKey}/option/suggestions/search:
    get:
      tags:
      - Issue custom field options (apps)
      summary: Get visible issue field options
      description: |-
        Returns a [paginated](#pagination) list of options for a select list issue field that can be viewed by the user.

        Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getVisibleIssueFieldOptions
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: projectId
        in: query
        description: Filters the results to options that are only available in the
          specified project
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: fieldKey
        in: path
        description: |-
          The field key is specified in the following format: **$(app-key)\_\_$(field-key)**. For example, *example-add-on\_\_example-issue-field*. To determine the `fieldKey` value, do one of the following:

           *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
           *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueFieldOption'
              example: '{"isLast":false,"maxResults":1,"nextPage":"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=1&maxResults=1","self":"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=0&maxResults=1","startAt":0,"total":10,"values":[{"id":1,"value":"Team
                1","properties":{"leader":{"name":"Leader Name","email":"lname@example.com"},"members":42,"description":"The
                team''s description","founded":"2016-06-06"}}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the field is not found or does not support options.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field.option:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /applicationrole/{key}:
    get:
      tags:
      - Application roles
      summary: Get application role
      description: |-
        Returns an application role.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getApplicationRole
      parameters:
      - name: key
        in: path
        description: The key of the application role. Use the [Get all application
          roles](#api-rest-api-3-applicationrole-get) operation to get the key for
          each application role
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: jira-software
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationRole'
              example: '{"defaultGroups":["jira-software-users"],"defaultGroupsDetails":[{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-software-users","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"}],"defined":false,"groupDetails":[{"groupId":"42c8955c-63d7-42c8-9520-63d7aca0625","name":"jira-testers","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=42c8955c-63d7-42c8-9520-63d7aca0625"},{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-software-users","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"}],"groups":["jira-software-users","jira-testers"],"hasUnlimitedSeats":false,"key":"jira-software","name":"Jira
                Software","numberOfSeats":10,"platform":false,"remainingSeats":5,"selectedByDefault":false,"userCount":5,"userCountDescription":"5
                developers"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user is not an administrator.
        '404':
          description: Returned if the role is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
  /filter:
    post:
      tags:
      - Filters
      summary: Create filter
      description: |-
        Creates a filter. The filter is shared according to the [default share scope](#api-rest-api-3-filter-post). The filter is not selected as a favorite.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: createFilter
      parameters:
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.
           *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: overrideSharePermissions
        in: query
        description: 'EXPERIMENTAL: Whether share permissions are overridden to enable
          filters with any share permissions to be created. Available to users with
          *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: The filter to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
            example:
              description: Lists all open bugs
              jql: type = Bug and resolution is empty
              name: All Open Bugs
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
              example: '{"approximateLastUsed":null,"description":"Lists all open
                bugs","favourite":true,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":{"end-index":0,"items":[],"max-results":0,"size":0,"start-index":0},"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"}'
        '400':
          description: Returned if the request object is invalid. For example, the
            `name` is not unique or the project ID is not specified for a project
            role share permission.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:filter:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /plans/plan/{planId}/team/atlassian/{atlassianTeamId}:
    get:
      tags:
      - Teams in plan
      summary: Get Atlassian team in plan
      description: |-
        Returns planning settings for an Atlassian team in a plan.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAtlassianTeam
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: atlassianTeamId
        in: path
        description: The ID of the Atlassian team
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAtlassianTeamResponse'
              example: '{"capacity":220.0,"id":"98WA-2JBO-12N3-2298","issueSourceId":1,"planningStyle":"Scrum","sprintLength":2}'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan or Atlassian team is not found, or the
            Atlassian team is not associated with the plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Teams in plan
      summary: Update Atlassian team in plan
      description: |-
        Updates any of the following planning settings of an Atlassian team in a plan using [JSON Patch](https://datatracker.ietf.org/doc/html/rfc6902).

         *  planningStyle
         *  issueSourceId
         *  sprintLength
         *  capacity

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).

        *Note that "add" operations do not respect array indexes in target locations. Call the "Get Atlassian team in plan" endpoint to find out the order of array elements.*
      operationId: updateAtlassianTeam
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: atlassianTeamId
        in: path
        description: The ID of the Atlassian team
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: object
            example: |
              [{"op": "replace", "path": "/planningStyle", "value": "Kanban"}]
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan or Atlassian team is not found, or the
            Atlassian team is not associated with the plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Teams in plan
      summary: Remove Atlassian team from plan
      description: |-
        Removes an Atlassian team from a plan and deletes their planning settings.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeAtlassianTeam
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: atlassianTeamId
        in: path
        description: The ID of the Atlassian team
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan or Atlassian team is not found, or the
            Atlassian team is not associated with the plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issuetypescreenscheme/project:
    get:
      tags:
      - Issue type screen schemes
      summary: Get issue type screen schemes for projects
      description: |-
        Returns a [paginated](#pagination) list of issue type screen schemes and, for each issue type screen scheme, a list of the projects that use it.

        Only issue type screen schemes used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueTypeScreenSchemeProjectAssociations
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: projectId
        in: query
        description: 'The list of project IDs. To include multiple projects, separate
          IDs with ampersand: `projectId=10000&projectId=10001`'
        required: true
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueTypeScreenSchemesProjects'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":1,"values":[{"issueTypeScreenScheme":{"id":"1","name":"Default
                Issue Type Screen Scheme","description":"The default issue type screen
                scheme"},"projectIds":["10000","10001"]}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Issue type screen schemes
      summary: Assign issue type screen scheme to project
      description: |-
        Assigns an issue type screen scheme to a project.

        Issue type screen schemes can only be assigned to classic projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: assignIssueTypeScreenSchemeToProject
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeScreenSchemeProjectAssociation'
            example:
              issueTypeScreenSchemeId: '10001'
              projectId: '10002'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: |-
            Returned if:

             *  project is not found.
             *  issue type screen scheme is not found.
             *  the project is not a classic project.
          content:
            application/json:
              example: '{"errorMessages":["Only classic projects can have issue type
                screen schemes assigned."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type screen schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type screen scheme or the project are
            missing.
          content:
            application/json:
              example: '{"errorMessages":["The issue type screen scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-screen-scheme:jira
        - write:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /user/email/bulk:
    get:
      tags:
      - Users
      summary: Get user email bulk
      description: Returns a user's email address regardless of the user's profile
        visibility settings. For Connect apps, this API is only available to apps
        approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).
        For Forge apps, this API only supports access via asApp() requests.
      operationId: getUserEmailBulk
      parameters:
      - name: accountId
        in: query
        description: The account IDs of the users for which emails are required. An
          `accountId` is an identifier that uniquely identifies the user across all
          Atlassian products. For example, `5b10ac8d82e05b22cc7d4ef5`. Note, this
          should be treated as an opaque identifier (that is, do not assume any structure
          in the value)
        required: true
        style: form
        explode: true
        schema:
          maxLength: 128
          type: array
          items:
            maxLength: 128
            type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnrestrictedUserEmail'
        '400':
          description: Returned if the calling app is not approved to use this API.
        '401':
          description: Returned if the authentication credentials are incorrect, or
            missing from the request (for example if a user is trying to access this
            API).
        '503':
          description: Indicates the API is not currently enabled.
      deprecated: false
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:email-address:jira
        state: Beta
      x-atlassian-connect-scope: ACCESS_EMAIL_ADDRESSES
  /field/{fieldId}/context/defaultValue:
    get:
      tags:
      - Issue custom field contexts
      summary: Get custom field contexts default values
      description: "Returns a [paginated](#pagination) list of defaults for a custom\
        \ field. The results can be filtered by `contextId`, otherwise all values\
        \ are returned. If no defaults are set for a context, nothing is returned.\
        \  \nThe returned object depends on type of the custom field:\n\n *  `CustomFieldContextDefaultValueDate`\
        \ (type `datepicker`) for date fields.\n *  `CustomFieldContextDefaultValueDateTime`\
        \ (type `datetimepicker`) for date-time fields.\n *  `CustomFieldContextDefaultValueSingleOption`\
        \ (type `option.single`) for single choice select lists and radio buttons.\n\
        \ *  `CustomFieldContextDefaultValueMultipleOption` (type `option.multiple`)\
        \ for multiple choice select lists and checkboxes.\n *  `CustomFieldContextDefaultValueCascadingOption`\
        \ (type `option.cascading`) for cascading select lists.\n *  `CustomFieldContextSingleUserPickerDefaults`\
        \ (type `single.user.select`) for single users.\n *  `CustomFieldContextDefaultValueMultiUserPicker`\
        \ (type `multi.user.select`) for user lists.\n *  `CustomFieldContextDefaultValueSingleGroupPicker`\
        \ (type `grouppicker.single`) for single choice group pickers.\n *  `CustomFieldContextDefaultValueMultipleGroupPicker`\
        \ (type `grouppicker.multiple`) for multiple choice group pickers.\n *  `CustomFieldContextDefaultValueURL`\
        \ (type `url`) for URLs.\n *  `CustomFieldContextDefaultValueProject` (type\
        \ `project`) for project pickers.\n *  `CustomFieldContextDefaultValueFloat`\
        \ (type `float`) for floats (floating-point numbers).\n *  `CustomFieldContextDefaultValueLabels`\
        \ (type `labels`) for labels.\n *  `CustomFieldContextDefaultValueTextField`\
        \ (type `textfield`) for text fields.\n *  `CustomFieldContextDefaultValueTextArea`\
        \ (type `textarea`) for text area fields.\n *  `CustomFieldContextDefaultValueReadOnly`\
        \ (type `readonly`) for read only (text) fields.\n *  `CustomFieldContextDefaultValueMultipleVersion`\
        \ (type `version.multiple`) for single choice version pickers.\n *  `CustomFieldContextDefaultValueSingleVersion`\
        \ (type `version.single`) for multiple choice version pickers.\n\nForge custom\
        \ fields [types](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/#data-types)\
        \ are also supported, returning:\n\n *  `CustomFieldContextDefaultValueForgeStringFieldBean`\
        \ (type `forge.string`) for Forge string fields.\n *  `CustomFieldContextDefaultValueForgeMultiStringFieldBean`\
        \ (type `forge.string.list`) for Forge string collection fields.\n *  `CustomFieldContextDefaultValueForgeObjectFieldBean`\
        \ (type `forge.object`) for Forge object fields.\n *  `CustomFieldContextDefaultValueForgeDateTimeFieldBean`\
        \ (type `forge.datetime`) for Forge date-time fields.\n *  `CustomFieldContextDefaultValueForgeGroupFieldBean`\
        \ (type `forge.group`) for Forge group fields.\n *  `CustomFieldContextDefaultValueForgeMultiGroupFieldBean`\
        \ (type `forge.group.list`) for Forge group collection fields.\n *  `CustomFieldContextDefaultValueForgeNumberFieldBean`\
        \ (type `forge.number`) for Forge number fields.\n *  `CustomFieldContextDefaultValueForgeUserFieldBean`\
        \ (type `forge.user`) for Forge user fields.\n *  `CustomFieldContextDefaultValueForgeMultiUserFieldBean`\
        \ (type `forge.user.list`) for Forge user collection fields.\n\n**[Permissions](#permissions)\
        \ required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
      operationId: getDefaultValues
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field, for example `customfield\_10000`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: query
        description: The IDs of the contexts
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanCustomFieldContextDefaultValue'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":3,"values":[{"contextId":"10100","optionId":"10001"},{"contextId":"10101","optionId":"10003"},{"contextId":"10103"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field is not found.
          content:
            application/json:
              example: '{"errorMessages":["The custom field was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field.default-value:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue custom field contexts
      summary: Set custom field contexts default values
      description: |-
        Sets default for contexts of a custom field. Default are defined using these objects:

         *  `CustomFieldContextDefaultValueDate` (type `datepicker`) for date fields.
         *  `CustomFieldContextDefaultValueDateTime` (type `datetimepicker`) for date-time fields.
         *  `CustomFieldContextDefaultValueSingleOption` (type `option.single`) for single choice select lists and radio buttons.
         *  `CustomFieldContextDefaultValueMultipleOption` (type `option.multiple`) for multiple choice select lists and checkboxes.
         *  `CustomFieldContextDefaultValueCascadingOption` (type `option.cascading`) for cascading select lists.
         *  `CustomFieldContextSingleUserPickerDefaults` (type `single.user.select`) for single users.
         *  `CustomFieldContextDefaultValueMultiUserPicker` (type `multi.user.select`) for user lists.
         *  `CustomFieldContextDefaultValueSingleGroupPicker` (type `grouppicker.single`) for single choice group pickers.
         *  `CustomFieldContextDefaultValueMultipleGroupPicker` (type `grouppicker.multiple`) for multiple choice group pickers.
         *  `CustomFieldContextDefaultValueURL` (type `url`) for URLs.
         *  `CustomFieldContextDefaultValueProject` (type `project`) for project pickers.
         *  `CustomFieldContextDefaultValueFloat` (type `float`) for floats (floating-point numbers).
         *  `CustomFieldContextDefaultValueLabels` (type `labels`) for labels.
         *  `CustomFieldContextDefaultValueTextField` (type `textfield`) for text fields.
         *  `CustomFieldContextDefaultValueTextArea` (type `textarea`) for text area fields.
         *  `CustomFieldContextDefaultValueReadOnly` (type `readonly`) for read only (text) fields.
         *  `CustomFieldContextDefaultValueMultipleVersion` (type `version.multiple`) for single choice version pickers.
         *  `CustomFieldContextDefaultValueSingleVersion` (type `version.single`) for multiple choice version pickers.

        Forge custom fields [types](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/#data-types) are also supported, returning:

         *  `CustomFieldContextDefaultValueForgeStringFieldBean` (type `forge.string`) for Forge string fields.
         *  `CustomFieldContextDefaultValueForgeMultiStringFieldBean` (type `forge.string.list`) for Forge string collection fields.
         *  `CustomFieldContextDefaultValueForgeObjectFieldBean` (type `forge.object`) for Forge object fields.
         *  `CustomFieldContextDefaultValueForgeDateTimeFieldBean` (type `forge.datetime`) for Forge date-time fields.
         *  `CustomFieldContextDefaultValueForgeGroupFieldBean` (type `forge.group`) for Forge group fields.
         *  `CustomFieldContextDefaultValueForgeMultiGroupFieldBean` (type `forge.group.list`) for Forge group collection fields.
         *  `CustomFieldContextDefaultValueForgeNumberFieldBean` (type `forge.number`) for Forge number fields.
         *  `CustomFieldContextDefaultValueForgeUserFieldBean` (type `forge.user`) for Forge user fields.
         *  `CustomFieldContextDefaultValueForgeMultiUserFieldBean` (type `forge.user.list`) for Forge user collection fields.

        Only one type of default object can be included in a request. To remove a default for a context, set the default parameter to `null`.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setDefaultValues
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldContextDefaultValueUpdate'
            example:
              defaultValues:
              - contextId: '10100'
                optionId: '10001'
                type: option.single
              - contextId: '10101'
                optionId: '10003'
                type: option.single
              - contextId: '10103'
                optionId: '10005'
                type: option.single
        required: true
      responses:
        '204':
          description: Returned if operation is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["All default values in the request must
                have the same type."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field, a context, an option, or a cascading
            option is not found.
          content:
            application/json:
              example: '{"errorMessages":["The context was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field.default-value:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /screens/{screenId}/tabs:
    get:
      tags:
      - Screen tabs
      summary: Get all screen tabs
      description: |-
        Returns the list of tabs for a screen.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
         *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme.
      operationId: getAllScreenTabs
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: projectKey
        in: query
        description: The key of the project
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScreenableTab'
        '400':
          description: Returned if the screen ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:screen-tab:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Screen tabs
      summary: Create screen tab
      description: |-
        Creates a tab for a screen.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addScreenTab
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenableTab'
            example:
              name: Fields Tab
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenableTab'
              example: '{"id":10000,"name":"Fields Tab"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:screen-tab:jira
        - write:screen-tab:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{fieldKey}/option/{optionId}/issue:
    delete:
      tags:
      - Issue custom field options (apps)
      summary: Replace issue field option
      description: |-
        Deselects an issue-field select-list option from all issues where it is selected. A different option can be selected to replace the deselected option. The update can also be limited to a smaller set of issues by using a JQL query.

        Connect and Forge app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) can override the screen security configuration using `overrideScreenSecurity` and `overrideEditableFlag`.

        This is an [asynchronous operation](#async). The response object contains a link to the long-running task.

        Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
      operationId: replaceIssueFieldOption
      parameters:
      - name: replaceWith
        in: query
        description: The ID of the option that will replace the currently selected
          option
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: jql
        in: query
        description: A JQL query that specifies the issues to be updated. For example,
          *project=10000*
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: overrideScreenSecurity
        in: query
        description: Whether screen security is overridden to enable hidden fields
          to be edited. Available to Connect and Forge app users with admin permission
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: overrideEditableFlag
        in: query
        description: Whether screen security is overridden to enable uneditable fields
          to be edited. Available to Connect and Forge app users with *Administer
          Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: fieldKey
        in: path
        description: |-
          The field key is specified in the following format: **$(app-key)\_\_$(field-key)**. For example, *example-add-on\_\_example-issue-field*. To determine the `fieldKey` value, do one of the following:

           *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
           *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: optionId
        in: path
        description: The ID of the option to be deselected
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '303':
          description: Returned if the long-running task to deselect the option is
            started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanRemoveOptionFromIssuesResult'
              example: '{"self":"https://your-domain.atlassian.net/rest/api/3/task/1","id":"1","description":"Remove
                option 1 from issues matched by ''*'', and replace with option 3","status":"COMPLETE","result":{"errors":{"errorMessages":["Option
                2 cannot be set on issue MKY-5 as it is not in the correct scope"],"errors":{},"httpStatusCode":{"empty":false,"present":true}},"modifiedIssues":[10001,10010],"unmodifiedIssues":[10005]},"elapsedRuntime":42}'
        '400':
          description: Returned if the request is not valid.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Connect and Forge app users with Administer
                Jira global permission can override screen security."],"errors":{}}'
        '404':
          description: Returned if the field is not found or does not support options,
            or the options to be replaced are not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field.option:jira
        - delete:field.option:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /workflowscheme/{id}/draft/workflow:
    get:
      tags:
      - Workflow scheme drafts
      summary: Get issue types for workflows in draft workflow scheme
      description: |-
        Returns the workflow-issue type mappings for a workflow scheme's draft.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getDraftWorkflow
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: workflowName
        in: query
        description: The name of a workflow in the scheme. Limits the results to the
          workflow-issue type mapping for the specified workflow
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTypesWorkflowMapping'
              example: '{"defaultMapping":false,"issueTypes":["10000","10001"],"workflow":"jira"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if either the workflow scheme or workflow (if specified)
            is not found. session.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:issue-type:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow scheme drafts
      summary: Set issue types for workflow in workflow scheme
      description: |-
        Sets the issue types for a workflow in a workflow scheme's draft. The workflow can also be set as the default workflow for the draft workflow scheme. Unmapped issues types are mapped to the default workflow.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateDraftWorkflowMapping
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: workflowName
        in: query
        description: The name of the workflow
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypesWorkflowMapping'
            example:
              issueTypes:
              - '10000'
              updateDraftIfNeeded: true
              workflow: jira
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"jira","description":"The description of
                the example workflow scheme.","draft":false,"id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if any of the following is true:

             *  The workflow scheme is not found.
             *  The workflow scheme does not have a draft.
             *  The workflow is not found.
             *  The workflow is not specified.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Workflow scheme drafts
      summary: Delete issue types for workflow in draft workflow scheme
      description: |-
        Deletes the workflow-issue type mapping for a workflow in a workflow scheme's draft.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteDraftWorkflowMapping
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: workflowName
        in: query
        description: The name of the workflow
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if any of the following is true:

             *  The workflow scheme is not found.
             *  The workflow scheme does not have a draft.
             *  The workflow is not found.
             *  The workflow is not specified.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/attachments:
    post:
      tags:
      - Issue attachments
      summary: Add attachment
      description: "Adds one or more attachments to an issue. Attachments are posted\
        \ as multipart/form-data ([RFC 1867](https://www.ietf.org/rfc/rfc1867.txt)).\n\
        \nNote that:\n\n *  The request must have a `X-Atlassian-Token: no-check`\
        \ header, if not it is blocked. See [Special headers](#special-request-headers)\
        \ for more information.\n *  The name of the multipart/form-data parameter\
        \ that contains the attachments must be `file`.\n\nThe following examples\
        \ upload a file called *myfile.txt* to the issue *TEST-123*:\n\n#### curl\
        \ ####\n\n    curl --location --request POST 'https://your-domain.atlassian.net/rest/api/3/issue/TEST-123/attachments'\n\
        \     -u 'email@example.com:<api_token>'\n     -H 'X-Atlassian-Token: no-check'\n\
        \     --form 'file=@\"myfile.txt\"'\n\n#### Node.js ####\n\n    // This code\
        \ sample uses the 'node-fetch' and 'form-data' libraries:\n     // https://www.npmjs.com/package/node-fetch\n\
        \     // https://www.npmjs.com/package/form-data\n     const fetch = require('node-fetch');\n\
        \     const FormData = require('form-data');\n     const fs = require('fs');\n\
        \    \n     const filePath = 'myfile.txt';\n     const form = new FormData();\n\
        \     const stats = fs.statSync(filePath);\n     const fileSizeInBytes = stats.size;\n\
        \     const fileStream = fs.createReadStream(filePath);\n    \n     form.append('file',\
        \ fileStream, {knownLength: fileSizeInBytes});\n    \n     fetch('https://your-domain.atlassian.net/rest/api/3/issue/TEST-123/attachments',\
        \ {\n         method: 'POST',\n         body: form,\n         headers: {\n\
        \             'Authorization': `Basic ${Buffer.from(\n                 'email@example.com:'\n\
        \             ).toString('base64')}`,\n             'Accept': 'application/json',\n\
        \             'X-Atlassian-Token': 'no-check'\n         }\n     })\n     \
        \    .then(response => {\n             console.log(\n                 `Response:\
        \ ${response.status} ${response.statusText}`\n             );\n          \
        \   return response.text();\n         })\n         .then(text => console.log(text))\n\
        \         .catch(err => console.error(err));\n\n#### Java ####\n\n    // This\
        \ code sample uses the  'Unirest' library:\n     // http://unirest.io/java.html\n\
        \     HttpResponse response = Unirest.post(\"https://your-domain.atlassian.net/rest/api/2/issue/{issueIdOrKey}/attachments\"\
        )\n             .basicAuth(\"email@example.com\", \"\")\n             .header(\"\
        Accept\", \"application/json\")\n             .header(\"X-Atlassian-Token\"\
        , \"no-check\")\n             .field(\"file\", new File(\"myfile.txt\"))\n\
        \             .asJson();\n    \n             System.out.println(response.getBody());\n\
        \n#### Python ####\n\n    # This code sample uses the 'requests' library:\n\
        \     # http://docs.python-requests.org\n     import requests\n     from requests.auth\
        \ import HTTPBasicAuth\n     import json\n    \n     url = \"https://your-domain.atlassian.net/rest/api/2/issue/{issueIdOrKey}/attachments\"\
        \n    \n     auth = HTTPBasicAuth(\"email@example.com\", \"\")\n    \n   \
        \  headers = {\n        \"Accept\": \"application/json\",\n        \"X-Atlassian-Token\"\
        : \"no-check\"\n     }\n    \n     response = requests.request(\n        \"\
        POST\",\n        url,\n        headers = headers,\n        auth = auth,\n\
        \        files = {\n             \"file\": (\"myfile.txt\", open(\"myfile.txt\"\
        ,\"rb\"), \"application-type\")\n        }\n     )\n    \n     print(json.dumps(json.loads(response.text),\
        \ sort_keys=True, indent=4, separators=(\",\", \": \")))\n\n#### PHP ####\n\
        \n    // This code sample uses the 'Unirest' library:\n     // http://unirest.io/php.html\n\
        \     Unirest\\Request::auth('email@example.com', '');\n    \n     $headers\
        \ = array(\n       'Accept' => 'application/json',\n       'X-Atlassian-Token'\
        \ => 'no-check'\n     );\n    \n     $parameters = array(\n       'file' =>\
        \ File::add('myfile.txt')\n     );\n    \n     $response = Unirest\\Request::post(\n\
        \       'https://your-domain.atlassian.net/rest/api/2/issue/{issueIdOrKey}/attachments',\n\
        \       $headers,\n       $parameters\n     );\n    \n     var_dump($response)\n\
        \n#### Forge ####\n\n    // This sample uses Atlassian Forge and the `form-data`\
        \ library.\n     // https://developer.atlassian.com/platform/forge/\n    \
        \ // https://www.npmjs.com/package/form-data\n     import api from \"@forge/api\"\
        ;\n     import FormData from \"form-data\";\n    \n     const form = new FormData();\n\
        \     form.append('file', fileStream, {knownLength: fileSizeInBytes});\n \
        \   \n     const response = await api.asApp().requestJira('/rest/api/2/issue/{issueIdOrKey}/attachments',\
        \ {\n         method: 'POST',\n         body: form,\n         headers: {\n\
        \             'Accept': 'application/json',\n             'X-Atlassian-Token':\
        \ 'no-check'\n         }\n     });\n    \n     console.log(`Response: ${response.status}\
        \ ${response.statusText}`);\n     console.log(await response.json());\n\n\
        Tip: Use a client library. Many client libraries have classes for handling\
        \ multipart POST operations. For example, in Java, the Apache HTTP Components\
        \ library provides a [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html)\
        \ class for multipart POST operations.\n\nThis operation can be accessed anonymously.\n\
        \n**[Permissions](#permissions) required:** \n\n *  *Browse Projects* and\
        \ *Create attachments* [ project permission](https://confluence.atlassian.com/x/yodKLg)\
        \ for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg)\
        \ is configured, issue-level security permission to view the issue."
      operationId: addAttachment
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue that attachments are added to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MultipartFile'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
              example: '[{"author":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"content":"https://your-domain.atlassian.net/rest/api/3/attachment/content/10000","created":1651316514000,"filename":"picture.jpg","id":"10001","mimeType":"image/jpeg","self":"https://your-domain.atlassian.net/rest/api/3/attachments/10000","size":23123,"thumbnail":"https://your-domain.atlassian.net/rest/api/3/attachment/thumbnail/10000"},{"author":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"content":"https://your-domain.atlassian.net/rest/api/3/attachment/content/10001","created":1658898511000,"filename":"dbeuglog.txt","mimeType":"text/plain","self":"https://your-domain.atlassian.net/rest/api/3/attachments/10001","size":2460}]'
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if any of the following is true:

             *  the issue is not found.
             *  the user does not have permission to view the issue.
        '413':
          description: |-
            Returned if any of the following is true:

             *  the attachments exceed the maximum attachment size for issues.
             *  more than 60 files are requested to be uploaded.
             *  the per-issue limit for attachments has been breached.

            See [Configuring file attachments](https://confluence.atlassian.com/x/wIXKM) for details.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - write:attachment:jira
        - read:attachment:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /projectCategory:
    get:
      tags:
      - Project categories
      summary: Get all project categories
      description: |-
        Returns all project categories.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getAllProjectCategories
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectCategory'
              example: '[{"description":"First Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},{"description":"Second
                Project Category","id":"10001","name":"SECOND","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10001"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Project categories
      summary: Create project category
      description: |-
        Creates a project category.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createProjectCategory
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCategory'
            example:
              description: Created Project Category
              name: CREATED
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCategory'
              example: '{"description":"Created Project Category","id":"10100","name":"CREATED","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10100"}'
        '400':
          description: |-
            Returned if:

             *  `name` is not provided or exceeds 255 characters.
             *  `description` exceeds 1000 characters.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '409':
          description: Returned if the project category name is in use.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project-category:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/changelog:
    get:
      tags:
      - Issues
      summary: Get changelogs
      description: |-
        Returns a [paginated](#pagination) list of all changelogs for an issue sorted by date, starting from the oldest.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getChangeLogs
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanChangelog'
              example: '{"isLast":false,"maxResults":2,"nextPage":"https://your-domain.atlassian.net/rest/api/3/issue/TT-1/changelog?&startAt=4&maxResults=2","self":"https://your-domain.atlassian.net/rest/api/3/issue/TT-1/changelog?startAt=2&maxResults=2","startAt":2,"total":5,"values":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"created":"1970-01-18T06:27:50.429+0000","id":"10001","items":[{"field":"fields","fieldtype":"jira","fieldId":"fieldId","from":null,"fromString":"","to":null,"toString":"label-1"}]},{"author":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"created":"1970-01-18T06:27:51.429+0000","id":"10002","items":[{"field":"fields","fieldtype":"jira","fieldId":"fieldId","from":null,"fromString":"label-1","to":null,"toString":"label-1
                label-2"}]}]}'
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-meta:jira
        - read:avatar:jira
        - read:issue.changelog:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /workflow:
    get:
      tags:
      - Workflows
      summary: Get all workflows
      description: |-
        This will be removed on [February 1, 2026](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2567); use [Search workflows](#api-rest-api-3-workflows-search-get) instead.

        Returns all workflows in Jira or a workflow.

        If the `workflowName` parameter is specified, the workflow is returned as an object (not in an array). Otherwise, an array of workflow objects is returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAllWorkflows
      parameters:
      - name: workflowName
        in: query
        description: The name of the workflow to be returned. Only one workflow can
          be specified
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedWorkflow'
              example: '[{"default":true,"description":"A classic Jira workflow","lastModifiedDate":"01-01-2011","lastModifiedUser":"admin","lastModifiedUserAccountId":"5b10a2844c20165700ede21g","name":"classic
                workflow","steps":5}]'
        '401':
          description: Returned if the user does not have the necessary permission.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow:jira
        - read:project:jira
        - read:project-category:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Workflows
      summary: Create workflow
      description: "This will be removed on [February 1, 2026](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2568);\
        \ use [Bulk create workflows](#api-rest-api-3-workflows-create-post) to create\
        \ both team and company-managed scoped workflows.\n\nCreates a workflow. You\
        \ can define transition rules using the shapes detailed in the following sections.\
        \ If no transitional rules are specified the default system transition rules\
        \ are used. Note: This only applies to company-managed scoped workflows.\n\
        \n#### Conditions ####\n\nConditions enable workflow rules that govern whether\
        \ a transition can execute.\n\n##### Always false condition #####\n\nA condition\
        \ that always fails.\n\n    {\n       \"type\": \"AlwaysFalseCondition\"\n\
        \     }\n\n##### Block transition until approval #####\n\nA condition that\
        \ blocks issue transition if there is a pending approval.\n\n    {\n     \
        \  \"type\": \"BlockInProgressApprovalCondition\"\n     }\n\n##### Compare\
        \ number custom field condition #####\n\nA condition that allows transition\
        \ if a comparison between a number custom field and a value is true.\n\n \
        \   {\n       \"type\": \"CompareNumberCFCondition\",\n       \"configuration\"\
        : {\n         \"comparator\": \"=\",\n         \"fieldId\": \"customfield_10029\"\
        ,\n         \"fieldValue\": 2\n       }\n     }\n\n *  `comparator` One of\
        \ the supported comparator: `=`, `>`, and `<`.\n *  `fieldId` The custom numeric\
        \ field ID. Allowed field types:\n    \n     *  `com.atlassian.jira.plugin.system.customfieldtypes:float`\n\
        \     *  `com.pyxis.greenhopper.jira:jsw-story-points`\n *  `fieldValue` The\
        \ value for comparison.\n\n##### Hide from user condition #####\n\nA condition\
        \ that hides a transition from users. The transition can only be triggered\
        \ from a workflow function or REST API operation.\n\n    {\n       \"type\"\
        : \"RemoteOnlyCondition\"\n     }\n\n##### Only assignee condition #####\n\
        \nA condition that allows only the assignee to execute a transition.\n\n \
        \   {\n       \"type\": \"AllowOnlyAssignee\"\n     }\n\n##### Only Bamboo\
        \ notifications workflow condition (deprecated) #####\n\nA condition that\
        \ makes the transition available only to Bamboo build notifications.\n\n \
        \   {\n       \"type\": \"OnlyBambooNotificationsCondition\"\n     }\n\n#####\
        \ Only reporter condition #####\n\nA condition that allows only the reporter\
        \ to execute a transition.\n\n    {\n       \"type\": \"AllowOnlyReporter\"\
        \n     }\n\n##### Permission condition #####\n\nA condition that allows only\
        \ users with a permission to execute a transition.\n\n    {\n       \"type\"\
        : \"PermissionCondition\",\n       \"configuration\": {\n           \"permissionKey\"\
        : \"BROWSE_PROJECTS\"\n       }\n     }\n\n *  `permissionKey` The permission\
        \ required to perform the transition. Allowed values: [built-in](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-permission-schemes/#built-in-permissions)\
        \ or app defined permissions.\n\n##### Previous status condition #####\n\n\
        A condition that allows a transition based on whether an issue has or has\
        \ not transitioned through a status.\n\n    {\n       \"type\": \"PreviousStatusCondition\"\
        ,\n       \"configuration\": {\n         \"ignoreLoopTransitions\": true,\n\
        \         \"includeCurrentStatus\": true,\n         \"mostRecentStatusOnly\"\
        : true,\n         \"reverseCondition\": true,\n         \"previousStatus\"\
        : {\n           \"id\": \"5\"\n         }\n       }\n     }\n\nBy default\
        \ this condition allows the transition if the status, as defined by its ID\
        \ in the `previousStatus` object, matches any previous issue status, unless:\n\
        \n *  `ignoreLoopTransitions` is `true`, then loop transitions (from and to\
        \ the same status) are ignored.\n *  `includeCurrentStatus` is `true`, then\
        \ the current issue status is also checked.\n *  `mostRecentStatusOnly` is\
        \ `true`, then only the issue's preceding status (the one immediately before\
        \ the current status) is checked.\n *  `reverseCondition` is `true`, then\
        \ the status must not be present.\n\n##### Separation of duties condition\
        \ #####\n\nA condition that prevents a user to perform the transition, if\
        \ the user has already performed a transition on the issue.\n\n    {\n   \
        \    \"type\": \"SeparationOfDutiesCondition\",\n       \"configuration\"\
        : {\n         \"fromStatus\": {\n           \"id\": \"5\"\n         },\n \
        \        \"toStatus\": {\n           \"id\": \"6\"\n         }\n       }\n\
        \     }\n\n *  `fromStatus` OPTIONAL. An object containing the ID of the source\
        \ status of the transition that is blocked. If omitted any transition to `toStatus`\
        \ is blocked.\n *  `toStatus` An object containing the ID of the target status\
        \ of the transition that is blocked.\n\n##### Subtask blocking condition #####\n\
        \nA condition that blocks transition on a parent issue if any of its subtasks\
        \ are in any of one or more statuses.\n\n    {\n       \"type\": \"SubTaskBlockingCondition\"\
        ,\n       \"configuration\": {\n         \"statuses\": [\n           {\n \
        \            \"id\": \"1\"\n           },\n           {\n             \"id\"\
        : \"3\"\n           }\n         ]\n       }\n     }\n\n *  `statuses` A list\
        \ of objects containing status IDs.\n\n##### User is in any group condition\
        \ #####\n\nA condition that allows users belonging to any group from a list\
        \ of groups to execute a transition.\n\n    {\n       \"type\": \"UserInAnyGroupCondition\"\
        ,\n       \"configuration\": {\n         \"groups\": [\n           \"administrators\"\
        ,\n           \"atlassian-addons-admin\"\n         ]\n       }\n     }\n\n\
        \ *  `groups` A list of group names.\n\n##### User is in any project role\
        \ condition #####\n\nA condition that allows only users with at least one\
        \ project roles from a list of project roles to execute a transition.\n\n\
        \    {\n       \"type\": \"InAnyProjectRoleCondition\",\n       \"configuration\"\
        : {\n         \"projectRoles\": [\n           {\n             \"id\": \"10002\"\
        \n           },\n           {\n             \"id\": \"10003\"\n          \
        \ },\n           {\n             \"id\": \"10012\"\n           },\n      \
        \     {\n             \"id\": \"10013\"\n           }\n         ]\n      \
        \ }\n     }\n\n *  `projectRoles` A list of objects containing project role\
        \ IDs.\n\n##### User is in custom field condition #####\n\nA condition that\
        \ allows only users listed in a given custom field to execute the transition.\n\
        \n    {\n       \"type\": \"UserIsInCustomFieldCondition\",\n       \"configuration\"\
        : {\n         \"allowUserInField\": false,\n         \"fieldId\": \"customfield_10010\"\
        \n       }\n     }\n\n *  `allowUserInField` If `true` only a user who is\
        \ listed in `fieldId` can perform the transition, otherwise, only a user who\
        \ is not listed in `fieldId` can perform the transition.\n *  `fieldId` The\
        \ ID of the field containing the list of users.\n\n##### User is in group\
        \ condition #####\n\nA condition that allows users belonging to a group to\
        \ execute a transition.\n\n    {\n       \"type\": \"UserInGroupCondition\"\
        ,\n       \"configuration\": {\n         \"group\": \"administrators\"\n \
        \      }\n     }\n\n *  `group` The name of the group.\n\n##### User is in\
        \ group custom field condition #####\n\nA condition that allows users belonging\
        \ to a group specified in a custom field to execute a transition.\n\n    {\n\
        \       \"type\": \"InGroupCFCondition\",\n       \"configuration\": {\n \
        \        \"fieldId\": \"customfield_10012\"\n       }\n     }\n\n *  `fieldId`\
        \ The ID of the field. Allowed field types:\n    \n     *  `com.atlassian.jira.plugin.system.customfieldtypes:multigrouppicker`\n\
        \     *  `com.atlassian.jira.plugin.system.customfieldtypes:grouppicker`\n\
        \     *  `com.atlassian.jira.plugin.system.customfieldtypes:select`\n    \
        \ *  `com.atlassian.jira.plugin.system.customfieldtypes:multiselect`\n   \
        \  *  `com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons`\n \
        \    *  `com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes`\n\
        \     *  `com.pyxis.greenhopper.jira:gh-epic-status`\n\n##### User is in project\
        \ role condition #####\n\nA condition that allows users with a project role\
        \ to execute a transition.\n\n    {\n       \"type\": \"InProjectRoleCondition\"\
        ,\n       \"configuration\": {\n         \"projectRole\": {\n           \"\
        id\": \"10002\"\n         }\n       }\n     }\n\n *  `projectRole` An object\
        \ containing the ID of a project role.\n\n##### Value field condition #####\n\
        \nA conditions that allows a transition to execute if the value of a field\
        \ is equal to a constant value or simply set.\n\n    {\n       \"type\": \"\
        ValueFieldCondition\",\n       \"configuration\": {\n         \"fieldId\"\
        : \"assignee\",\n         \"fieldValue\": \"qm:6e1ecee6-8e64-4db6-8c85-916bb3275f51:54b56885-2bd2-4381-8239-78263442520f\"\
        ,\n         \"comparisonType\": \"NUMBER\",\n         \"comparator\": \"=\"\
        \n       }\n     }\n\n *  `fieldId` The ID of a field used in the comparison.\n\
        \ *  `fieldValue` The expected value of the field.\n *  `comparisonType` The\
        \ type of the comparison. Allowed values: `STRING`, `NUMBER`, `DATE`, `DATE_WITHOUT_TIME`,\
        \ or `OPTIONID`.\n *  `comparator` One of the supported comparator: `>`, `>=`,\
        \ `=`, `<=`, `<`, `!=`.\n\n**Notes:**\n\n *  If you choose the comparison\
        \ type `STRING`, only `=` and `!=` are valid options.\n *  You may leave `fieldValue`\
        \ empty when comparison type is `!=` to indicate that a value is required\
        \ in the field.\n *  For date fields without time format values as `yyyy-MM-dd`,\
        \ and for those with time as `yyyy-MM-dd HH:mm`. For example, for July 16\
        \ 2021 use `2021-07-16`, for 8:05 AM use `2021-07-16 08:05`, and for 4 PM:\
        \ `2021-07-16 16:00`.\n\n#### Validators ####\n\nValidators check that any\
        \ input made to the transition is valid before the transition is performed.\n\
        \n##### Date field validator #####\n\nA validator that compares two dates.\n\
        \n    {\n       \"type\": \"DateFieldValidator\",\n       \"configuration\"\
        : {\n           \"comparator\": \">\",\n           \"date1\": \"updated\"\
        ,\n           \"date2\": \"created\",\n           \"expression\": \"1d\",\n\
        \           \"includeTime\": true\n         }\n     }\n\n *  `comparator`\
        \ One of the supported comparator: `>`, `>=`, `=`, `<=`, `<`, or `!=`.\n *\
        \  `date1` The date field to validate. Allowed field types:\n    \n     *\
        \  `com.atlassian.jira.plugin.system.customfieldtypes:datepicker`\n     *\
        \  `com.atlassian.jira.plugin.system.customfieldtypes:datetime`\n     *  `com.atlassian.jpo:jpo-custom-field-baseline-end`\n\
        \     *  `com.atlassian.jpo:jpo-custom-field-baseline-start`\n     *  `duedate`\n\
        \     *  `created`\n     *  `updated`\n     *  `resolutiondate`\n *  `date2`\
        \ The second date field. Required, if `expression` is not passed. Allowed\
        \ field types:\n    \n     *  `com.atlassian.jira.plugin.system.customfieldtypes:datepicker`\n\
        \     *  `com.atlassian.jira.plugin.system.customfieldtypes:datetime`\n  \
        \   *  `com.atlassian.jpo:jpo-custom-field-baseline-end`\n     *  `com.atlassian.jpo:jpo-custom-field-baseline-start`\n\
        \     *  `duedate`\n     *  `created`\n     *  `updated`\n     *  `resolutiondate`\n\
        \ *  `expression` An expression specifying an offset. Required, if `date2`\
        \ is not passed. Offsets are built with a number, with `-` as prefix for the\
        \ past, and one of these time units: `d` for day, `w` for week, `m` for month,\
        \ or `y` for year. For example, -2d means two days into the past and 1w means\
        \ one week into the future. The `now` keyword enables a comparison with the\
        \ current date.\n *  `includeTime` If `true`, then the time part of the data\
        \ is included for the comparison. If the field doesn't have a time part, 00:00:00\
        \ is used.\n\n##### Windows date validator #####\n\nA validator that checks\
        \ that a date falls on or after a reference date and before or on the reference\
        \ date plus a number of days.\n\n    {\n       \"type\": \"WindowsDateValidator\"\
        ,\n       \"configuration\": {\n           \"date1\": \"customfield_10009\"\
        ,\n           \"date2\": \"created\",\n           \"windowsDays\": 5\n   \
        \      }\n     }\n\n *  `date1` The date field to validate. Allowed field\
        \ types:\n    \n     *  `com.atlassian.jira.plugin.system.customfieldtypes:datepicker`\n\
        \     *  `com.atlassian.jira.plugin.system.customfieldtypes:datetime`\n  \
        \   *  `com.atlassian.jpo:jpo-custom-field-baseline-end`\n     *  `com.atlassian.jpo:jpo-custom-field-baseline-start`\n\
        \     *  `duedate`\n     *  `created`\n     *  `updated`\n     *  `resolutiondate`\n\
        \ *  `date2` The reference date. Allowed field types:\n    \n     *  `com.atlassian.jira.plugin.system.customfieldtypes:datepicker`\n\
        \     *  `com.atlassian.jira.plugin.system.customfieldtypes:datetime`\n  \
        \   *  `com.atlassian.jpo:jpo-custom-field-baseline-end`\n     *  `com.atlassian.jpo:jpo-custom-field-baseline-start`\n\
        \     *  `duedate`\n     *  `created`\n     *  `updated`\n     *  `resolutiondate`\n\
        \ *  `windowsDays` A positive integer indicating a number of days.\n\n#####\
        \ Field required validator #####\n\nA validator that checks fields are not\
        \ empty. By default, if a field is not included in the current context it's\
        \ ignored and not validated.\n\n    {\n         \"type\": \"FieldRequiredValidator\"\
        ,\n         \"configuration\": {\n             \"ignoreContext\": true,\n\
        \             \"errorMessage\": \"Hey\",\n             \"fieldIds\": [\n \
        \                \"versions\",\n                 \"customfield_10037\",\n\
        \                 \"customfield_10003\"\n             ]\n         }\n    \
        \ }\n\n *  `ignoreContext` If `true`, then the context is ignored and all\
        \ the fields are validated.\n *  `errorMessage` OPTIONAL. The error message\
        \ displayed when one or more fields are empty. A default error message is\
        \ shown if an error message is not provided.\n *  `fieldIds` The list of fields\
        \ to validate.\n\n##### Field changed validator #####\n\nA validator that\
        \ checks that a field value is changed. However, this validation can be ignored\
        \ for users from a list of groups.\n\n    {\n         \"type\": \"FieldChangedValidator\"\
        ,\n         \"configuration\": {\n             \"fieldId\": \"comment\",\n\
        \             \"errorMessage\": \"Hey\",\n             \"exemptedGroups\"\
        : [\n                 \"administrators\",\n                 \"atlassian-addons-admin\"\
        \n             ]\n         }\n     }\n\n *  `fieldId` The ID of a field.\n\
        \ *  `errorMessage` OPTIONAL. The error message displayed if the field is\
        \ not changed. A default error message is shown if the error message is not\
        \ provided.\n *  `exemptedGroups` OPTIONAL. The list of groups.\n\n##### Field\
        \ has single value validator #####\n\nA validator that checks that a multi-select\
        \ field has only one value. Optionally, the validation can ignore values copied\
        \ from subtasks.\n\n    {\n         \"type\": \"FieldHasSingleValueValidator\"\
        ,\n         \"configuration\": {\n             \"fieldId\": \"attachment,\n\
        \             \"excludeSubtasks\": true\n         }\n     }\n\n *  `fieldId`\
        \ The ID of a field.\n *  `excludeSubtasks` If `true`, then values copied\
        \ from subtasks are ignored.\n\n##### Parent status validator #####\n\nA validator\
        \ that checks the status of the parent issue of a subtask. Ìf the issue is\
        \ not a subtask, no validation is performed.\n\n    {\n         \"type\":\
        \ \"ParentStatusValidator\",\n         \"configuration\": {\n            \
        \ \"parentStatuses\": [\n                 {\n                   \"id\":\"\
        1\"\n                 },\n                 {\n                   \"id\":\"\
        2\"\n                 }\n             ]\n         }\n     }\n\n *  `parentStatus`\
        \ The list of required parent issue statuses.\n\n##### Permission validator\
        \ #####\n\nA validator that checks the user has a permission.\n\n    {\n \
        \      \"type\": \"PermissionValidator\",\n       \"configuration\": {\n \
        \          \"permissionKey\": \"ADMINISTER_PROJECTS\"\n       }\n     }\n\n\
        \ *  `permissionKey` The permission required to perform the transition. Allowed\
        \ values: [built-in](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-permission-schemes/#built-in-permissions)\
        \ or app defined permissions.\n\n##### Previous status validator #####\n\n\
        A validator that checks if the issue has held a status.\n\n    {\n       \"\
        type\": \"PreviousStatusValidator\",\n       \"configuration\": {\n      \
        \     \"mostRecentStatusOnly\": false,\n           \"previousStatus\": {\n\
        \               \"id\": \"15\"\n           }\n       }\n     }\n\n *  `mostRecentStatusOnly`\
        \ If `true`, then only the issue's preceding status (the one immediately before\
        \ the current status) is checked.\n *  `previousStatus` An object containing\
        \ the ID of an issue status.\n\n##### Regular expression validator #####\n\
        \nA validator that checks the content of a field against a regular expression.\n\
        \n    {\n       \"type\": \"RegexpFieldValidator\",\n       \"configuration\"\
        : {\n           \"regExp\": \"[0-9]\",\n           \"fieldId\": \"customfield_10029\"\
        \n       }\n     }\n\n *  `regExp`A regular expression.\n *  `fieldId` The\
        \ ID of a field. Allowed field types:\n    \n     *  `com.atlassian.jira.plugin.system.customfieldtypes:select`\n\
        \     *  `com.atlassian.jira.plugin.system.customfieldtypes:multiselect`\n\
        \     *  `com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons`\n\
        \     *  `com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes`\n\
        \     *  `com.atlassian.jira.plugin.system.customfieldtypes:textarea`\n  \
        \   *  `com.atlassian.jira.plugin.system.customfieldtypes:textfield`\n   \
        \  *  `com.atlassian.jira.plugin.system.customfieldtypes:url`\n     *  `com.atlassian.jira.plugin.system.customfieldtypes:float`\n\
        \     *  `com.pyxis.greenhopper.jira:jsw-story-points`\n     *  `com.pyxis.greenhopper.jira:gh-epic-status`\n\
        \     *  `description`\n     *  `summary`\n\n##### User permission validator\
        \ #####\n\nA validator that checks if a user has a permission. Obsolete. You\
        \ may encounter this validator when getting transition rules and can pass\
        \ it when updating or creating rules, for example, when you want to duplicate\
        \ the rules from a workflow on a new workflow.\n\n    {\n         \"type\"\
        : \"UserPermissionValidator\",\n         \"configuration\": {\n          \
        \   \"permissionKey\": \"BROWSE_PROJECTS\",\n             \"nullAllowed\"\
        : false,\n             \"username\": \"TestUser\"\n         }\n     }\n\n\
        \ *  `permissionKey` The permission to be validated. Allowed values: [built-in](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-permission-schemes/#built-in-permissions)\
        \ or app defined permissions.\n *  `nullAllowed` If `true`, allows the transition\
        \ when `username` is empty.\n *  `username` The username to validate against\
        \ the `permissionKey`.\n\n#### Post functions ####\n\nPost functions carry\
        \ out any additional processing required after a Jira workflow transition\
        \ is executed.\n\n##### Fire issue event function #####\n\nA post function\
        \ that fires an event that is processed by the listeners.\n\n    {\n     \
        \  \"type\": \"FireIssueEventFunction\",\n       \"configuration\": {\n  \
        \       \"event\": {\n           \"id\":\"1\"\n         }\n       }\n    \
        \ }\n\n**Note:** If provided, this post function overrides the default `FireIssueEventFunction`.\
        \ Can be included once in a transition.\n\n *  `event` An object containing\
        \ the ID of the issue event.\n\n##### Update issue status #####\n\nA post\
        \ function that sets issue status to the linked status of the destination\
        \ workflow status.\n\n    {\n       \"type\": \"UpdateIssueStatusFunction\"\
        \n     }\n\n**Note:** This post function is a default function in global and\
        \ directed transitions. It can only be added to the initial transition and\
        \ can only be added once.\n\n##### Create comment #####\n\nA post function\
        \ that adds a comment entered during the transition to an issue.\n\n    {\n\
        \       \"type\": \"CreateCommentFunction\"\n     }\n\n**Note:** This post\
        \ function is a default function in global and directed transitions. It can\
        \ only be added to the initial transition and can only be added once.\n\n\
        ##### Store issue #####\n\nA post function that stores updates to an issue.\n\
        \n    {\n       \"type\": \"IssueStoreFunction\"\n     }\n\n**Note:** This\
        \ post function can only be added to the initial transition and can only be\
        \ added once.\n\n##### Assign to current user function #####\n\nA post function\
        \ that assigns the issue to the current user if the current user has the `ASSIGNABLE_USER`\
        \ permission.\n\n    {\n         \"type\": \"AssignToCurrentUserFunction\"\
        \n     }\n\n**Note:** This post function can be included once in a transition.\n\
        \n##### Assign to lead function #####\n\nA post function that assigns the\
        \ issue to the project or component lead developer.\n\n    {\n         \"\
        type\": \"AssignToLeadFunction\"\n     }\n\n**Note:** This post function can\
        \ be included once in a transition.\n\n##### Assign to reporter function #####\n\
        \nA post function that assigns the issue to the reporter.\n\n    {\n     \
        \    \"type\": \"AssignToReporterFunction\"\n     }\n\n**Note:** This post\
        \ function can be included once in a transition.\n\n##### Clear field value\
        \ function #####\n\nA post function that clears the value from a field.\n\n\
        \    {\n       \"type\": \"ClearFieldValuePostFunction\",\n       \"configuration\"\
        : {\n         \"fieldId\": \"assignee\"\n       }\n     }\n\n *  `fieldId`\
        \ The ID of the field.\n\n##### Copy value from other field function #####\n\
        \nA post function that copies the value of one field to another, either within\
        \ an issue or from parent to subtask.\n\n    {\n       \"type\": \"CopyValueFromOtherFieldPostFunction\"\
        ,\n       \"configuration\": {\n         \"sourceFieldId\": \"assignee\",\n\
        \         \"destinationFieldId\": \"creator\",\n         \"copyType\": \"\
        same\"\n       }\n     }\n\n *  `sourceFieldId` The ID of the source field.\n\
        \ *  `destinationFieldId` The ID of the destination field.\n *  `copyType`\
        \ Use `same` to copy the value from a field inside the issue, or `parent`\
        \ to copy the value from the parent issue.\n\n##### Create Crucible review\
        \ workflow function (deprecated) #####\n\nA post function that creates a Crucible\
        \ review for all unreviewed code for the issue.\n\n    {\n         \"type\"\
        : \"CreateCrucibleReviewWorkflowFunction\"\n     }\n\n**Note:** This post\
        \ function can be included once in a transition.\n\n##### Set issue security\
        \ level based on user's project role function #####\n\nA post function that\
        \ sets the issue's security level if the current user has a project role.\n\
        \n    {\n       \"type\": \"SetIssueSecurityFromRoleFunction\",\n       \"\
        configuration\": {\n         \"projectRole\": {\n             \"id\":\"10002\"\
        \n         },\n         \"issueSecurityLevel\": {\n             \"id\":\"\
        10000\"\n         }\n       }\n     }\n\n *  `projectRole` An object containing\
        \ the ID of the project role.\n *  `issueSecurityLevel` OPTIONAL. The object\
        \ containing the ID of the security level. If not passed, then the security\
        \ level is set to `none`.\n\n##### Trigger a webhook function #####\n\nA post\
        \ function that triggers a webhook.\n\n    {\n       \"type\": \"TriggerWebhookFunction\"\
        ,\n       \"configuration\": {\n         \"webhook\": {\n           \"id\"\
        : \"1\"\n         }\n       }\n     }\n\n *  `webhook` An object containing\
        \ the ID of the webhook listener to trigger.\n\n##### Update issue custom\
        \ field function #####\n\nA post function that updates the content of an issue\
        \ custom field.\n\n    {\n       \"type\": \"UpdateIssueCustomFieldPostFunction\"\
        ,\n       \"configuration\": {\n         \"mode\": \"append\",\n         \"\
        fieldId\": \"customfield_10003\",\n         \"fieldValue\": \"yikes\"\n  \
        \     }\n     }\n\n *  `mode` Use `replace` to override the field content\
        \ with `fieldValue` or `append` to add `fieldValue` to the end of the field\
        \ content.\n *  `fieldId` The ID of the field.\n *  `fieldValue` The update\
        \ content.\n\n##### Update issue field function #####\n\nA post function that\
        \ updates a simple issue field.\n\n    {\n       \"type\": \"UpdateIssueFieldFunction\"\
        ,\n       \"configuration\": {\n         \"fieldId\": \"assignee\",\n    \
        \     \"fieldValue\": \"5f0c277e70b8a90025a00776\"\n       }\n     }\n\n *\
        \  `fieldId` The ID of the field. Allowed field types:\n    \n     *  `assignee`\n\
        \     *  `description`\n     *  `environment`\n     *  `priority`\n     *\
        \  `resolution`\n     *  `summary`\n     *  `timeoriginalestimate`\n     *\
        \  `timeestimate`\n     *  `timespent`\n *  `fieldValue` The update value.\n\
        \ *  If the `fieldId` is `assignee`, the `fieldValue` should be one of these\
        \ values:\n    \n     *  an account ID.\n     *  `automatic`.\n     *  a blank\
        \ string, which sets the value to `unassigned`.\n\n#### Connect rules ####\n\
        \nConnect rules are conditions, validators, and post functions of a transition\
        \ that are registered by Connect apps. To create a rule registered by the\
        \ app, the app must be enabled and the rule's module must exist.\n\n    {\n\
        \       \"type\": \"appKey__moduleKey\",\n       \"configuration\": {\n  \
        \       \"value\":\"{\\\"isValid\\\":\\\"true\\\"}\"\n       }\n     }\n\n\
        \ *  `type` A Connect rule key in a form of `appKey__moduleKey`.\n *  `value`\
        \ The stringified JSON configuration of a Connect rule.\n\n#### Forge rules\
        \ ####\n\nForge transition rules are not yet supported.\n\n**[Permissions](#permissions)\
        \ required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
      operationId: createWorkflow
      parameters: [
        ]
      requestBody:
        description: The workflow details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowDetails'
            example:
              description: This is a workflow used for Stories and Tasks
              name: Workflow 1
              statuses:
              - id: '1'
                properties:
                  jira.issue.editable: 'false'
              - id: '2'
              - id: '3'
              transitions:
              - from: [
                  ]
                name: Created
                to: '1'
                type: initial
              - from:
                - '1'
                name: In progress
                properties:
                  custom-property: custom-value
                rules:
                  conditions:
                    conditions:
                    - type: RemoteOnlyCondition
                    - configuration:
                        groups:
                        - developers
                        - qa-testers
                      type: UserInAnyGroupCondition
                    operator: AND
                  postFunctions:
                  - type: AssignToCurrentUserFunction
                screen:
                  id: '10001'
                to: '2'
                type: directed
              - name: Completed
                rules:
                  postFunctions:
                  - configuration:
                      fieldId: assignee
                    type: ClearFieldValuePostFunction
                  validators:
                  - configuration:
                      parentStatuses:
                      - id: '3'
                    type: ParentStatusValidator
                  - configuration:
                      permissionKey: ADMINISTER_PROJECTS
                    type: PermissionValidator
                to: '3'
                type: global
        required: true
      responses:
        '201':
          description: Returned if the workflow is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowIDs'
              example: '{"entityId":"d7178e8d-bf6c-4c0c-9e90-758a0b965b67","name":"Workflow
                1"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The request body parameters are missing."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access the
                workflow configuration."],"errors":{}}'
        '404':
          description: Returned if one or more statuses is not found.
          content:
            application/json:
              example: '{"errorMessages":["Status with ID 10000 was not found"],"errors":{}}'
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow:jira
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /forge/1/app/properties/{propertyKey}:
    put:
      tags:
      - App properties
      summary: Set app property (Forge)
      description: |-
        Sets the value of a Forge app's property.
        These values can be retrieved in [Jira expressions](/cloud/jira/platform/jira-expressions/)
        through the `app` [context variable](/cloud/jira/platform/jira-expressions/#context-variables).
        They are also available in [entity property display conditions](/platform/forge/manifest-reference/display-conditions/entity-property-conditions/).

        For other use cases, use the [Storage API](/platform/forge/runtime-reference/storage-api/).

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.

        **[Permissions](#permissions) required:** Only Forge apps can make this request.

        The new `write:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: putForgeAppProperty
      parameters:
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: {
              }
        required: true
      responses:
        '200':
          description: Returned if the property is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Property updated.
                statusCode: 200
        '201':
          description: Returned is the property is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Property created.
                statusCode: 201
        '400':
          description: |-
            Returned if:
              * the property key is longer than 127 characters.
              * the value isn't valid JSON.
              * the value is longer than 32768 characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: The property key can't be longer than 127 characters.
                statusCode: 400
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the request isn't made directly by an app or if
            it's an impersonated request.
          content:
            application/json:
              example:
                errorMessages:
                - Access to this resource must be authenticated as an app.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes:
        - write:app-data:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: INACCESSIBLE
    delete:
      tags:
      - App properties
      summary: Delete app property (Forge)
      description: |-
        Deletes a Forge app's property.

        **[Permissions](#permissions) required:** Only Forge apps can make this request.

        The new `write:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: deleteForgeAppProperty
      parameters:
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the property key is longer than 127 characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: The property key cannot be longer than 127 characters.
                statusCode: 400
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the request isn't made directly by an app or if
            it's an impersonated request.
          content:
            application/json:
              example:
                errorMessages:
                - Access to this resource must be authenticated as an app.
        '404':
          description: Returned if the property isn't found or doesn't belong to the
            app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Property with key not found.
                statusCode: 404
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes:
        - write:app-data:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: INACCESSIBLE
  /customFieldOption/{id}:
    get:
      tags:
      - Issue custom field options
      summary: Get custom field option
      description: |-
        Returns a custom field option. For example, an option in a select list.

        Note that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** The custom field option is returned as follows:

         *  if the user has the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
         *  if the user has the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the custom field is used in, and the field is visible in at least one layout the user has permission to view.
      operationId: getCustomFieldOption
      parameters:
      - name: id
        in: path
        description: The ID of the custom field option
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldOption'
              example: '{"self":"https://your-domain.atlassian.net/rest/api/3/customFieldOption/10000","value":"To
                Do"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the custom field option is not found.
             *  the user does not have permission to view the custom field.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:field.option:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /notificationscheme:
    get:
      tags:
      - Issue notification schemes
      summary: Get notification schemes paginated
      description: |-
        Returns a [paginated](#pagination) list of [notification schemes](https://confluence.atlassian.com/x/8YdKLg) ordered by the display name.

        *Note that you should allow for events without recipients to appear in responses.*

        **[Permissions](#permissions) required:** Permission to access Jira, however, the user must have permission to administer at least one project associated with a notification scheme for it to be returned.
      operationId: getNotificationSchemes
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: id
        in: query
        description: The list of notification schemes IDs to be filtered by
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      - name: projectId
        in: query
        description: The list of projects IDs to be filtered by
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      - name: onlyDefault
        in: query
        description: When set to true, returns only the default notification scheme.
          If you provide project IDs not associated with the default, returns an empty
          page. The default value is false
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `all` Returns all expandable information
           *  `field` Returns information about any custom fields assigned to receive an event
           *  `group` Returns information about any groups assigned to receive an event
           *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information
           *  `projectRole` Returns information about any project roles assigned to receive an event
           *  `user` Returns information about any users assigned to receive an event
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful. Only returns notification
            schemes that the user has permission to access. An empty list is returned
            if the user lacks permission to access all notification schemes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanNotificationScheme'
              example: '{"isLast":false,"maxResults":6,"startAt":1,"total":5,"values":[{"description":"description","expand":"notificationSchemeEvents,user,group,projectRole,field,all","id":10100,"name":"notification
                scheme name","notificationSchemeEvents":[{"event":{"description":"Event
                published when an issue is created","id":1,"name":"Issue created"},"notifications":[{"expand":"group","group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":1,"notificationType":"Group","parameter":"jira-administrators","recipient":"276f955c-63d7-42c8-9520-92d01dca0625"},{"id":2,"notificationType":"CurrentAssignee"},{"expand":"projectRole","id":3,"notificationType":"ProjectRole","parameter":"10360","projectRole":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"}},"recipient":"10360"},{"emailAddress":"rest-developer@atlassian.com","id":4,"notificationType":"EmailAddress","parameter":"rest-developer@atlassian.com","recipient":"rest-developer@atlassian.com"},{"expand":"user","id":5,"notificationType":"User","parameter":"5b10a2844c20165700ede21g","recipient":"5b10a2844c20165700ede21g","user":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}},{"expand":"field","field":{"clauseNames":["cf[10101]","New
                custom field"],"custom":true,"id":"customfield_10101","key":"customfield_10101","name":"New
                custom field","navigable":true,"orderable":true,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:project","customId":10101,"type":"project"},"searchable":true,"untranslatedName":"New
                custom field"},"id":6,"notificationType":"GroupCustomField","parameter":"customfield_10101","recipient":"customfield_10101"}]},{"event":{"description":"Custom
                event that is published together with an issue created event","id":20,"name":"Custom
                event","templateEvent":{"description":"Event published when an issue
                is created","id":1,"name":"Issue created"}},"notifications":[{"expand":"group","group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":1,"notificationType":"Group","parameter":"jira-administrators","recipient":"276f955c-63d7-42c8-9520-92d01dca0625"},{"id":2,"notificationType":"CurrentAssignee"},{"expand":"projectRole","id":3,"notificationType":"ProjectRole","parameter":"10360","projectRole":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"}},"recipient":"10360"},{"emailAddress":"rest-developer@atlassian.com","id":4,"notificationType":"EmailAddress","parameter":"rest-developer@atlassian.com","recipient":"rest-developer@atlassian.com"},{"expand":"user","id":5,"notificationType":"User","parameter":"5b10a2844c20165700ede21g","recipient":"5b10a2844c20165700ede21g","user":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}},{"expand":"field","field":{"clauseNames":["cf[10101]","New
                custom field"],"custom":true,"id":"customfield_10101","key":"customfield_10101","name":"New
                custom field","navigable":true,"orderable":true,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:project","customId":10101,"type":"project"},"searchable":true,"untranslatedName":"New
                custom field"},"id":6,"notificationType":"GroupCustomField","parameter":"customfield_10101","recipient":"customfield_10101"}]}],"projects":[10001,10002],"self":"https://your-domain.atlassian.net/rest/api/3/notificationscheme"}]}'
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              example: '{"errorMessages":["%20. is not a valid value. id must be zero
                or a positive integer."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:notification-scheme:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        - read:group:jira
        - read:project-category:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Issue notification schemes
      summary: Create notification scheme
      description: |-
        Creates a notification scheme with notifications. You can create up to 1000 notifications per request.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createNotificationScheme
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationSchemeDetails'
            example:
              description: My new scheme description
              name: My new notification scheme
              notificationSchemeEvents:
              - event:
                  id: '1'
                notifications:
                - notificationType: Group
                  parameter: jira-administrators
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSchemeId'
              example: '{"id":"10001"}'
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The length of the description must not
                exceed 4000 characters."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /avatar/{type}/system:
    get:
      tags:
      - Avatars
      summary: Get system avatars by type
      description: |-
        Returns a list of system avatar details by owner type, where the owner types are issue type, project, user or priority.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getAllSystemAvatars
      parameters:
      - name: type
        in: path
        description: The avatar type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: project
          enum:
          - issuetype
          - project
          - user
          - priority
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAvatars'
              example: '{"system":[{"id":"1000","isDeletable":false,"isSelected":false,"isSystemAvatar":true,"urls":{"16x16":"/secure/useravatar?size=xsmall&avatarId=10040&avatarType=project","24x24":"/secure/useravatar?size=small&avatarId=10040&avatarType=project","32x32":"/secure/useravatar?size=medium&avatarId=10040&avatarType=project","48x48":"/secure/useravatar?avatarId=10040&avatarType=project"}}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '500':
          description: Returned if an error occurs while retrieving the list of avatars.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /priorityscheme/{schemeId}/projects:
    get:
      tags:
      - Priority schemes
      summary: Get projects by priority scheme
      description: |-
        Returns a [paginated](#pagination) list of projects by scheme.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getProjectsByPriorityScheme
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: projectId
        in: query
        description: The project IDs to filter by. For example, `projectId=10000&projectId=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: schemeId
        in: path
        description: The priority scheme ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: query
        in: query
        description: The string to query projects on by name
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanProject'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":1,"values":[{"avatarUrls":{"16x16":"secure/projectavatar?size=xsmall&pid=10000","24x24":"secure/projectavatar?size=small&pid=10000","32x32":"secure/projectavatar?size=medium&pid=10000","48x48":"secure/projectavatar?size=large&pid=10000"},"id":"10000","key":"EX","name":"Example","projectCategory":{"description":"Project
                category description","id":"10000","name":"A project category"},"projectTypeKey":"ProjectTypeKey{key=''software''}","self":"project/EX","simplified":false}]}'
        '400':
          description: Returned if the request isn't valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: READ
  /app/field/context/configuration/list:
    post:
      tags:
      - Issue custom field configuration (apps)
      summary: Bulk get custom field configurations
      description: |-
        Returns a [paginated](#pagination) list of configurations for list of custom fields of a [type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field-type/) created by a [Forge app](https://developer.atlassian.com/platform/forge/).

        The result can be filtered by one of these criteria:

         *  `id`.
         *  `fieldContextId`.
         *  `issueId`.
         *  `projectKeyOrId` and `issueTypeId`.

        Otherwise, all configurations for the provided list of custom fields are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the Forge app that provided the custom field type.
      operationId: getCustomFieldsConfigurations
      parameters:
      - name: id
        in: query
        description: 'The list of configuration IDs. To include multiple configurations,
          separate IDs with an ampersand: `id=10000&id=10001`. Can''t be provided
          with `fieldContextId`, `issueId`, `projectKeyOrId`, or `issueTypeId`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: fieldContextId
        in: query
        description: 'The list of field context IDs. To include multiple field contexts,
          separate IDs with an ampersand: `fieldContextId=10000&fieldContextId=10001`.
          Can''t be provided with `id`, `issueId`, `projectKeyOrId`, or `issueTypeId`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: issueId
        in: query
        description: The ID of the issue to filter results by. If the issue doesn't
          exist, an empty list is returned. Can't be provided with `projectKeyOrId`,
          or `issueTypeId`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: projectKeyOrId
        in: query
        description: The ID or key of the project to filter results by. Must be provided
          with `issueTypeId`. Can't be provided with `issueId`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: issueTypeId
        in: query
        description: The ID of the issue type to filter results by. Must be provided
          with `projectKeyOrId`. Can't be provided with `issueId`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationsListParameters'
            example:
              fieldIdsOrKeys:
              - customfield_10035
              - customfield_10036
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanBulkContextualConfiguration'
              example: '{"isLast":true,"maxResults":1000,"startAt":0,"total":2,"values":[{"customFieldId":"customfield_10035","fieldContextId":"10010","id":"10000"},{"configuration":{"maxValue":10000,"minValue":0},"customFieldId":"customfield_10036","fieldContextId":"10011","id":"10001","schema":{"properties":{"amount":{"type":"number"},"currency":{"type":"string"}},"required":["amount","currency"]}}]}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user is not a Jira admin or the request is
            not authenticated as from the app that provided the field.
        '404':
          description: Returned if the custom field is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:custom-field-contextual-configuration:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/statuses:
    get:
      tags:
      - Projects
      summary: Get all statuses for project
      description: |-
        Returns the valid statuses for a project. The statuses are grouped by issue type, as each project has a set of valid issue types and each issue type has a set of valid statuses.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getAllStatuses
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueTypeWithStatus'
              example: '[{"id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","statuses":[{"description":"The
                issue is currently being worked on.","iconUrl":"https://your-domain.atlassian.net/images/icons/progress.gif","id":"10000","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/status/10000"},{"description":"The
                issue is closed.","iconUrl":"https://your-domain.atlassian.net/images/icons/closed.gif","id":"5","name":"Closed","self":"https://your-domain.atlassian.net/rest/api/3/status/5"}],"subtask":false}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-status:jira
        - read:issue-type:jira
        - read:status:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /screens/{screenId}/tabs/{tabId}/fields/{id}/move:
    post:
      tags:
      - Screen tab fields
      summary: Move screen tab field
      description: |-
        Moves a screen tab field.

        If `after` and `position` are provided in the request, `position` is ignored.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: moveScreenTabField
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tabId
        in: path
        description: The ID of the screen tab
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        description: The ID of the field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFieldBean'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen, screen tab, or field is not found or
            the field can't be moved to the requested position.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:screenable-field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /statuscategory:
    get:
      tags:
      - Workflow status categories
      summary: Get all status categories
      description: |-
        Returns a list of all status categories.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getStatusCategories
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusCategory'
              example: '[{"colorName":"yellow","id":1,"key":"in-flight","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/1"},{"colorName":"green","id":9,"key":"completed","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/9"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:status:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/search:
    get:
      tags:
      - Projects
      summary: Get projects paginated
      description: |-
        Returns a [paginated](#pagination) list of projects visible to the user.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Projects are returned only where the user has one of:

         *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: searchProjects
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page. Must be less
          than or equal to 100. If a value greater than 100 is provided, the `maxResults`
          parameter will default to 100
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 50
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field.

           *  `category` Sorts by project category. A complete list of category IDs is found using [Get all project categories](#api-rest-api-3-projectCategory-get).
           *  `issueCount` Sorts by the total number of issues in each project.
           *  `key` Sorts by project key.
           *  `lastIssueUpdatedTime` Sorts by the last issue update time.
           *  `name` Sorts by project name.
           *  `owner` Sorts by project lead.
           *  `archivedDate` EXPERIMENTAL. Sorts by project archived date.
           *  `deletedDate` EXPERIMENTAL. Sorts by project deleted date
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - category
          - -category
          - +category
          - key
          - -key
          - +key
          - name
          - -name
          - +name
          - owner
          - -owner
          - +owner
          - issueCount
          - -issueCount
          - +issueCount
          - lastIssueUpdatedDate
          - -lastIssueUpdatedDate
          - +lastIssueUpdatedDate
          - archivedDate
          - +archivedDate
          - -archivedDate
          - deletedDate
          - +deletedDate
          - -deletedDate
          default: key
      - name: id
        in: query
        description: The project IDs to filter the results by. To include multiple
          IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.
          Up to 50 project IDs can be provided
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: keys
        in: query
        description: The project keys to filter the results by. To include multiple
          keys, provide an ampersand-separated list. For example, `keys=PA&keys=PB`.
          Up to 50 project keys can be provided
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      - name: query
        in: query
        description: Filter the results using a literal string. Projects with a matching
          `key` or `name` are returned (case insensitive)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: typeKey
        in: query
        description: Orders results by the [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes).
          This parameter accepts a comma-separated list. Valid values are `business`,
          `service_desk`, and `software`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: categoryId
        in: query
        description: The ID of the project's category. A complete list of category
          IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get)
          operation
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: action
        in: query
        description: "Filter results by projects for which the user can:\n\n *  `view`\
          \ the project, meaning that they have one of the following permissions:\n\
          \    \n     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg)\
          \ for the project.\n     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg)\
          \ for the project.\n     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n\
          \ *  `browse` the project, meaning that they have the *Browse projects*\
          \ [project permission](https://confluence.atlassian.com/x/yodKLg) for the\
          \ project.\n *  `edit` the project, meaning that they have one of the following\
          \ permissions:\n    \n     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg)\
          \ for the project.\n     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n\
          \ *  `create` the project, meaning that they have the *Create issues* [project\
          \ permission](https://confluence.atlassian.com/x/yodKLg) for the project\
          \ in which the issue is created"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - view
          - browse
          - edit
          - create
          default: view
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:

           *  `description` Returns the project description.
           *  `projectKeys` Returns all project keys associated with a project.
           *  `lead` Returns information about the project lead.
           *  `issueTypes` Returns all issue types associated with the project.
           *  `url` Returns the URL associated with the project.
           *  `insight` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: |-
          EXPERIMENTAL. Filter results by project status:

           *  `live` Search live projects.
           *  `archived` Search archived projects.
           *  `deleted` Search deleted projects, those in the recycle bin
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - live
            - archived
            - deleted
            default: live
      - name: properties
        in: query
        description: EXPERIMENTAL. A list of project properties to return for the
          project. This parameter accepts a comma-separated list
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/StringList'
      - name: propertyQuery
        in: query
        description: EXPERIMENTAL. A query string used to search properties. The query
          string cannot be specified using a JSON object. For example, to search for
          the value of `nested` from `{"something":{"nested":1,"other":2}}` use `[thepropertykey].something.nested=1`.
          Note that the propertyQuery key is enclosed in square brackets to enable
          searching where the propertyQuery key includes dot (.) or equals (=) characters.
          Note that `thepropertykey` is only returned when included in `properties`
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanProject'
              example: '{"isLast":false,"maxResults":2,"nextPage":"https://your-domain.atlassian.net/rest/api/3/project/search?startAt=2&maxResults=2","self":"https://your-domain.atlassian.net/rest/api/3/project/search?startAt=0&maxResults=2","startAt":0,"total":7,"values":[{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001"},"id":"10001","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"ABC","name":"Alphabetical","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/ABC","simplified":false,"style":"classic"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if no projects matching the search criteria are found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:project:jira
        - read:project.property:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type-hierarchy:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /permissionscheme:
    get:
      tags:
      - Permission schemes
      summary: Get all permission schemes
      description: |-
        Returns all permission schemes.

        ### About permission schemes and grants ###

        A permission scheme is a collection of permission grants. A permission grant consists of a `holder` and a `permission`.

        #### Holder object ####

        The `holder` object contains information about the user or group being granted the permission. For example, the *Administer projects* permission is granted to a group named *Teams in space administrators*. In this case, the type is `"type": "group"`, and the parameter is the group name, `"parameter": "Teams in space administrators"` and the value is group ID, `"value": "ca85fac0-d974-40ca-a615-7af99c48d24f"`.

        The `holder` object is defined by the following properties:

         *  `type` Identifies the user or group (see the list of types below).
         *  `parameter` As a group's name can change, use of `value` is recommended. The value of this property depends on the `type`. For example, if the `type` is a group, then you need to specify the group name.
         *  `value` The value of this property depends on the `type`. If the `type` is a group, then you need to specify the group ID. For other `type` it has the same value as `parameter`

        The following `types` are available. The expected values for `parameter` and `value` are given in parentheses (some types may not have a `parameter` or `value`):

         *  `anyone` Grant for anonymous users.
         *  `applicationRole` Grant for users with access to the specified application (application name, application name). See [Update product access settings](https://confluence.atlassian.com/x/3YxjL) for more information.
         *  `assignee` Grant for the user currently assigned to an issue.
         *  `group` Grant for the specified group (`parameter` : group name, `value` : group ID).
         *  `groupCustomField` Grant for a user in the group selected in the specified custom field (`parameter` : custom field ID, `value` : custom field ID).
         *  `projectLead` Grant for a project lead.
         *  `projectRole` Grant for the specified project role (`parameter` :project role ID, `value` : project role ID).
         *  `reporter` Grant for the user who reported the issue.
         *  `sd.customer.portal.only` Jira Service Desk only. Grants customers permission to access the customer portal but not Jira. See [Customizing Jira Service Desk permissions](https://confluence.atlassian.com/x/24dKLg) for more information.
         *  `user` Grant for the specified user (`parameter` : user ID - historically this was the userkey but that is deprecated and the account ID should be used, `value` : user ID).
         *  `userCustomField` Grant for a user selected in the specified custom field (`parameter` : custom field ID, `value` : custom field ID).

        #### Built-in permissions ####

        The [built-in Jira permissions](https://confluence.atlassian.com/x/yodKLg) are listed below. Apps can also define custom permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information.

        **Administration permissions**

         *  `ADMINISTER_PROJECTS`
         *  `EDIT_WORKFLOW`
         *  `EDIT_ISSUE_LAYOUT`

        **Project permissions**

         *  `BROWSE_PROJECTS`
         *  `MANAGE_SPRINTS_PERMISSION` (Jira Software only)
         *  `SERVICEDESK_AGENT` (Jira Service Desk only)
         *  `VIEW_DEV_TOOLS` (Jira Software only)
         *  `VIEW_READONLY_WORKFLOW`

        **Issue permissions**

         *  `ASSIGNABLE_USER`
         *  `ASSIGN_ISSUES`
         *  `CLOSE_ISSUES`
         *  `CREATE_ISSUES`
         *  `DELETE_ISSUES`
         *  `EDIT_ISSUES`
         *  `LINK_ISSUES`
         *  `MODIFY_REPORTER`
         *  `MOVE_ISSUES`
         *  `RESOLVE_ISSUES`
         *  `SCHEDULE_ISSUES`
         *  `SET_ISSUE_SECURITY`
         *  `TRANSITION_ISSUES`

        **Voters and watchers permissions**

         *  `MANAGE_WATCHERS`
         *  `VIEW_VOTERS_AND_WATCHERS`

        **Comments permissions**

         *  `ADD_COMMENTS`
         *  `DELETE_ALL_COMMENTS`
         *  `DELETE_OWN_COMMENTS`
         *  `EDIT_ALL_COMMENTS`
         *  `EDIT_OWN_COMMENTS`

        **Attachments permissions**

         *  `CREATE_ATTACHMENTS`
         *  `DELETE_ALL_ATTACHMENTS`
         *  `DELETE_OWN_ATTACHMENTS`

        **Time tracking permissions**

         *  `DELETE_ALL_WORKLOGS`
         *  `DELETE_OWN_WORKLOGS`
         *  `EDIT_ALL_WORKLOGS`
         *  `EDIT_OWN_WORKLOGS`
         *  `WORK_ON_ISSUES`

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getAllPermissionSchemes
      parameters:
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:

           *  `all` Returns all expandable information.
           *  `field` Returns information about the custom field granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `permissions` Returns all permission grants for each permission scheme.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `user` Returns information about the user who is granted the permission
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionSchemes'
              example: '{"permissionSchemes":[{"description":"description","id":10000,"name":"Example
                permission scheme","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission-scheme:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Permission schemes
      summary: Create permission scheme
      description: |-
        Creates a new permission scheme. You can create a permission scheme with or without defining a set of permission grants.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createPermissionScheme
      parameters:
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:

           *  `all` Returns all expandable information.
           *  `field` Returns information about the custom field granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `permissions` Returns all permission grants for each permission scheme.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `user` Returns information about the user who is granted the permission
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The permission scheme to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionScheme'
            example:
              description: description
              name: Example permission scheme
              permissions:
              - holder:
                  parameter: jira-core-users
                  type: group
                  value: ca85fac0-d974-40ca-a615-7af99c48d24f
                permission: ADMINISTER_PROJECTS
        required: true
      responses:
        '201':
          description: Returned if the permission scheme is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionScheme'
              example: '{"description":"description","id":10000,"name":"Example permission
                scheme","permissions":[{"holder":{"expand":"group","parameter":"jira-core-users","type":"group","value":"ca85fac0-d974-40ca-a615-7af99c48d24f"},"id":10000,"permission":"ADMINISTER_PROJECTS","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000"}],"self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or the feature is not available in the Jira plan.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:permission-scheme:jira
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission-scheme:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/archive:
    post:
      tags:
      - Projects
      summary: Archive project
      description: |-
        Archives a project. You can't delete a project if it's archived. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: archiveProject
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permissions.
        '404':
          description: Returned if the project is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/role/{id}:
    get:
      tags:
      - Project roles
      summary: Get project role for project
      description: |-
        Returns a project role's details and actors associated with the project. The list of actors is sorted by display name.

        To check whether a user belongs to a role based on their group memberships, use [Get user](#api-rest-api-3-user-get) with the `groups` expand parameter selected. Then check whether the user keys and groups match with the actors returned for the project.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getProjectRole
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: excludeInactiveUsers
        in: query
        description: Exclude inactive users
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the project or project role is not found.
             *  the user does not have administrative permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project-role:jira
        - read:project:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Project role actors
      summary: Set actors for project role
      description: |-
        Sets the actors for a project role for a project, replacing all existing actors.

        To add actors to the project without overwriting the existing list, use [Add actors to project role](#api-rest-api-3-project-projectIdOrKey-role-id-post).

        **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setActors
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The groups or users to associate with the project role for this
          project. Provide the user account ID, group name, or group ID. As a group's
          name can change, use of group ID is recommended
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRoleActorsUpdateBean'
            example:
              categorisedActors:
                atlassian-group-role-actor-id:
                - 952d12c3-5b5b-4d04-bb32-44d383afc4b2
                atlassian-user-role-actor:
                - 12345678-9abc-def1-2345-6789abcdef12
        required: true
      responses:
        '200':
          description: Returned if the request is successful. The complete list of
            actors for the project is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing or if the calling user lacks administrative permissions for the
            project.
        '404':
          description: |-
            Returned if:

             *  the project is not found.
             *  a user or group is not found.
             *  a group or user is not active.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project-role:jira
        - read:project:jira
        - write:project-role:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
    post:
      tags:
      - Project role actors
      summary: Add actors to project role
      description: |-
        Adds actors to a project role for the project.

        To replace all actors for the project, use [Set actors for project role](#api-rest-api-3-project-projectIdOrKey-role-id-put).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addActorUsers
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The groups or users to associate with the project role for this
          project. Provide the user account ID, group name, or group ID. As a group's
          name can change, use of group ID is recommended
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorsMap'
            example:
              groupId:
              - 952d12c3-5b5b-4d04-bb32-44d383afc4b2
        required: true
      responses:
        '200':
          description: |-
            Returned if the request is successful. The complete list of actors for the project is returned.

            For example, the cURL request above adds a group, *jira-developers*. For the response below to be returned as a result of that request, the user *Mia Krystof* would have previously been added as a `user` actor for this project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing or if the calling user lacks administrative permissions for the
            project.
        '404':
          description: |-
            Returned if:

             *  the project is not found.
             *  the user or group is not found.
             *  the group or user is not active.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project-role:jira
        - read:project:jira
        - write:project-role:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
    delete:
      tags:
      - Project role actors
      summary: Delete actors from project role
      description: |-
        Deletes actors from a project role for the project.

        To remove default actors from the project role, use [Delete default actors from project role](#api-rest-api-3-role-id-actors-delete).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteActor
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: user
        in: query
        description: The user account ID of the user to remove from the project role
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: group
        in: query
        description: The name of the group to remove from the project role. This parameter
          cannot be used with the `groupId` parameter. As a group's name can change,
          use of `groupId` is recommended
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupId
        in: query
        description: The ID of the group to remove from the project role. This parameter
          cannot be used with the `group` parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the request is not valid.
        '404':
          description: |-
            Returned if:

             *  the project or project role is not found.
             *  the calling user does not have administrative permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project-role:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /statuses:
    get:
      tags:
      - Status
      summary: Bulk get statuses
      description: |-
        Returns a list of the statuses specified by one or more status IDs.

        **[Permissions](#permissions) required:**

         *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
         *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
      operationId: getStatusesById
      parameters:
      - name: expand
        in: query
        description: |-
          Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `usages` Returns the project and issue types that use the status in their workflow.
           *  `workflowUsages` Returns the workflows that use the status
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-changes:
        - announced: 2025-02-07T00:00:00Z
          details: https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298
          effective: 2025-07-07T00:00:00Z
          type: removed
      - name: id
        in: query
        description: |-
          The list of status IDs. To include multiple IDs, provide an ampersand-separated list. For example, id=10000&id=10001.

          Min items `1`, Max items `50`
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JiraStatus'
              example: '[{"description":"The issue is resolved","id":"1000","name":"Finished","scope":{"project":{"id":"1"},"type":"PROJECT"},"statusCategory":"DONE","usages":[{"issueTypes":["10002"],"project":{"id":"1"}}],"workflowUsages":[{"workflowId":"545d80a3-91ff-4949-8b0d-a2bc484e70e5","workflowName":"Workflow
                1"}]}]'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Status
      summary: Bulk update statuses
      description: |-
        Updates statuses by ID.

        **[Permissions](#permissions) required:**

         *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
         *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
      operationId: updateStatuses
      parameters: [
        ]
      requestBody:
        description: The list of statuses that will be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdateRequest'
            example:
              statuses:
              - description: The issue is resolved
                id: '1000'
                name: Finished
                statusCategory: DONE
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The name is too long, maxSize=255"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '409':
          description: Returned if another workflow configuration update task is ongoing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Status
      summary: Bulk create statuses
      description: |-
        Creates statuses for a global or project scope.

        **[Permissions](#permissions) required:**

         *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
         *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
      operationId: createStatuses
      parameters: [
        ]
      requestBody:
        description: Details of the statuses being created and their scope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusCreateRequest'
            example:
              scope:
                project:
                  id: '1'
                type: PROJECT
              statuses:
              - description: The issue is resolved
                name: Finished
                statusCategory: DONE
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JiraStatus'
              example: '[{"description":"The issue is resolved","id":"1000","name":"Finished","scope":{"project":{"id":"1"},"type":"PROJECT"},"statusCategory":"DONE","usages":[],"workflowUsages":[]}]'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The name is too long, maxSize=255"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '409':
          description: Returned if another workflow configuration update task is ongoing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Status
      summary: Bulk delete Statuses
      description: |-
        Deletes statuses by ID.

        **[Permissions](#permissions) required:**

         *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
         *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
      operationId: deleteStatusesById
      parameters:
      - name: id
        in: query
        description: |-
          The list of status IDs. To include multiple IDs, provide an ampersand-separated list. For example, id=10000&id=10001.

          Min items `1`, Max items `50`
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The name is too long, maxSize=255"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /bulk/queue/{taskId}:
    get:
      tags:
      - Issue bulk operations
      summary: Get bulk issue operation progress
      description: |-
        Use this to get the progress state for the specified bulk operation `taskId`.

        **[Permissions](#permissions) required:**

         *  Global bulk change [permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-global-permissions/).

        If the task is running, this resource will return:

            {"taskId":"10779","status":"RUNNING","progressPercent":65,"submittedBy":{"accountId":"5b10a2844c20165700ede21g"},"created":1690180055963,"started":1690180056206,"updated":169018005829}

        If the task has completed, then this resource will return:

            {"processedAccessibleIssues":[10001,10002],"created":1709189449954,"progressPercent":100,"started":1709189450154,"status":"COMPLETE","submittedBy":{"accountId":"5b10a2844c20165700ede21g"},"invalidOrInaccessibleIssueCount":0,"taskId":"10000","totalIssueCount":2,"updated":1709189450354}

        **Note:** You can view task progress for up to 14 days from creation.
      operationId: getBulkOperationProgress
      parameters:
      - name: taskId
        in: path
        description: The ID of the task
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationProgress'
              example: '{"created":1704110400000,"invalidOrInaccessibleIssueCount":0,"processedAccessibleIssues":[10001,10002],"progressPercent":100,"started":1704110460000,"status":"COMPLETE","submittedBy":{"accountId":"5b10a2844c20165700ede21g"},"taskId":"10000","totalIssueCount":2,"updated":1704110520000}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
              example: '{"errorMessages":["The task associated with this taskId is
                not a bulk operation task"],"errors":{},"httpStatusCode":{"empty":false,"present":true}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /notificationscheme/{notificationSchemeId}:
    delete:
      tags:
      - Issue notification schemes
      summary: Delete notification scheme
      description: |-
        Deletes a notification scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteNotificationScheme
      parameters:
      - name: notificationSchemeId
        in: path
        description: The ID of the notification scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You can’t delete the default notification
                scheme."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the notification scheme isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Notification scheme with ID 10000 not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /filter/{id}/permission/{permissionId}:
    get:
      tags:
      - Filter sharing
      summary: Get share permission
      description: |-
        Returns a share permission for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None, however, a share permission is only returned for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: getSharePermission
      parameters:
      - name: id
        in: path
        description: The ID of the filter
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: permissionId
        in: path
        description: The ID of the share permission
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharePermission'
              example: '{"id":10000,"type":"global"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the permission is not found.
             *  the user does not have permission to view the filter.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: READ
    delete:
      tags:
      - Filter sharing
      summary: Delete share permission
      description: |-
        Deletes a share permission from a filter.

        **[Permissions](#permissions) required:** Permission to access Jira and the user must own the filter.
      operationId: deleteSharePermission
      parameters:
      - name: id
        in: path
        description: The ID of the filter
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: permissionId
        in: path
        description: The ID of the share permission
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not own the filter.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:filter:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /version/{id}/move:
    post:
      tags:
      - Project versions
      summary: Move version
      description: |-
        Modifies the version's sequence within the project, which affects the display order of the versions in Jira.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* project permission for the project that contains the version.
      operationId: moveVersion
      parameters:
      - name: id
        in: path
        description: The ID of the version to be moved
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionMoveBean'
            example:
              after: https://your-domain.atlassian.net/rest/api/~ver~/version/10000
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
              example: '{"archived":false,"description":"An excellent version","id":"10000","name":"New
                Version 1","overdue":true,"projectId":10000,"releaseDate":"2010-07-06","released":true,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000","userReleaseDate":"6/Jul/2010"}'
        '400':
          description: |-
            Returned if:

             *  no body parameters are provided.
             *  `after` and `position` are provided.
             *  `position` is invalid.
        '401':
          description: |-
            Returned if:

             *  the authentication credentials are incorrect or missing
             *  the user does not have the required commissions.
        '404':
          description: Returned if the version or move after version are not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project-version:jira
        - read:project-version:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /issuetype/project:
    get:
      tags:
      - Issue types
      summary: Get issue types for project
      description: |-
        Returns issue types for a project.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) in the relevant project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueTypesForProject
      parameters:
      - name: projectId
        in: query
        description: The ID of the project
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: level
        in: query
        description: |-
          The level of the issue type to filter by. Use:

           *  `-1` for Subtask.
           *  `0` for Base.
           *  `1` for Epic
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueTypeDetails'
              example: '[{"avatarId":10002,"description":"A problem with the software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false},{"avatarId":1,"description":"A
                task that needs to be done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false}]'
        '400':
          description: Returned if the request is not valid.
        '404':
          description: |-
            Returned if:

             *  the project is not found.
             *  the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /issue/{issueIdOrKey}/transitions:
    get:
      tags:
      - Issues
      summary: Get transitions
      description: |-
        Returns either all transitions or a transition that can be performed by the user on an issue, based on the issue's status.

        Note, if a request is made for a transition that does not exist or cannot be performed on the issue, given its status, the response will return any empty transitions list.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required: A list or transition is returned only when the user has:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.

        However, if the user does not have the *Transition issues* [ project permission](https://confluence.atlassian.com/x/yodKLg) the response will not list any transitions.
      operationId: getTransitions
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          transitions in the response. This parameter accepts `transitions.fields`,
          which returns information about the fields in the transition screen for
          each transition. Fields hidden from the screen are not returned. Use this
          information to populate the `fields` and `update` fields in [Transition
          issue](#api-rest-api-3-issue-issueIdOrKey-transitions-post)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: transitionId
        in: query
        description: The ID of the transition
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: skipRemoteOnlyCondition
        in: query
        description: Whether transitions with the condition *Hide From User Condition*
          are included in the response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: includeUnavailableTransitions
        in: query
        description: Whether details of transitions that fail a condition are included
          in the response
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: sortByOpsBarAndStatus
        in: query
        description: Whether the transitions are sorted by ops-bar sequence value
          first then category order (Todo, In Progress, Done) or only by ops-bar sequence
          value
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transitions'
              example: '{"transitions":[{"fields":{"summary":{"allowedValues":["red","blue"],"defaultValue":"red","hasDefaultValue":false,"key":"field_key","name":"My
                Multi Select","operations":["set","add"],"required":false,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:multiselect","customId":10001,"items":"option","type":"array"}}},"hasScreen":false,"id":"2","isAvailable":true,"isConditional":false,"isGlobal":false,"isInitial":false,"name":"Close
                Issue","to":{"description":"The issue is currently being worked on.","iconUrl":"https://your-domain.atlassian.net/images/icons/progress.gif","id":"10000","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/status/10000","statusCategory":{"colorName":"yellow","id":1,"key":"in-flight","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/1"}}},{"fields":{"summary":{"allowedValues":["red","blue"],"defaultValue":"red","hasDefaultValue":false,"key":"field_key","name":"My
                Multi Select","operations":["set","add"],"required":false,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:multiselect","customId":10001,"items":"option","type":"array"}},"colour":{"allowedValues":["red","blue"],"defaultValue":"red","hasDefaultValue":false,"key":"field_key","name":"My
                Multi Select","operations":["set","add"],"required":false,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:multiselect","customId":10001,"items":"option","type":"array"}}},"hasScreen":true,"id":"711","name":"QA
                Review","to":{"description":"The issue is closed.","iconUrl":"https://your-domain.atlassian.net/images/icons/closed.gif","id":"5","name":"Closed","self":"https://your-domain.atlassian.net/rest/api/3/status/5","statusCategory":{"colorName":"green","id":9,"key":"completed","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/9"}}}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.transition:jira
        - read:status:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issues
      summary: Transition issue
      description: |-
        Performs an issue transition and, if the transition has a screen, updates the fields from the transition screen.

        sortByCategory To update the fields on the transition screen, specify the fields in the `fields` or `update` parameters in the request body. Get details about the fields using [ Get transitions](#api-rest-api-3-issue-issueIdOrKey-transitions-get) with the `transitions.fields` expand.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Transition issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: doTransition
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueUpdateDetails'
            example:
              fields:
                assignee:
                  name: bob
                resolution:
                  name: Fixed
              historyMetadata:
                activityDescription: Complete order processing
                actor:
                  avatarUrl: http://mysystem/avatar/tony.jpg
                  displayName: Tony
                  id: tony
                  type: mysystem-user
                  url: http://mysystem/users/tony
                cause:
                  id: myevent
                  type: mysystem-event
                description: From the order testing process
                extraData:
                  Iteration: 10a
                  Step: '4'
                generator:
                  id: mysystem-1
                  type: mysystem-application
                type: myplugin:type
              transition:
                id: '5'
              update:
                comment:
                - add:
                    body:
                      content:
                      - content:
                        - text: Bug has been fixed
                          type: text
                        type: paragraph
                      type: doc
                      version: 1
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: |-
            Returned if:

             *  no transition is specified.
             *  the user does not have permission to transition the issue.
             *  a field that isn't included on the transition screen is defined in `fields` or `update`.
             *  a field is specified in both `fields` and `update`.
             *  the request is invalid for any other reason.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
        '409':
          description: Returned if the issue could not be updated due to a conflicting
            update.
        '413':
          description: |-
            Returned if a per-issue limit has been breached for one of the following fields:

             *  comments
             *  worklogs
             *  attachments
             *  issue links
             *  remote issue links
        '422':
          description: Returned if a configuration problem prevents the creation of
            the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - write:issue.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /label:
    get:
      tags:
      - Labels
      summary: Get all labels
      description: Returns a [paginated](#pagination) list of labels.
      operationId: getAllLabels
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1000
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanString'
              example: '{"isLast":false,"maxResults":2,"startAt":0,"total":100,"values":["performance","security"]}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:label:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /universal_avatar/type/{type}/owner/{entityId}:
    get:
      tags:
      - Avatars
      summary: Get avatars
      description: |-
        Returns the system and custom avatars for a project, issue type or priority.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  for custom project avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project the avatar belongs to.
         *  for custom issue type avatars, *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the issue type is used in.
         *  for system avatars, none.
         *  for priority avatars, none.
      operationId: getAvatars
      parameters:
      - name: type
        in: path
        description: The avatar type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - project
          - issuetype
          - priority
      - name: entityId
        in: path
        description: The ID of the item the avatar is associated with
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avatars'
              example: '{"custom":[{"id":"1010","isDeletable":true,"isSelected":false,"isSystemAvatar":false,"urls":{"16x16":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10080&avatarType=project","24x24":"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10080&avatarType=project","32x32":"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10080&avatarType=project","48x48":"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10080&avatarType=project"}}],"system":[{"id":"1000","isDeletable":false,"isSelected":false,"isSystemAvatar":true,"urls":{"16x16":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10040&avatarType=project","24x24":"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10040&avatarType=project","32x32":"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10040&avatarType=project","48x48":"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10040&avatarType=project"}}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the avatar type is invalid, the associated item
            ID is missing, or the item is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Avatars
      summary: Load avatar
      description: "Loads a custom avatar for a project, issue type or priority.\n\
        \nSpecify the avatar's local file location in the body of the request. Also,\
        \ include the following headers:\n\n *  `X-Atlassian-Token: no-check` To prevent\
        \ XSRF protection blocking the request, for more information see [Special\
        \ Headers](#special-request-headers).\n *  `Content-Type: image/image type`\
        \ Valid image types are JPEG, GIF, or PNG.\n\nFor example:  \n`curl --request\
        \ POST `\n\n`--user email@example.com:<api_token> `\n\n`--header 'X-Atlassian-Token:\
        \ no-check' `\n\n`--header 'Content-Type: image/< image_type>' `\n\n`--data-binary\
        \ \"<@/path/to/file/with/your/avatar>\" `\n\n`--url 'https://your-domain.atlassian.net/rest/api/3/universal_avatar/type/{type}/owner/{entityId}'`\n\
        \nThe avatar is cropped to a square. If no crop parameters are specified,\
        \ the square originates at the top left of the image. The length of the square's\
        \ sides is set to the smaller of the height or width of the image.\n\nThe\
        \ cropped image is then used to create avatars of 16x16, 24x24, 32x32, and\
        \ 48x48 in size.\n\nAfter creating the avatar use:\n\n *  [Update issue type](#api-rest-api-3-issuetype-id-put)\
        \ to set it as the issue type's displayed avatar.\n *  [Set project avatar](#api-rest-api-3-project-projectIdOrKey-avatar-put)\
        \ to set it as the project's displayed avatar.\n *  [Update priority](#api-rest-api-3-priority-id-put)\
        \ to set it as the priority's displayed avatar.\n\n**[Permissions](#permissions)\
        \ required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
      operationId: storeAvatar
      parameters:
      - name: type
        in: path
        description: The avatar type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - project
          - issuetype
          - priority
      - name: entityId
        in: path
        description: The ID of the item the avatar is associated with
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x
        in: query
        description: The X coordinate of the top-left corner of the crop region
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: y
        in: query
        description: The Y coordinate of the top-left corner of the crop region
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        description: The length of each side of the crop region
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      requestBody:
        content:
          '*/*':
            schema: {
              }
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avatar'
              example: '{"id":"1010","isDeletable":true,"isSelected":false,"isSystemAvatar":false}'
        '400':
          description: |-
            Returned if:

             *  an image isn't included in the request.
             *  the image type is unsupported.
             *  the crop parameters extend the crop area beyond the edge of the image.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permissions.
        '404':
          description: Returned if the avatar type is invalid, the associated item
            ID is missing, or the item is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:avatar:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /component/{id}:
    get:
      tags:
      - Project components
      summary: Get component
      description: |-
        Returns a component.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for project containing the component.
      operationId: getComponent
      parameters:
      - name: id
        in: path
        description: The ID of the component
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComponent'
              example: '{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the component is not found or the user does not
            have permission to browse the project containing the component.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:project.component:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Project components
      summary: Update component
      description: |-
        Updates a component. Any fields included in the request are overwritten. If `leadAccountId` is an empty string ("") the component lead is removed.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the component or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateComponent
      parameters:
      - name: id
        in: path
        description: The ID of the component
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectComponent'
            example:
              assigneeType: PROJECT_LEAD
              description: This is a Jira component
              isAssigneeTypeValid: false
              leadAccountId: 5b10a2844c20165700ede21g
              name: Component 1
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComponent'
              example: '{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}'
        '400':
          description: |-
            Returned if:

             *  the user is not found.
             *  `assigneeType` is an invalid value.
             *  `name` is over 255 characters in length.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to manage the
            project containing the component or does not have permission to administer
            Jira.
        '404':
          description: Returned if the component is not found or the user does not
            have permission to browse the project containing the component.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:user:jira
        - write:project.component:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
    delete:
      tags:
      - Project components
      summary: Delete component
      description: |-
        Deletes a component.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the component or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteComponent
      parameters:
      - name: id
        in: path
        description: The ID of the component
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: moveIssuesTo
        in: query
        description: The ID of the component to replace the deleted component. If
          this value is null no replacement is made
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to manage the
            project containing the component or does not have permission to administer
            Jira.
        '404':
          description: |-
            Returned if:

             *  the component is not found.
             *  the replacement component is not found.
             *  the user does not have permission to browse the project containing the component.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project.component:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /project/{projectIdOrKey}/avatar/{id}:
    delete:
      tags:
      - Project avatars
      summary: Delete project avatar
      description: |-
        Deletes a custom avatar from a project. Note that system avatars cannot be deleted.

        **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: deleteProjectAvatar
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or (case-sensitive) key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the avatar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the avatar is a system avatar or the user does
            not have permission to administer the project.
        '404':
          description: Returned if the project or avatar is not found or the user
            does not have permission to view the project.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project.avatar:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /version:
    post:
      tags:
      - Project versions
      summary: Create version
      description: |-
        Creates a project version.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project the version is added to.
      operationId: createVersion
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Version'
            example:
              archived: false
              description: An excellent version
              name: New Version 1
              projectId: 10000
              releaseDate: 2010-07-06T00:00:00Z
              released: true
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
              example: '{"archived":false,"description":"An excellent version","id":"10000","name":"New
                Version 1","project":"PXA","projectId":10000,"releaseDate":"2010-07-06","released":true,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000","userReleaseDate":"6/Jul/2010"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the project is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project-version:jira
        - read:project-version:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /user/bulk:
    get:
      tags:
      - Users
      summary: Bulk get users
      description: |-
        Returns a [paginated](#pagination) list of the users specified by one or more account IDs.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: bulkGetUsers
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: username
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: key
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: accountId
        in: query
        description: The account ID of a user. To specify multiple users, pass multiple
          `accountId` parameters. For example, `accountId=5b10a2844c20165700ede21g&accountId=5b10ac8d82e05b22cc7d4ef5`
        required: true
        style: form
        explode: true
        schema:
          maxLength: 128
          type: array
          example: 5b10ac8d82e05b22cc7d4ef5
          items:
            maxLength: 128
            type: string
            example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanUser'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":1,"values":[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}]}'
        '400':
          description: Returned if `accountID` is missing.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:group:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /permissions/check:
    post:
      tags:
      - Permissions
      summary: Get bulk permissions
      description: |-
        Returns:

         *  for a list of global permissions, the global permissions granted to a user.
         *  for a list of project permissions and lists of projects and issues, for each project permission a list of the projects and issues a user can access or manipulate.

        If no account ID is provided, the operation returns details for the logged in user.

        Note that:

         *  Invalid project and issue IDs are ignored.
         *  A maximum of 1000 projects and 1000 issues can be checked.
         *  Null values in `globalPermissions`, `projectPermissions`, `projectPermissions.projects`, and `projectPermissions.issues` are ignored.
         *  Empty strings in `projectPermissions.permissions` are ignored.

        **Deprecation notice:** The required OAuth 2.0 scopes will be updated on June 15, 2024.

         *  **Classic**: `read:jira-work`
         *  **Granular**: `read:permission:jira`

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) to check the permissions for other users, otherwise none. However, Connect apps can make a call from the app server to the product to obtain permission details for any user, without admin permission. This Connect app ability doesn't apply to calls made using AP.request() in a browser.
      operationId: getBulkPermissions
      parameters: [
        ]
      requestBody:
        description: Details of the permissions to check
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPermissionsRequestBean'
            example:
              accountId: 5b10a2844c20165700ede21g
              globalPermissions:
              - ADMINISTER
              projectPermissions:
              - issues:
                - 10010
                - 10011
                - 10012
                - 10013
                - 10014
                permissions:
                - EDIT_ISSUES
                projects:
                - 10001
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPermissionGrants'
              example: '{"globalPermissions":["ADMINISTER"],"projectPermissions":[{"issues":[10010,10013,10014],"permission":"EDIT_ISSUES","projects":[10001]}]}'
        '400':
          description: |-
            Returned if:

             *  `projectPermissions` is provided without at least one project permission being provided.
             *  an invalid global permission is provided in the global permissions list.
             *  an invalid project permission is provided in the project permissions list.
             *  more than 1000 valid project IDs or more than 1000 valid issue IDs are provided.
             *  an invalid account ID is provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":[],"errors":{"PERMISSION_123":"Unrecognized
                permission"}}'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only Jira administrators can perform this
                operation."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes:
        - read:permission:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /field/search/trashed:
    get:
      tags:
      - Issue fields
      summary: Get fields in trash paginated
      description: |-
        Returns a [paginated](#pagination) list of fields in the trash. The list may be restricted to fields whose field name or description partially match a string.

        Only custom fields can be queried, `type` must be set to `custom`.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getTrashedFieldsPaginated
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: id
        in: query
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      - name: query
        in: query
        description: String used to perform a case-insensitive partial match with
          field names or descriptions
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - -name
          - +name
          - trashDate
          - -trashDate
          - +trashDate
          - plannedDeletionDate
          - -plannedDeletionDate
          - +plannedDeletionDate
          - projectsCount
          - -projectsCount
          - +projectsCount
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `name` sorts by the field name
           *  `trashDate` sorts by the date the field was moved to the trash
           *  `plannedDeletionDate` sorts by the planned deletion date
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanField'
              example: '{"isLast":false,"maxResults":50,"startAt":0,"total":1,"values":[{"id":"customfield_10000","name":"Approvers","schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:multiuserpicker","customId":10003,"type":"array"},"description":"Contains
                users needed for approval. This custom field was created by Jira Service
                Desk.","key":"customfield_10003","trashedDate":"2022-10-06T07:32:47.000+0000","trashedBy":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"plannedDeletionDate":"2022-10-24T07:32:47.000+0000"}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only custom fields can be queried."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only Jira administrators can access fields."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:field-configuration:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /statuses/{statusId}/projectUsages:
    get:
      tags:
      - Status
      summary: Get project usages by status
      description: Returns a page of projects using a given status.
      operationId: getProjectUsagesForStatus
      parameters:
      - name: statusId
        in: path
        description: The statusId to fetch project usages for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nextPageToken
        in: query
        description: The cursor for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of results to return. Must be an integer between
          1 and 200
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusProjectUsageDTO'
              example: '{"projects":{"nextPageToken":"eyJvIjoyfQ==","values":[{"id":"1000"}]},"statusId":"1000"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Invalid format of nextPageToken"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '404':
          description: Returned if the status with the given ID does not exist.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:status:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issue/limit/report:
    get:
      tags:
      - Issues
      summary: Get issue limit report
      description: |-
        Returns all issues breaching and approaching per-issue limits.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) is required for the project the issues are in. Results may be incomplete otherwise
         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueLimitReport
      parameters:
      - name: isReturningKeys
        in: query
        description: |-
          Return issue keys instead of issue ids in the response.

          Usage: Add `?isReturningKeys=true` to the end of the path to request issue keys
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueLimitReportResponseBean'
              example: '{"issuesApproachingLimit":{"attachment":{"15070L":1822,"15111L":1999},"comment":{"10000L":4997,"15073L":4999,"15110L":5000},"remoteIssueLinks":{"15107L":2000},"worklog":{"15101L":10342}},"issuesBreachingLimit":{"attachment":{"15057L":2005,"15116L":2065,"15117L":3005},"comment":{"15055L":5202},"issuelinks":{"15058L":2120},"remoteIssueLinks":{"15059L":2094},"worklog":{"15056L":10085,"15169L":120864}},"limits":{"attachment":2000,"comment":5000,"issuelinks":2000,"remoteIssueLinks":2000,"worklog":10000}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to complete this
            request.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:issue:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /field/{fieldId}/context/{contextId}/option/{optionId}:
    delete:
      tags:
      - Issue custom field options
      summary: Delete custom field options (context)
      description: |-
        Deletes a custom field option.

        Options with cascading options cannot be deleted without deleting the cascading options first.

        This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteCustomFieldOption
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context from which an option should be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: optionId
        in: path
        description: The ID of the option to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the option is deleted
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The custom field doesn''t support options."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can manage custom
                field options."],"errors":{}}'
        '404':
          description: Returned if the field, the context, or the option is not found.
          content:
            application/json:
              example: '{"errorMessages":["The custom field was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:field.option:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/properties:
    get:
      tags:
      - Issue properties
      summary: Get issue property keys
      description: |-
        Returns the URLs and keys of an issue's properties.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Property details are only returned where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getIssuePropertyKeys
      parameters:
      - name: issueIdOrKey
        in: path
        description: The key or ID of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeys'
              example: '{"keys":[{"key":"issue.support","self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support"}]}'
        '404':
          description: Returned if the issue is not found or the user does not have
            permissions to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /plans/plan/{planId}/trash:
    put:
      tags:
      - Plans
      summary: Trash plan
      description: |-
        Moves a plan to trash.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: trashPlan
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /field/association:
    put:
      tags:
      - Issue custom field associations
      summary: Create associations
      description: |-
        Associates fields with projects.

        Fields will be associated with each issue type on the requested projects.

        Fields will be associated with all projects that share the same field configuration which the provided projects are using. This means that while the field will be associated with the requested projects, it will also be associated with any other projects that share the same field configuration.

        If a success response is returned it means that the field association has been created in any applicable contexts where it wasn't already present.

        Up to 50 fields and up to 100 projects can be associated in a single request. If more fields or projects are provided a 400 response will be returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createAssociations
      parameters: [
        ]
      requestBody:
        description: Payload containing the fields to associate and the projects to
          associate them to
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldAssociationsRequest'
            example:
              associationContexts:
              - identifier: 10000
                type: PROJECT_ID
              - identifier: 10001
                type: PROJECT_ID
              fields:
              - identifier: customfield_10000
                type: FIELD_ID
              - identifier: customfield_10001
                type: FIELD_ID
        required: true
      responses:
        '204':
          description: Returned if the field association validation passes
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the field, project, or issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field-configuration:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue custom field associations
      summary: Remove associations
      description: |-
        Unassociates a set of fields with a project and issue type context.

        Fields will be unassociated with all projects/issue types that share the same field configuration which the provided project and issue types are using. This means that while the field will be unassociated with the provided project and issue types, it will also be unassociated with any other projects and issue types that share the same field configuration.

        If a success response is returned it means that the field association has been removed in any applicable contexts where it was present.

        Up to 50 fields and up to 100 projects and issue types can be unassociated in a single request. If more fields or projects are provided a 400 response will be returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeAssociations
      parameters: [
        ]
      requestBody:
        description: Payload containing the fields to uassociate and the projects
          and issue types to unassociate them to
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldAssociationsRequest'
            example:
              associationContexts:
              - identifier: 10000
                type: PROJECT_ID
              - identifier: 10001
                type: PROJECT_ID
              fields:
              - identifier: customfield_10000
                type: FIELD_ID
              - identifier: customfield_10001
                type: FIELD_ID
        required: true
      responses:
        '204':
          description: Returned if the field association validation passes
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the field, project, or issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field-configuration:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issue/properties/{propertyKey}:
    put:
      tags:
      - Issue properties
      summary: Bulk set issue property
      description: "Sets a property value on multiple issues.\n\nThe value set can\
        \ be a constant or determined by a [Jira expression](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).\
        \ Expressions must be computable with constant complexity when applied to\
        \ a set of issues. Expressions must also comply with the [restrictions](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#restrictions)\
        \ that apply to all Jira expressions.\n\nThe issues to be updated can be specified\
        \ by a filter.\n\nThe filter identifies issues eligible for update using these\
        \ criteria:\n\n *  `entityIds` Only issues from this list are eligible.\n\
        \ *  `currentValue` Only issues with the property set to this value are eligible.\n\
        \ *  `hasProperty`:\n    \n     *  If *true*, only issues with the property\
        \ are eligible.\n     *  If *false*, only issues without the property are\
        \ eligible.\n\nIf more than one criteria is specified, they are joined with\
        \ the logical *AND*: only issues that satisfy all criteria are eligible.\n\
        \nIf an invalid combination of criteria is provided, an error is returned.\
        \ For example, specifying a `currentValue` and `hasProperty` as *false* would\
        \ not match any issues (because without the property the property cannot have\
        \ a value).\n\nThe filter is optional. Without the filter all the issues visible\
        \ to the user and where the user has the EDIT\\_ISSUES permission for the\
        \ issue are considered eligible.\n\nThis operation is:\n\n *  transactional,\
        \ either all eligible issues are updated or, when errors occur, none are updated.\n\
        \ *  [asynchronous](#async). Follow the `location` link in the response to\
        \ determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get)\
        \ to obtain subsequent updates.\n\n**[Permissions](#permissions) required:**\n\
        \n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg)\
        \ for each project containing issues.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg)\
        \ is configured, issue-level security permission to view the issue.\n *  *Edit\
        \ issues* [project permission](https://confluence.atlassian.com/x/yodKLg)\
        \ for each issue."
      operationId: bulkSetIssueProperty
      parameters:
      - name: propertyKey
        in: path
        description: The key of the property. The maximum length is 255 characters
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkIssuePropertyUpdateRequest'
            example:
              filter:
                currentValue:
                  owner: admin
                  weight: 50
                entityIds:
                - 10100
                - 100010
                hasProperty: true
              value:
                owner: admin
                weight: 100
        required: true
      responses:
        '303':
          description: Returned if the request is successful
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:jira-expressions:jira
        - write:issue.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue properties
      summary: Bulk delete issue property
      description: |-
        Deletes a property value from multiple issues. The issues to be updated can be specified by filter criteria.

        The criteria the filter used to identify eligible issues are:

         *  `entityIds` Only issues from this list are eligible.
         *  `currentValue` Only issues with the property set to this value are eligible.

        If both criteria is specified, they are joined with the logical *AND*: only issues that satisfy both criteria are considered eligible.

        If no filter criteria are specified, all the issues visible to the user and where the user has the EDIT\_ISSUES permission for the issue are considered eligible.

        This operation is:

         *  transactional, either the property is deleted from all eligible issues or, when errors occur, no properties are deleted.
         *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [ project permission](https://confluence.atlassian.com/x/yodKLg) for each project containing issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for each issue.
      operationId: bulkDeleteIssueProperty
      parameters:
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueFilterForBulkPropertyDelete'
            example:
              currentValue: deprecated value
              entityIds:
              - 10100
              - 100010
        required: true
      responses:
        '303':
          description: Returned if the request is successful
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue.property:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /workflowscheme:
    get:
      tags:
      - Workflow schemes
      summary: Get all workflow schemes
      description: |-
        Returns a [paginated](#pagination) list of all workflow schemes, not including draft workflow schemes.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAllWorkflowSchemes
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanWorkflowScheme'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":2,"values":[{"defaultWorkflow":"jira","description":"The
                description of the example workflow scheme.","id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"},{"defaultWorkflow":"jira","description":"The
                description of the another example workflow scheme.","id":101011,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Another example workflow
                scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101011"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Workflow schemes
      summary: Create workflow scheme
      description: |-
        Creates a workflow scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createWorkflowScheme
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowScheme'
            example:
              defaultWorkflow: jira
              description: The description of the example workflow scheme.
              issueTypeMappings:
                '10000': scrum workflow
                '10001': builds workflow
              name: Example workflow scheme
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"jira","description":"The description of
                the example workflow scheme.","draft":false,"id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        - read:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /user/properties:
    get:
      tags:
      - User properties
      summary: Get user property keys
      description: |-
        Returns the keys of all properties for a user.

        Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to access the property keys on any user.
         *  Access to Jira, to access the calling user's property keys.
      operationId: getUserPropertyKeys
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: userKey
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: username
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeys'
              example: '{"keys":[{"key":"issue.support","self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support"}]}'
        '400':
          description: Returned if `accountId` is missing.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or is not accessing their user record.
        '404':
          description: Returned if the user is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /user/properties/{propertyKey}:
    get:
      tags:
      - User properties
      summary: Get user property
      description: |-
        Returns the value of a user's property. If no property key is provided [Get user property keys](#api-rest-api-3-user-properties-get) is called.

        Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get a property from any user.
         *  Access to Jira, to get a property from the calling user's record.
      operationId: getUserProperty
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: userKey
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: username
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the user's property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityProperty'
              example: '{"key":"issue.support","value":{"system.conversation.id":"b1bf38be-5e94-4b40-a3b8-9278735ee1e6","system.support.time":"1m"}}'
        '400':
          description: Returned if `accountId` is missing.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or is not accessing their user record.
        '404':
          description: Returned if the user is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - User properties
      summary: Set user property
      description: |-
        Sets the value of a user's property. Use this resource to store custom data against a user.

        Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set a property on any user.
         *  Access to Jira, to set a property on the calling user's record.
      operationId: setUserProperty
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: userKey
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: username
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the user's property. The maximum length is 255 characters
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The value of the property. The value has to be a valid, non-empty
          [JSON](https://tools.ietf.org/html/rfc4627) value. The maximum length of
          the property value is 32768 bytes
        content:
          application/json:
            schema: {
              }
        required: true
      responses:
        '200':
          description: Returned if the user property is updated
          content:
            application/json:
              schema: {
                }
        '201':
          description: Returned if the user property is created.
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if `accountId` is missing.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or is not accessing their user record.
        '404':
          description: Returned if the user is not found.
        '405':
          description: Returned if the property key is not specified.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:user.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - User properties
      summary: Delete user property
      description: |-
        Deletes a property from a user.

        Note: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to delete a property from any user.
         *  Access to Jira, to delete a property from the calling user's record.
      operationId: deleteUserProperty
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: userKey
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: username
        in: query
        description: This parameter is no longer available and will be removed from
          the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the user's property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the user property is deleted
        '400':
          description: Returned if `accountId` is missing.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission
            or is not accessing their user record.
        '404':
          description: Returned if the user or the property is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:user.property:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /project/type/{projectTypeKey}:
    get:
      tags:
      - Project types
      summary: Get project type by key
      description: |-
        Returns a [project type](https://confluence.atlassian.com/x/Var1Nw).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getProjectTypeByKey
      parameters:
      - name: projectTypeKey
        in: path
        description: The key of the project type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - software
          - service_desk
          - business
          - product_discovery
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
              example: '{"color":"#FFFFFF","descriptionI18nKey":"jira.project.type.business.description","formattedKey":"Business","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"business"}'
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if the project type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-type:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /user/viewissue/search:
    get:
      tags:
      - User search
      summary: Find users with browse permission
      description: |-
        Returns a list of users who fulfill these criteria:

         *  their user attributes match a search string.
         *  they have permission to browse issues.

        Use this resource to find users who can browse:

         *  an issue, by providing the `issueKey`.
         *  any issue in a project, by providing the `projectKey`.

        This operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that match the search string and have permission to browse issues. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the search string and have permission to browse issues, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.

        Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls and calls by users without the required permission return empty search results.
      operationId: findUsersWithBrowsePermission
      parameters:
      - name: query
        in: query
        description: A query string that is matched against user attributes, such
          as `displayName` and `emailAddress`, to find relevant users. The string
          can match the prefix of the attribute's value. For example, *query=john*
          matches a user with a `displayName` of *John Smith* and a user with an `emailAddress`
          of *johnson@example.com*. Required, unless `accountId` is specified
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: query
        x-showInExample: 'true'
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountId
        in: query
        description: A query string that is matched exactly against user `accountId`.
          Required, unless `query` is specified
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
      - name: issueKey
        in: query
        description: The issue key for the issue. Required, unless `projectKey` is
          specified
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectKey
        in: query
        description: The project key for the project (case sensitive). Required, unless
          `issueKey` is specified
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example: '[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},{"accountId":"5b10ac8d82e05b22cc7d4ef5","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48"},"displayName":"Emma
                Richards","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5"}]'
        '400':
          description: |-
            Returned if:

             *  `issueKey` or `projectKey` is missing.
             *  `query` or `accountId` is missing.
             *  `query` and `accountId` are provided.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue or project is not found.
        '429':
          description: Returned if the rate limit is exceeded. User search endpoints
            share a collective rate limit for the tenant, in addition to Jira's normal
            rate limiting you may receive a rate limit for user search. Please respect
            the Retry-After header.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue:jira
        - read:project:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /search:
    get:
      tags:
      - Issue search
      summary: Search for issues using JQL (GET)
      description: |-
        Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).

        If the JQL query expression is too large to be encoded as a query parameter, use the [POST](#api-rest-api-3-search-post) version of this resource.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Issues are included in the response where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: searchForIssuesUsingJql
      parameters:
      - name: jql
        in: query
        description: |-
          The [JQL](https://confluence.atlassian.com/x/egORLQ) that defines the search. Note:

           *  If no JQL expression is provided, all issues are returned.
           *  `username` and `userkey` cannot be used as search terms due to privacy reasons. Use `accountId` instead.
           *  If a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: project = HSP
        x-showInExample: 'true'
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page. To manage page
          size, Jira may return fewer items per page where a large number of fields
          or properties are requested. The greatest number of items returned per page
          is achieved when requesting `id` or `key` only
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: validateQuery
        in: query
        description: |-
          Determines how to validate the JQL query and treat the validation results. Supported values are:

           *  `strict` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).
           *  `warn` Returns all errors as warnings.
           *  `none` No validation is performed.
           *  `true` *Deprecated* A legacy synonym for `strict`.
           *  `false` *Deprecated* A legacy synonym for `warn`.

          Note: If the JQL is not correctly formed a 400 response code is returned, regardless of the `validateQuery` value
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - strict
          - warn
          - none
          - 'true'
          - 'false'
          default: strict
      - name: fields
        in: query
        description: |-
          A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:

           *  `*all` Returns all fields.
           *  `*navigable` Returns navigable fields.
           *  Any issue field, prefixed with a minus to exclude.

          Examples:

           *  `summary,comment` Returns only the summary and comments fields.
           *  `-description` Returns all navigable (default) fields except description.
           *  `*all,-comment` Returns all fields except comments.

          This parameter may be specified multiple times. For example, `fields=field1,field2&fields=field3`.

          Note: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: '*navigable'
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about issues in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `renderedFields` Returns field values rendered in HTML format.
           *  `names` Returns the display name of each field.
           *  `schema` Returns the schema describing a field type.
           *  `transitions` Returns all possible transitions for the issue.
           *  `operations` Returns all possible operations for the issue.
           *  `editmeta` Returns information about how each field can be edited.
           *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
           *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: properties
        in: query
        description: A list of issue property keys for issue properties to include
          in the results. This parameter accepts a comma-separated list. Multiple
          properties can also be provided using an ampersand separated list. For example,
          `properties=prop1,prop2&properties=prop3`. A maximum of 5 issue property
          keys can be specified
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: fieldsByKeys
        in: query
        description: Reference fields by their key (rather than ID)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: failFast
        in: query
        description: Whether to fail the request quickly in case of an error while
          loading fields for an issue. For `failFast=true`, if one field fails, the
          entire operation fails. For `failFast=false`, the operation will continue
          even if a field fails. It will return a valid response, but without values
          for the failed field(s)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
              example: '{"expand":"names,schema","issues":[{"expand":"","fields":{"watcher":{"isWatching":false,"self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers","watchCount":1},"attachment":[{"author":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"content":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10000","created":"2022-10-06T07:32:47.000+0000","filename":"picture.jpg","id":10000,"mimeType":"image/jpeg","self":"https://your-domain.atlassian.net/rest/api/3/attachments/10000","size":23123,"thumbnail":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/thumbnail/10000"}],"sub-tasks":[{"id":"10000","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10003","key":"ED-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/ED-2"},"type":{"id":"10000","inward":"Parent","name":"","outward":"Sub-task"}}],"description":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Main
                order flow broken"}]}]},"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"comment":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper."}]}]},"created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}],"issuelinks":[{"id":"10001","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004L","key":"PR-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-2"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}},{"id":"10002","inwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004","key":"PR-3","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-3"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}}],"worklog":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"comment":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"I
                did some work here."}]}]},"id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}],"updated":1,"timetracking":{"originalEstimate":"10m","originalEstimateSeconds":600,"remainingEstimate":"3m","remainingEstimateSeconds":200,"timeSpent":"6m","timeSpentSeconds":400}},"id":"10002","key":"ED-1","self":"https://your-domain.atlassian.net/rest/api/3/issue/10002"}],"maxResults":50,"startAt":0,"total":1,"warningMessages":["The
                value ''bar'' does not exist for the field ''foo''."]}'
        '400':
          description: Returned if the JQL query is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-details:jira
        - read:audit-log:jira
        - read:avatar:jira
        - read:field-configuration:jira
        - read:issue-meta:jira
        state: Beta
      x-changes:
      - announced: 2024-10-31T00:00:00Z
        details: https://developer.atlassian.com/changelog/#CHANGE-2046
        effective: 2025-05-01T00:00:00Z
        type: removed
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue search
      summary: Search for issues using JQL (POST)
      description: |-
        Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).

        There is a [GET](#api-rest-api-3-search-get) version of this resource that can be used for smaller JQL query expressions.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Issues are included in the response where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: searchForIssuesUsingJqlPost
      parameters: [
        ]
      requestBody:
        description: A JSON object containing the search request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestBean'
            example:
              expand:
              - names
              - schema
              - operations
              fields:
              - summary
              - status
              - assignee
              fieldsByKeys: false
              jql: project = HSP
              maxResults: 15
              startAt: 0
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
              example: '{"expand":"names,schema","issues":[{"expand":"","fields":{"watcher":{"isWatching":false,"self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers","watchCount":1},"attachment":[{"author":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"content":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10000","created":"2022-10-06T07:32:47.000+0000","filename":"picture.jpg","id":10000,"mimeType":"image/jpeg","self":"https://your-domain.atlassian.net/rest/api/3/attachments/10000","size":23123,"thumbnail":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/thumbnail/10000"}],"sub-tasks":[{"id":"10000","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10003","key":"ED-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/ED-2"},"type":{"id":"10000","inward":"Parent","name":"","outward":"Sub-task"}}],"description":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Main
                order flow broken"}]}]},"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"comment":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper."}]}]},"created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}],"issuelinks":[{"id":"10001","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004L","key":"PR-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-2"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}},{"id":"10002","inwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004","key":"PR-3","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-3"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}}],"worklog":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"comment":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"I
                did some work here."}]}]},"id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}],"updated":1,"timetracking":{"originalEstimate":"10m","originalEstimateSeconds":600,"remainingEstimate":"3m","remainingEstimateSeconds":200,"timeSpent":"6m","timeSpentSeconds":400}},"id":"10002","key":"ED-1","self":"https://your-domain.atlassian.net/rest/api/3/issue/10002"}],"maxResults":50,"startAt":0,"total":1,"warningMessages":["The
                value ''bar'' does not exist for the field ''foo''."]}'
        '400':
          description: Returned if the JQL query is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-details:jira
        - read:field.default-value:jira
        - read:field.option:jira
        - read:field:jira
        - read:group:jira
        state: Beta
      x-changes:
      - announced: 2024-10-31T00:00:00Z
        details: https://developer.atlassian.com/changelog/#CHANGE-2046
        effective: 2025-05-01T00:00:00Z
        type: removed
      x-atlassian-connect-scope: READ
  /worklog/deleted:
    get:
      tags:
      - Issue worklogs
      summary: Get IDs of deleted worklogs
      description: |-
        Returns a list of IDs and delete timestamps for worklogs deleted after a date and time.

        This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to youngest. If the number of items in the date range exceeds 1000, `until` indicates the timestamp of the youngest item on the page. Also, `nextPage` provides the URL for the next page of worklogs. The `lastPage` parameter is set to true on the last page of worklogs.

        This resource does not return worklogs deleted during the minute preceding the request.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getIdsOfWorklogsDeletedSince
      parameters:
      - name: since
        in: query
        description: The date and time, as a UNIX timestamp in milliseconds, after
          which deleted worklogs are returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedWorklogs'
              example: '{"lastPage":true,"nextPage":"https://your-domain.atlassian.net/api/~ver~/worklog/deleted?since=1438013693136","self":"https://your-domain.atlassian.net/api/~ver~/worklog/deleted?since=1438013671562","since":1438013671562,"until":1438013693136,"values":[{"properties":[],"updatedTime":1438013671562,"worklogId":103},{"properties":[],"updatedTime":1438013672165,"worklogId":104},{"properties":[],"updatedTime":1438013693136,"worklogId":105}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-worklog:jira
        - read:issue-worklog.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /application-properties/advanced-settings:
    get:
      tags:
      - Jira settings
      summary: Get advanced settings
      description: |-
        Returns the application properties that are accessible on the *Advanced Settings* page. To navigate to the *Advanced Settings* page in Jira, choose the Jira icon > **Jira settings** > **System**, **General Configuration** and then click **Advanced Settings** (in the upper right).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAdvancedSettings
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationProperty'
              example: '[{"defaultValue":"","desc":"Jira home directory","id":"jira.home","key":"jira.home","name":"jira.home","type":"string","value":"/var/jira/jira-home"},{"defaultValue":"CLONE
                -","id":"jira.clone.prefix","key":"jira.clone.prefix","name":"The
                prefix added to the Summary field of cloned issues","type":"string","value":"CLONE
                -"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user is not an administrator.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:instance-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /workflows/capabilities:
    get:
      tags:
      - Workflows
      summary: Get available workflow capabilities
      description: |-
        Get the list of workflow capabilities for a specific workflow using either the workflow ID, or the project and issue type ID pair. The response includes the scope of the workflow, defined as global/project-based, and a list of project types that the workflow is scoped to. It also includes all rules organised into their broad categories (conditions, validators, actions, triggers, screens) as well as the source location (Atlassian-provided, Connect, Forge).

        **[Permissions](#permissions) required:**

         *  *Administer Jira* project permission to access all, including global-scoped, workflows
         *  *Administer projects* project permissions to access project-scoped workflows

        The current list of Atlassian-provided rules:

        #### Validators ####

        A validator rule that checks if a user has the required permissions to execute the transition in the workflow.

        ##### Permission validator #####

        A validator rule that checks if a user has the required permissions to execute the transition in the workflow.

            {
               "ruleKey": "system:check-permission-validator",
               "parameters": {
                 "permissionKey": "ADMINISTER_PROJECTS"
               }
             }

        Parameters:

         *  `permissionKey` The permission required to perform the transition. Allowed values: [built-in Jira permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-permission-schemes/#built-in-permissions).

        ##### Parent or child blocking validator #####

        A validator to block the child issue's transition depending on the parent issue's status.

            {
               "ruleKey" : "system:parent-or-child-blocking-validator"
               "parameters" : {
                 "blocker" : "PARENT"
                 "statusIds" : "1,2,3"
               }
             }

        Parameters:

         *  `blocker` currently only supports `PARENT`.
         *  `statusIds` a comma-separated list of status IDs.

        ##### Previous status validator #####

        A validator that checks if an issue has transitioned through specified previous status(es) before allowing the current transition to occur.

            {
               "ruleKey": "system:previous-status-validator",
               "parameters": {
                 "previousStatusIds": "10014",
                 "mostRecentStatusOnly": "true"
               }
             }

        Parameters:

         *  `previousStatusIds` a comma-separated list of status IDs, currently only support one ID.
         *  `mostRecentStatusOnly` when `true` only considers the most recent status for the condition evaluation. Allowed values: `true`, `false`.

        ##### Validate a field value #####

        A validation that ensures a specific field's value meets the defined criteria before allowing an issue to transition in the workflow.

        Depending on the rule type, the result will vary:

        ###### Field required ######

            {
               "ruleKey": "system:validate-field-value",
               "parameters": {
                 "ruleType": "fieldRequired",
                 "fieldsRequired": "assignee",
                 "ignoreContext": "true",
                 "errorMessage": "An assignee must be set!"
               }
             }

        Parameters:

         *  `fieldsRequired` the ID of the field that is required. For a custom field, it would look like `customfield_123`.
         *  `ignoreContext` controls the impact of context settings on field validation. When set to `true`, the validator doesn't check a required field if its context isn't configured for the current issue. When set to `false`, the validator requires a field even if its context is invalid. Allowed values: `true`, `false`.
         *  `errorMessage` is the error message to display if the user does not provide a value during the transition. A default error message will be shown if you don't provide one (Optional).

        ###### Field changed ######

            {
               "ruleKey": "system:validate-field-value",
               "parameters": {
                 "ruleType": "fieldChanged",
                 "groupsExemptFromValidation": "6862ac20-8672-4f68-896d-4854f5efb79e",
                 "fieldKey": "versions",
                 "errorMessage": "Affect versions must be modified before transition"
               }
             }

        Parameters:

         *  `groupsExemptFromValidation` a comma-separated list of group IDs to be exempt from the validation.
         *  `fieldKey` the ID of the field that has changed. For a custom field, it would look like `customfield_123`.
         *  `errorMessage` the error message to display if the user does not provide a value during the transition. A default error message will be shown if you don't provide one (Optional).

        ###### Field has a single value ######

            {
               "ruleKey": "system:validate-field-value",
               "parameters": {
                 "ruleType": "fieldHasSingleValue",
                 "fieldKey": "created",
                 "excludeSubtasks": "true"
               }
             }

        Parameters:

         *  `fieldKey` the ID of the field to validate. For a custom field, it would look like `customfield_123`.
         *  `excludeSubtasks` Option to exclude values copied from sub-tasks. Allowed values: `true`, `false`.

        ###### Field matches regular expression ######

            {
               "ruleKey": "system:validate-field-value",
               "parameters": {
                 "ruleType": "fieldMatchesRegularExpression",
                 "regexp": "[0-9]{4}",
                 "fieldKey": "description"
               }
             }

        Parameters:

         *  `regexp` the regular expression used to validate the field\\u2019s content.
         *  `fieldKey` the ID of the field to validate. For a custom field, it would look like `customfield_123`.

        ###### Date field comparison ######

            {
               "ruleKey": "system:validate-field-value",
               "parameters": {
                 "ruleType": "dateFieldComparison",
                 "date1FieldKey": "duedate",
                 "date2FieldKey": "customfield_10054",
                 "includeTime": "true",
                 "conditionSelected": ">="
               }
             }

        Parameters:

         *  `date1FieldKey` the ID of the first field to compare. For a custom field, it would look like `customfield_123`.
         *  `date2FieldKey` the ID of the second field to compare. For a custom field, it would look like `customfield_123`.
         *  `includeTime` if `true`, compares both date and time. Allowed values: `true`, `false`.
         *  `conditionSelected` the condition to compare with. Allowed values: `>`, `>=`, `=`, `<=`, `<`, `!=`.

        ###### Date range comparison ######

            {
               "ruleKey": "system:validate-field-value",
               "parameters": {
                 "ruleType": "windowDateComparison",
                 "date1FieldKey": "customfield_10009",
                 "date2FieldKey": "customfield_10054",
                 "numberOfDays": "3"
               }
             }

        Parameters:

         *  `date1FieldKey` the ID of the first field to compare. For a custom field, it would look like `customfield_123`.
         *  `date2FieldKey` the ID of the second field to compare. For a custom field, it would look like `customfield_123`.
         *  `numberOfDays` maximum number of days past the reference date (`date2FieldKey`) to pass validation.

        This rule is composed by aggregating the following legacy rules:

         *  FieldRequiredValidator
         *  FieldChangedValidator
         *  FieldHasSingleValueValidator
         *  RegexpFieldValidator
         *  DateFieldValidator
         *  WindowsDateValidator

        ##### Pro forma: Forms attached validator #####

        Validates that one or more forms are attached to the issue.

            {
               "ruleKey" : "system:proforma-forms-attached"
               "parameters" : {}
             }

        ##### Proforma: Forms submitted validator #####

        Validates that all forms attached to the issue have been submitted.

            {
               "ruleKey" : "system:proforma-forms-submitted"
               "parameters" : {}
             }

        #### Conditions ####

        Conditions enable workflow rules that govern whether a transition can execute.

        ##### Check field value #####

        A condition rule evaluates as true if a specific field's value meets the defined criteria. This rule ensures that an issue can only transition to the next step in the workflow if the field's value matches the desired condition.

            {
               "ruleKey": "system:check-field-value",
               "parameters": {
                 "fieldId": "description",
                 "fieldValue": "[\"Done\"]",
                 "comparator": "=",
                 "comparisonType": "STRING"
               }
             }

        Parameters:

         *  `fieldId` The ID of the field to check the value of. For non-system fields, it will look like `customfield_123`. Note: `fieldId` is used interchangeably with the idea of `fieldKey` here, they refer to the same field.
         *  `fieldValue` the list of values to check against the field\\u2019s value.
         *  `comparator` The comparison logic. Allowed values: `>`, `>=`, `=`, `<=`, `<`, `!=`.
         *  `comparisonType` The type of data being compared. Allowed values: `STRING`, `NUMBER`, `DATE`, `DATE_WITHOUT_TIME`, `OPTIONID`.

        ##### Restrict issue transition #####

        This rule ensures that issue transitions are restricted based on user accounts, roles, group memberships, and permissions, maintaining control over who can transition an issue. This condition evaluates as `true` if any of the following criteria is met.

            {
               "ruleKey": "system:restrict-issue-transition",
               "parameters": {
                 "accountIds": "allow-reporter,5e68ac137d64450d01a77fa0",
                 "roleIds": "10002,10004",
                 "groupIds": "703ff44a-7dc8-4f4b-9aa6-a65bf3574fa4",
                 "permissionKeys": "ADMINISTER_PROJECTS",
                 "groupCustomFields": "customfield_10028",
                 "allowUserCustomFields": "customfield_10072,customfield_10144,customfield_10007",
                 "denyUserCustomFields": "customfield_10107"
               }
             }

        Parameters:

         *  `accountIds` a comma-separated list of the user account IDs. It also allows generic values like: `allow-assignee`, `allow-reporter`, and `accountIds` Note: This is only supported in team-managed projects
         *  `roleIds` a comma-separated list of role IDs.
         *  `groupIds` a comma-separated list of group IDs.
         *  `permissionKeys` a comma-separated list of permission keys. Allowed values: [built-in Jira permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-permission-schemes/#built-in-permissions).
         *  `groupCustomFields` a comma-separated list of group custom field IDs.
         *  `allowUserCustomFields` a comma-separated list of user custom field IDs to allow for issue transition.
         *  `denyUserCustomFields` a comma-separated list of user custom field IDs to deny for issue transition.

        This rule is composed by aggregating the following legacy rules:

         *  AllowOnlyAssignee
         *  AllowOnlyReporter
         *  InAnyProjectRoleCondition
         *  InProjectRoleCondition
         *  UserInAnyGroupCondition
         *  UserInGroupCondition
         *  PermissionCondtion
         *  InGroupCFCondition
         *  UserIsInCustomFieldCondition

        ##### Previous status condition #####

        A condition that evaluates based on an issue's previous status(es) and specific criteria.

            {
               "ruleKey" : "system:previous-status-condition"
               "parameters" : {
                 "previousStatusIds" : "10004",
                 "not": "true",
                 "mostRecentStatusOnly" : "true",
                 "includeCurrentStatus": "true",
                 "ignoreLoopTransitions": "true"
               }
             }

        Parameters:

         *  `previousStatusIds` a comma-separated list of status IDs, current only support one ID.
         *  `not` indicates if the condition should be reversed. When `true` it checks that the issue has not been in the selected statuses. Allowed values: `true`, `false`.
         *  `mostRecentStatusOnly` when true only considers the most recent status for the condition evaluation. Allowed values: `true`, `false`.
         *  `includeCurrentStatus` includes the current status when evaluating if the issue has been through the selected statuses. Allowed values: `true`, `false`.
         *  `ignoreLoopTransitions` ignore loop transitions. Allowed values: `true`, `false`.

        ##### Parent or child blocking condition #####

        A condition to block the parent\\u2019s issue transition depending on the child\\u2019s issue status.

            {
               "ruleKey" : "system:parent-or-child-blocking-condition"
               "parameters" : {
                 "blocker" : "CHILD",
                 "statusIds" : "1,2,3"
               }
             }

        Parameters:

         *  `blocker` currently only supports `CHILD`.
         *  `statusIds` a comma-separated list of status IDs.

        ##### Separation of duties #####

        A condition preventing the user from performing, if the user has already performed a transition on the issue.

            {
               "ruleKey": "system:separation-of-duties",
               "parameters": {
                 "fromStatusId": "10161",
                 "toStatusId": "10160"
               }
             }

        Parameters:

         *  `fromStatusId` represents the status ID from which the issue is transitioning. It ensures that the user performing the current transition has not performed any actions when the issue was in the specified status.
         *  `toStatusId` represents the status ID to which the issue is transitioning. It ensures that the user performing the current transition is not the same user who has previously transitioned the issue.

        ##### Restrict transitions #####

        A condition preventing all users from transitioning the issue can also optionally include APIs as well.

            {
               "ruleKey": "system:restrict-from-all-users",
               "parameters": {
                 "restrictMode": "users"
               }
             }

        Parameters:

         *  `restrictMode` restricts the issue transition including/excluding APIs. Allowed values: `"users"`, `"usersAndAPI"`.

        ##### Jira Service Management block until approved #####

        Block an issue transition until approval. Note: This is only supported in team-managed projects.

            {
               "ruleKey": "system:jsd-approvals-block-until-approved",
               "parameters": {
                 "approvalConfigurationJson": "{"statusExternalUuid...}"
               }
             }

        Parameters:

         *  `approvalConfigurationJson` a stringified JSON holding the Jira Service Management approval configuration.

        ##### Jira Service Management block until rejected #####

        Block an issue transition until rejected. Note: This is only supported in team-managed projects.

            {
               "ruleKey": "system:jsd-approvals-block-until-rejected",
               "parameters": {
                 "approvalConfigurationJson": "{"statusExternalUuid...}"
               }
             }

        Parameters:

         *  `approvalConfigurationJson` a stringified JSON holding the Jira Service Management approval configuration.

        ##### Block in progress approval #####

        Condition to block issue transition if there is pending approval. Note: This is only supported in company-managed projects.

            {
               "ruleKey": "system:block-in-progress-approval",
               "parameters": {}
             }

        #### Post functions ####

        Post functions carry out any additional processing required after a workflow transition is executed.

        ##### Change assignee #####

        A post function rule that changes the assignee of an issue after a transition.

            {
               "ruleKey": "system:change-assignee",
               "parameters": {
                 "type": "to-selected-user",
                 "accountId": "example-account-id"
               }
             }

        Parameters:

         *  `type` the parameter used to determine the new assignee. Allowed values: `to-selected-user`, `to-unassigned`, `to-current-user`, `to-current-user`, `to-default-user`, `to-default-user`
         *  `accountId` the account ID of the user to assign the issue to. This parameter is required only when the type is `"to-selected-user"`.

        ##### Copy field value #####

        A post function that automates the process of copying values between fields during a specific transition, ensuring data consistency and reducing manual effort.

            {
               "ruleKey": "system:copy-value-from-other-field",
               "parameters": {
                 "sourceFieldKey": "description",
                 "targetFieldKey": "components",
                 "issueSource": "SAME"
               }
             }

        Parameters:

         *  `sourceFieldKey` the field key to copy from. For a custom field, it would look like `customfield_123`
         *  `targetFieldKey` the field key to copy to. For a custom field, it would look like `customfield_123`
         *  `issueSource` `SAME` or `PARENT`. Defaults to `SAME` if no value is provided.

        ##### Update field #####

        A post function that updates or appends a specific field with the given value.

            {
               "ruleKey": "system:update-field",
               "parameters": {
                 "field": "customfield_10056",
                 "value": "asdf",
                 "mode": "append"
               }
             }

        Parameters:

         *  `field` the ID of the field to update. For a custom field, it would look like `customfield_123`
         *  `value` the value to update the field with.
         *  `mode` `append` or `replace`. Determines if a value will be appended to the current value, or if the current value will be replaced.

        ##### Trigger webhook #####

        A post function that automatically triggers a predefined webhook when a transition occurs in the workflow.

            {
               "ruleKey": "system:trigger-webhook",
               "parameters": {
                 "webhookId": "1"
               }
             }

        Parameters:

         *  `webhookId` the ID of the webhook.

        #### Screen ####

        ##### Remind people to update fields #####

        A screen rule that prompts users to update a specific field when they interact with an issue screen during a transition. This rule is useful for ensuring that users provide or modify necessary information before moving an issue to the next step in the workflow.

            {
               "ruleKey": "system:remind-people-to-update-fields",
               "params": {
                 "remindingFieldIds": "assignee,customfield_10025",
                 "remindingMessage": "The message",
                 "remindingAlwaysAsk": "true"
               }
             }

        Parameters:

         *  `remindingFieldIds` a comma-separated list of field IDs. Note: `fieldId` is used interchangeably with the idea of `fieldKey` here, they refer to the same field.
         *  `remindingMessage` the message to display when prompting the users to update the fields.
         *  `remindingAlwaysAsk` always remind to update fields. Allowed values: `true`, `false`.

        ##### Shared transition screen #####

        A common screen that is shared between transitions in a workflow.

            {
               "ruleKey": "system:transition-screen",
               "params": {
                 "screenId": "3"
               }
             }

        Parameters:

         *  `screenId` the ID of the screen.

        #### Connect & Forge ####

        ##### Connect rules #####

        Validator/Condition/Post function for Connect app.

            {
               "ruleKey": "connect:expression-validator",
               "parameters": {
                 "appKey": "com.atlassian.app",
                 "config": "",
                 "id": "90ce590f-e90c-4cd3-8281-165ce41f2ac3",
                 "disabled": "false",
                 "tag": ""
               }
             }

        Parameters:

         *  `ruleKey` Validator: `connect:expression-validator`, Condition: `connect:expression-condition`, and Post function: `connect:remote-workflow-function`
         *  `appKey` the reference to the Connect app
         *  `config` a JSON payload string describing the configuration
         *  `id` the ID of the rule
         *  `disabled` determine if the Connect app is disabled. Allowed values: `true`, `false`.
         *  `tag` additional tags for the Connect app

        ##### Forge rules #####

        Validator/Condition/Post function for Forge app.

            {
               "ruleKey": "forge:expression-validator",
               "parameters": {
                 "key": "ari:cloud:ecosystem::extension/{appId}/{environmentId}/static/{moduleKey}",
                 "config": "{"searchString":"workflow validator"}",
                 "id": "a865ddf6-bb3f-4a7b-9540-c2f8b3f9f6c2"
               }
             }

        Parameters:

         *  `ruleKey` Validator: `forge:expression-validator`, Condition: `forge:expression-condition`, and Post function: `forge:workflow-post-function`
         *  `key` the identifier for the Forge app
         *  `config` the persistent stringified JSON configuration for the Forge rule
         *  `id` the ID of the Forge rule
      operationId: workflowCapabilities
      parameters:
      - name: workflowId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: issueTypeId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowCapabilities'
              example: '{"connectRules":[{"addonKey":"com.atlassian.jira.refapp","createUrl":"/validators/jira-expression/create?id={validator.id}","description":"Validates
                if the given Jira expression is true.","editUrl":"/validators/jira-expression/edit?id={validator.id}","moduleKey":"jiraExpressionValidator","name":"Jira
                expression validator (by APPNAME)","ruleKey":"connect:expression-validator","ruleType":"Validator","viewUrl":"/validators/jira-expression/view?id={validator.id}"}],"editorScope":"GLOBAL","forgeRules":[{"description":"A
                Jira workflow validator example.","id":"ari:cloud:ecosystem::extension/9df6d15f-1bbe-443e-be08-150309e8dbb0/f6a3bed3-737f-4e7a-8942-130df302b749/static/workflow-validator-example-workflow-validator","name":"workflow-validator","ruleKey":"forge:expression-validator","ruleType":"Validator"}],"projectTypes":["software","business"],"systemRules":[{"description":"Automatically
                assign a request to someone after moving the request using a particular
                transition.","incompatibleRuleKeys":[],"isAvailableForInitialTransition":true,"isVisible":true,"name":"Assign
                a request","ruleKey":"system:change-assignee","ruleType":"Function"}],"triggerRules":[{"availableTypes":[{"description":"Automatically
                transitions the issue when a related branch is created in a connected
                repository","name":"Branch created","type":"com.atlassian.jira.plugins.jira-development-integration-plugin:branch-created-trigger"}],"ruleKey":"system:development-triggers"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /task/{taskId}/cancel:
    post:
      tags:
      - Tasks
      summary: Cancel task
      description: |-
        Cancels a task.

        **[Permissions](#permissions) required:** either of:

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
         *  Creator of the task.
      operationId: cancelTask
      parameters:
      - name: taskId
        in: path
        description: The ID of the task
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '202':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if cancellation of the task is not possible.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          description: Returned if the task is not found.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:async-task:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: NONE
  /plans/plan/{planId}/team/atlassian:
    post:
      tags:
      - Teams in plan
      summary: Add Atlassian team to plan
      description: |-
        Adds an existing Atlassian team to a plan and configures their plannning settings.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addAtlassianTeam
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAtlassianTeamRequest'
            example:
              capacity: 200
              id: AtlassianTeamId
              issueSourceId: 0
              planningStyle: Scrum
              sprintLength: 2
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan or Atlassian team is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /announcementBanner:
    get:
      tags:
      - Announcement banner
      summary: Get announcement banner configuration
      description: |-
        Returns the current announcement banner configuration.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getBanner
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementBannerConfiguration'
              example: '{"hashId":"9HN2FJK9DM8BHRWERVW3RRTGDJ4G4D5C","isDismissible":false,"isEnabled":true,"message":"This
                is a public, enabled, non-dismissible banner, set using the API","visibility":"public"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '"Only admins can read banner configuration."'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Announcement banner
      summary: Update announcement banner configuration
      description: |-
        Updates the announcement banner configuration.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setBanner
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementBannerConfigurationUpdate'
            example:
              isDismissible: false
              isEnabled: true
              message: This is a public, enabled, non-dismissible banner, set using
                the API
              visibility: public
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if an invalid parameter is passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '"Banner message cannot be null."'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '"Only admins can update banner configuration."'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: ADMIN
  /bulk/issues/delete:
    post:
      tags:
      - Issue bulk operations
      summary: Bulk delete issues
      description: |-
        Use this API to submit a bulk delete request. You can delete up to 1,000 issues in a single operation.

        **[Permissions](#permissions) required:**

         *  Global bulk change [permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-global-permissions/).
         *  Delete [issues permission](https://support.atlassian.com/jira-cloud-administration/docs/permissions-for-company-managed-projects/#Delete-issues/) in all projects that contain the selected issues.
         *  Browse [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) in all projects that contain the selected issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: submitBulkDelete
      parameters: [
        ]
      requestBody:
        description: The request body containing the issues to be deleted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueBulkDeletePayload'
            example:
              selectedIssueIdsOrKeys:
              - '10001'
              - '10002'
              sendBulkNotification: false
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedBulkOperation'
              example: '{"taskId":"10641"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
              example: '{"errors":[{"message":"Some of the issues in the issueIdsOrKeys
                are not valid"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /user:
    get:
      tags:
      - Users
      summary: Get user
      description: |-
        Returns a user.

        Privacy controls are applied to the response based on the user's preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getUser
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
          Required
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about users in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `groups` includes all groups and nested groups to which the user belongs.
           *  `applicationRoles` includes details of all the applications to which the user has access
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example: '{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the calling user does not have the *Browse users
            and groups* global permission.
        '404':
          description: Returned if the user is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:group:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Users
      summary: Create user
      description: |-
        Creates a user. This resource is retained for legacy compatibility. As soon as a more suitable alternative is available this resource will be deprecated.

        If the user exists and has access to Jira, the operation returns a 201 status. If the user exists but does not have access to Jira, the operation returns a 400 status.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createUser
      parameters: [
        ]
      requestBody:
        description: Details about the user to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserDetails'
            example:
              emailAddress: mia@atlassian.com
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example: '{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}'
        '400':
          description: Returned if the request is invalid or the number of licensed
            users is exceeded.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
    delete:
      tags:
      - Users
      summary: Delete user
      description: |-
        Deletes a user. If the operation completes successfully then the user is removed from Jira's user base. This operation does not delete the user's Atlassian account.

        **[Permissions](#permissions) required:** Site administration (that is, membership of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL)).
      operationId: removeUser
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        required: true
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: key
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the user cannot be removed.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the user is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
  /permissions/project:
    post:
      tags:
      - Permissions
      summary: Get permitted projects
      description: |-
        Returns all the projects where the user is granted a list of project permissions.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getPermittedProjects
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsKeysBean'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermittedProjects'
        '400':
          description: Returned if a project permission is not found.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:permission:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/{projectIdOrKey}/versions:
    get:
      tags:
      - Project versions
      summary: Get project versions
      description: |-
        Returns all versions in a project. The response is not paginated. Use [Get project versions paginated](#api-rest-api-3-project-projectIdOrKey-version-get) if you want to get the versions in a project with pagination.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectVersions
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information in
          the response. This parameter accepts `operations`, which returns actions
          that can be performed on the version
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Version'
              example: '[{"archived":false,"description":"An excellent version","id":"10000","name":"New
                Version 1","overdue":true,"projectId":10000,"releaseDate":1278385482288,"releaseDateSet":true,"released":true,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000","startDateSet":false,"userReleaseDate":"6/Jul/2010"},{"archived":false,"description":"Minor
                Bugfix version","id":"10010","issuesStatusForFixVersion":{"done":100,"inProgress":20,"toDo":10,"unmapped":0},"name":"Next
                Version","overdue":false,"projectId":10000,"releaseDateSet":false,"released":false,"self":"https://your-domain.atlassian.net/rest/api/3/version/10010","startDateSet":false}]'
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-version:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /priority/move:
    put:
      tags:
      - Issue priorities
      summary: Move priorities
      description: |-
        Changes the order of issue priorities.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: movePriorities
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderIssuePriorities'
            example:
              after: '10003'
              ids:
              - '10004'
              - '10005'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The ids must contain no more than 1,000
                items."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue priority isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Priority with ID 10000 not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: ADMIN
  /status/{idOrName}:
    get:
      tags:
      - Workflow statuses
      summary: Get status
      description: |-
        Returns a status. The status must be associated with an active workflow to be returned.

        If a name is used on more than one status, only the status found first is returned. Therefore, identifying the status by its ID may be preferable.

        This operation can be accessed anonymously.

        [Permissions](#permissions) required: *Browse projects* [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) for the project.
      operationId: getStatus
      parameters:
      - name: idOrName
        in: path
        description: The ID or name of the status
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusDetails'
              example: '{"description":"The issue is currently being worked on.","iconUrl":"https://your-domain.atlassian.net/images/icons/progress.gif","id":"10000","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/status/10000","statusCategory":{"colorName":"yellow","id":1,"key":"in-flight","name":"In
                Progress","self":"https://your-domain.atlassian.net/rest/api/3/statuscategory/1"}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the status is not found.
             *  the status is not associated with a workflow.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:status:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /field/{fieldId}/context:
    get:
      tags:
      - Issue custom field contexts
      summary: Get custom field contexts
      description: |-
        Returns a [paginated](#pagination) list of [ contexts](https://confluence.atlassian.com/adminjiracloud/what-are-custom-field-contexts-991923859.html) for a custom field. Contexts can be returned as follows:

         *  With no other parameters set, all contexts.
         *  By defining `id` only, all contexts from the list of IDs.
         *  By defining `isAnyIssueType`, limit the list of contexts returned to either those that apply to all issue types (true) or those that apply to only a subset of issue types (false)
         *  By defining `isGlobalContext`, limit the list of contexts return to either those that apply to all projects (global contexts) (true) or those that apply to only a subset of projects (false).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). *Edit Workflow* [edit workflow permission](https://support.atlassian.com/jira-cloud-administration/docs/permissions-for-company-managed-projects/#Edit-Workflows)
      operationId: getContextsForField
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isAnyIssueType
        in: query
        description: Whether to return contexts that apply to all issue types
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: isGlobalContext
        in: query
        description: Whether to return contexts that apply to all projects
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: contextId
        in: query
        description: 'The list of context IDs. To include multiple contexts, separate
          IDs with ampersand: `contextId=10000&contextId=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanCustomFieldContext'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":2,"values":[{"id":"10025","name":"Bug
                fields context","description":"A context used to define the custom
                field options for bugs.","isGlobalContext":true,"isAnyIssueType":false},{"id":"10026","name":"Task
                fields context","description":"A context used to define the custom
                field options for tasks.","isGlobalContext":false,"isAnyIssueType":false}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field was not found.
          content:
            application/json:
              example: '{"errorMessages":["The custom field was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:custom-field-contextual-configuration:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue custom field contexts
      summary: Create custom field context
      description: |-
        Creates a custom field context.

        If `projectIds` is empty, a global context is created. A global context is one that applies to all project. If `issueTypeIds` is empty, the context applies to all issue types.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createCustomFieldContext
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomFieldContext'
            example:
              description: A context used to define the custom field options for bugs.
              issueTypeIds:
              - '10010'
              name: Bug fields context
              projectIds: [
                ]
        required: true
      responses:
        '201':
          description: Returned if the custom field context is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomFieldContext'
              example: '{"id":"10025","name":"Bug fields context","description":"A
                context used to define the custom field options for bugs.","projectIds":[],"issueTypeIds":["10010"]}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the field, project, or issue type is not found.
        '409':
          description: Returned if the issue type is a sub-task, but sub-tasks are
            disabled in Jira settings.
          content:
            application/json:
              example: '{"errorMessages":["Sub-tasks are disabled in Jira. At least
                one of the issue types is a sub-task."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - write:field:jira
        - read:custom-field-contextual-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /workflowscheme/{id}/draft:
    get:
      tags:
      - Workflow scheme drafts
      summary: Get draft workflow scheme
      description: "Returns the draft workflow scheme for an active workflow scheme.\
        \ Draft workflow schemes allow changes to be made to the active workflow schemes:\
        \ When an active workflow scheme is updated, a draft copy is created. The\
        \ draft is modified, then the changes in the draft are copied back to the\
        \ active workflow scheme. See [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg)\
        \ for more information.  \nNote that:\n\n *  Only active workflow schemes\
        \ can have draft workflow schemes.\n *  An active workflow scheme can only\
        \ have one draft workflow scheme.\n\n**[Permissions](#permissions) required:**\
        \ *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
      operationId: getWorkflowSchemeDraft
      parameters:
      - name: id
        in: path
        description: The ID of the active workflow scheme that the draft was created
          from
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"scrum workflow","description":"The description
                of the example workflow scheme.","draft":true,"id":17218781,"issueTypeMappings":{"10000":"jira","10001":"jira"},"lastModified":"Today
                6:38 PM","lastModifiedUser":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"name":"Example
                workflow scheme","originalDefaultWorkflow":"jira","originalIssueTypeMappings":{"10001":"builds
                workflow"},"self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if:

             *  the original active workflow scheme is not found.
             *  the original active workflow scheme does not have a draft.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        - read:issue-security-level:jira
        - read:project-role:jira
        - read:screen:jira
        - read:status:jira
        - read:user:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow scheme drafts
      summary: Update draft workflow scheme
      description: |-
        Updates a draft workflow scheme. If a draft workflow scheme does not exist for the active workflow scheme, then a draft is created. Note that an active workflow scheme can only have one draft workflow scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateWorkflowSchemeDraft
      parameters:
      - name: id
        in: path
        description: The ID of the active workflow scheme that the draft was created
          from
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowScheme'
            example:
              defaultWorkflow: jira
              description: The description of the example workflow scheme.
              issueTypeMappings:
                '10000': scrum workflow
              name: Example workflow scheme
              updateDraftIfNeeded: false
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"scrum workflow","description":"The description
                of the example workflow scheme.","draft":true,"id":17218781,"issueTypeMappings":{"10000":"jira","10001":"jira"},"lastModified":"Today
                6:38 PM","lastModifiedUser":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"name":"Example
                workflow scheme","originalDefaultWorkflow":"jira","originalIssueTypeMappings":{"10001":"builds
                workflow"},"self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if:

             *  the original active workflow scheme is not found.
             *  the original active workflow scheme does not have a draft.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        - read:issue-security-level:jira
        - read:project-role:jira
        - read:screen:jira
        - read:status:jira
        - read:user:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        - write:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Workflow scheme drafts
      summary: Delete draft workflow scheme
      description: |-
        Deletes a draft workflow scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteWorkflowSchemeDraft
      parameters:
      - name: id
        in: path
        description: The ID of the active workflow scheme that the draft was created
          from
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission..
        '404':
          description: |-
            Returned if:

             *  the original active workflow scheme is not found.
             *  the original active workflow scheme does not have a draft.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{fieldId}/context/{contextId}/project/remove:
    post:
      tags:
      - Issue custom field contexts
      summary: Remove custom field context from projects
      description: |-
        Removes a custom field context from projects.

        A custom field context without any projects applies to all projects. Removing all projects from a custom field context would result in it applying to all projects.

        If any project in the request is not assigned to the context, or the operation would result in two global contexts for the field, the operation fails.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeCustomFieldContextFromProjects
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIds'
            example:
              projectIds:
              - '10001'
              - '10005'
              - '10006'
        required: true
      responses:
        '204':
          description: Returned if the custom field context is removed from the projects
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The projectIds must not contain duplicates."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field, context, or one or more projects
            are not found.
          content:
            application/json:
              example: '{"errorMessages":["The context was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /dashboard/{id}/copy:
    post:
      tags:
      - Dashboards
      summary: Copy dashboard
      description: |-
        Copies a dashboard. Any values provided in the `dashboard` parameter replace those in the copied dashboard.

        **[Permissions](#permissions) required:** None

        The dashboard to be copied must be owned by or shared with the user.
      operationId: copyDashboard
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: extendAdminPermissions
        in: query
        description: Whether admin level permissions are used. It should only be true
          if the user has *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: Dashboard details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardDetails'
            example:
              description: A dashboard to help auditors identify sample of issues
                to check.
              editPermissions: [
                ]
              name: Auditors dashboard
              sharePermissions:
              - type: global
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
              example: '{"id":"10000","isFavourite":false,"name":"System Dashboard","popularity":1,"self":"https://your-domain.atlassian.net/rest/api/3/dashboard/10000","sharePermissions":[{"type":"global"}],"view":"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the dashboard is not found or the dashboard is
            not owned by or shared with the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - write:dashboard:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
  /filter/{id}/permission:
    get:
      tags:
      - Filter sharing
      summary: Get share permissions
      description: |-
        Returns the share permissions for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None, however, share permissions are only returned for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: getSharePermissions
      parameters:
      - name: id
        in: path
        description: The ID of the filter
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SharePermission'
              example: '[{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002"},"deleted":true,"deletedBy":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"deletedDate":"2022-11-11T13:35:29.000+0000","id":"10002","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"MKY","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"retentionTillDate":"2023-01-10T13:35:29.000+0000","self":"https://your-domain.atlassian.net/rest/api/3/project/MKY","simplified":false,"style":"classic"},"role":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"}},"type":"project"},{"group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":10010,"type":"group"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to view the filter.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-role:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Filter sharing
      summary: Add share permission
      description: |-
        Add a share permissions to a filter. If you add a global share permission (one for all logged-in users or the public) it will overwrite all share permissions for the filter.

        Be aware that this operation uses different objects for updating share permissions compared to [Update filter](#api-rest-api-3-filter-id-put).

        **[Permissions](#permissions) required:** *Share dashboards and filters* [global permission](https://confluence.atlassian.com/x/x4dKLg) and the user must own the filter.
      operationId: addSharePermission
      parameters:
      - name: id
        in: path
        description: The ID of the filter
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharePermissionInputBean'
            example:
              groupname: jira-administrators
              rights: 1
              type: group
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SharePermission'
              example: '[{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002"},"deleted":true,"deletedBy":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"deletedDate":"2022-11-11T13:35:29.000+0000","id":"10002","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"MKY","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"retentionTillDate":"2023-01-10T13:35:29.000+0000","self":"https://your-domain.atlassian.net/rest/api/3/project/MKY","simplified":false,"style":"classic"},"role":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"}},"type":"project"},{"group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":10010,"type":"group"}]'
        '400':
          description: |-
            Returned if:

             *  the request object is invalid. For example, it contains an invalid type, the ID does not match the type, or the project or group is not found.
             *  the user does not own the filter.
             *  the user does not have the required permissions.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to view the filter.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:filter:jira
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project-role:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /field/{fieldId}/context/{contextId}/issuetype:
    put:
      tags:
      - Issue custom field contexts
      summary: Add issue types to context
      description: |-
        Adds issue types to a custom field context, appending the issue types to the issue types list.

        A custom field context without any issue types applies to all issue types. Adding issue types to such a custom field context would result in it applying to only the listed issue types.

        If any of the issue types exists in the custom field context, the operation fails and no issue types are added.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addIssueTypesToContext
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeIds'
            example:
              issueTypeIds:
              - '10001'
              - '10005'
              - '10006'
        required: true
      responses:
        '204':
          description: Returned if operation is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["These issue types are already associated
                with the context: 10001."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field, context, or one or more issue
            types are not found.
          content:
            application/json:
              example: '{"errorMessages":["The context was not found."],"errors":{}}'
        '409':
          description: Returned if the issue type is a sub-task, but sub-tasks are
            disabled in Jira settings.
          content:
            application/json:
              example: '{"errorMessages":["Sub-tasks are disabled in Jira. At least
                one of the issue types is a sub-task."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /applicationrole:
    get:
      tags:
      - Application roles
      summary: Get all application roles
      description: |-
        Returns all application roles. In Jira, application roles are managed using the [Application access configuration](https://confluence.atlassian.com/x/3YxjL) page.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAllApplicationRoles
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationRole'
              example: '[{"defaultGroups":["jira-software-users"],"defaultGroupsDetails":[{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-software-users","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"}],"defined":false,"groupDetails":[{"groupId":"42c8955c-63d7-42c8-9520-63d7aca0625","name":"jira-testers","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=42c8955c-63d7-42c8-9520-63d7aca0625"},{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-software-users","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"}],"groups":["jira-software-users","jira-testers"],"hasUnlimitedSeats":false,"key":"jira-software","name":"Jira
                Software","numberOfSeats":10,"platform":false,"remainingSeats":5,"selectedByDefault":false,"userCount":5,"userCountDescription":"5
                developers"},{"defaultGroups":["jira-core-users"],"defaultGroupsDetails":[{"groupId":"92d01dca0625-42c8-42c8-9520-276f955c","name":"jira-core-users","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=92d01dca0625-42c8-42c8-9520-276f955c"}],"defined":false,"groupDetails":[{"groupId":"92d01dca0625-42c8-42c8-9520-276f955c","name":"jira-core-users","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=92d01dca0625-42c8-42c8-9520-276f955c"}],"groups":["jira-core-users"],"hasUnlimitedSeats":false,"key":"jira-core","name":"Jira
                Core","numberOfSeats":1,"platform":true,"remainingSeats":1,"selectedByDefault":false,"userCount":0,"userCountDescription":"0
                users"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user is not an administrator.
      deprecated: false
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
  /fieldconfiguration/{id}:
    put:
      tags:
      - Issue field configurations
      summary: Update field configuration
      description: |-
        Updates a field configuration. The name and the description provided in the request override the existing values.

        This operation can only update configurations used in company-managed (classic) projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateFieldConfiguration
      parameters:
      - name: id
        in: path
        description: The ID of the field configuration
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldConfigurationDetails'
            example:
              description: A brand new description
              name: My Modified Field Configuration
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the field configuration is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue field configurations
      summary: Delete field configuration
      description: |-
        Deletes a field configuration.

        This operation can only delete configurations used in company-managed (classic) projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteFieldConfiguration
      parameters:
      - name: id
        in: path
        description: The ID of the field configuration
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the field configuration is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /attachment/{id}:
    get:
      tags:
      - Issue attachments
      summary: Get attachment metadata
      description: |-
        Returns the metadata for an attachment. Note that the attachment itself is not returned.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If attachments are added in private comments, the comment-level restriction will be applied.
      operationId: getAttachment
      parameters:
      - name: id
        in: path
        description: The ID of the attachment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentMetadata'
              example: '{"author":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"content":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10000","created":"2022-10-06T07:32:47.000+0000","filename":"picture.jpg","id":10000,"mimeType":"image/jpeg","self":"https://your-domain.atlassian.net/rest/api/3/attachments/10000","size":23123,"thumbnail":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/thumbnail/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if:

             *  the attachment is not found.
             *  attachments are disabled in the Jira settings.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:attachment:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
    delete:
      tags:
      - Issue attachments
      summary: Delete attachment
      description: |-
        Deletes an attachment from an issue.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** For the project holding the issue containing the attachment:

         *  *Delete own attachments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete an attachment created by the calling user.
         *  *Delete all attachments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete an attachment created by any user.
      operationId: removeAttachment
      parameters:
      - name: id
        in: path
        description: The ID of the attachment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if:

             *  the attachment is not found.
             *  attachments are disabled in the Jira settings.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:attachment:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /screens/{screenId}:
    put:
      tags:
      - Screens
      summary: Update screen
      description: |-
        Updates a screen. Only screens used in classic projects can be updated.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateScreen
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScreenDetails'
            example:
              description: Enables changes to resolution and linked issues for accessibility
                related issues.
              name: Resolve Accessibility Issue Screen
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screen'
              example: '{"id":10005,"name":"Resolve Security Issue Screen","description":"Enables
                changes to resolution and linked issues."}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The name is used by another screen."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can manage screens."],"errors":{}}'
        '404':
          description: Returned if the screen is not found.
          content:
            application/json:
              example: '{"errorMessages":["The screen was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:screen:jira
        - write:screen:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Screens
      summary: Delete screen
      description: |-
        Deletes a screen. A screen cannot be deleted if it is used in a screen scheme, workflow, or workflow draft.

        Only screens used in classic projects can be deleted.
      operationId: deleteScreen
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The screen is used in a screen scheme."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can manage screens."],"errors":{}}'
        '404':
          description: Returned if the screen is not found.
          content:
            application/json:
              example: '{"errorMessages":["The screen was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:screen:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /attachment/thumbnail/{id}:
    get:
      tags:
      - Issue attachments
      summary: Get attachment thumbnail
      description: |-
        Returns the thumbnail of an attachment.

        To return the attachment contents, use [Get attachment content](#api-rest-api-3-attachment-content-id-get).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** For the issue containing the attachment:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If attachments are added in private comments, the comment-level restriction will be applied.
      operationId: getAttachmentThumbnail
      parameters:
      - name: id
        in: path
        description: The ID of the attachment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: redirect
        in: query
        description: Whether a redirect is provided for the attachment download. Clients
          that do not automatically follow redirects can set this to `false` to avoid
          making multiple requests to download the attachment
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: fallbackToDefault
        in: query
        description: Whether a default thumbnail is returned when the requested thumbnail
          is not found
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: width
        in: query
        description: The maximum width to scale the thumbnail to
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: height
        in: query
        description: The maximum height to scale the thumbnail to
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Returned if the request is successful when `redirect` is set
            to `false`
          content:
            application/json:
              schema:
                type: array
                items: {
                  }
        '303':
          description: Returned if the request is successful. See the `Location` header
            for the download URL.
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: The user does not have the necessary permission.
        '404':
          description: |-
            Returned if:

             *  the attachment is not found.
             *  attachments are disabled in the Jira settings.
             *  `fallbackToDefault` is `false` and the request thumbnail cannot be downloaded.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:attachment:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/{projectIdOrKey}/avatar:
    put:
      tags:
      - Project avatars
      summary: Set project avatar
      description: |-
        Sets the avatar displayed for a project.

        Use [Load project avatar](#api-rest-api-3-project-projectIdOrKey-avatar2-post) to store avatars against the project, before using this operation to set the displayed avatar.

        **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: updateProjectAvatar
      parameters:
      - name: projectIdOrKey
        in: path
        description: The ID or (case-sensitive) key of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Avatar'
            example:
              id: '10010'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to administer
            the project.
        '404':
          description: Returned if the project or avatar is not found or the user
            does not have permission to view the project.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project.avatar:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /workflowscheme/{id}/draft/publish:
    post:
      tags:
      - Workflow scheme drafts
      summary: Publish draft workflow scheme
      description: |-
        Publishes a draft workflow scheme.

        Where the draft workflow includes new workflow statuses for an issue type, mappings are provided to update issues with the original workflow status to the new workflow status.

        This operation is [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain updates.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: publishDraftWorkflowScheme
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: validateOnly
        in: query
        description: Whether the request only performs a validation
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        description: Details of the status mappings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishDraftWorkflowScheme'
            example:
              statusMappings:
              - issueTypeId: '10001'
                newStatusId: '1'
                statusId: '3'
              - issueTypeId: '10001'
                newStatusId: '2'
                statusId: '2'
              - issueTypeId: '10002'
                newStatusId: '10003'
                statusId: '10005'
              - issueTypeId: '10003'
                newStatusId: '1'
                statusId: '4'
        required: true
      responses:
        '204':
          description: Returned if the request is only for validation and is successful
        '303':
          description: Returned if the request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              example: '{"errorMessages":["Issue type with ID ''2'',''4'' is missing
                the mappings required for statuses with IDs 10004."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if any of these are true:

             *  The workflow scheme is not found.
             *  The workflow scheme does not have a draft.
             *  A new status in the draft workflow scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["Draft workflow scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /workflow/{workflowId}/projectUsages:
    get:
      tags:
      - Workflows
      summary: Get projects using a given workflow
      description: Returns a page of projects using a given workflow.
      operationId: getProjectUsagesForWorkflow
      parameters:
      - name: workflowId
        in: path
        description: The workflow ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nextPageToken
        in: query
        description: The cursor for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of results to return. Must be an integer between
          1 and 200
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowProjectUsageDTO'
              example: '{"projects":{"nextPageToken":"eyJvIjoyfQ==","values":[{"id":"1003"}]},"workflowId":"fb759d53-a3a4-45ff-9de4-547c4b638dde"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Invalid format of nextPageToken"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '404':
          description: Returned if the workflow with the given ID does not exist.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /plans/plan/{planId}/duplicate:
    post:
      tags:
      - Plans
      summary: Duplicate plan
      description: |-
        Duplicates a plan.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: duplicatePlan
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicatePlanRequest'
            example:
              name: Copied Plan
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan to duplicate is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan to duplicate is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /permissionscheme/{schemeId}:
    get:
      tags:
      - Permission schemes
      summary: Get permission scheme
      description: |-
        Returns a permission scheme.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getPermissionScheme
      parameters:
      - name: schemeId
        in: path
        description: The ID of the permission scheme to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:

           *  `all` Returns all expandable information.
           *  `field` Returns information about the custom field granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `permissions` Returns all permission grants for each permission scheme.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `user` Returns information about the user who is granted the permission
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionScheme'
              example: '{"description":"description","id":10000,"name":"Example permission
                scheme","permissions":[{"holder":{"expand":"group","parameter":"jira-core-users","type":"group","value":"ca85fac0-d974-40ca-a615-7af99c48d24f"},"id":10000,"permission":"ADMINISTER_PROJECTS","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000"}],"self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the permission scheme is not found or the user
            does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission-scheme:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Permission schemes
      summary: Update permission scheme
      description: |-
        Updates a permission scheme. Below are some important things to note when using this resource:

         *  If a permissions list is present in the request, then it is set in the permission scheme, overwriting *all existing* grants.
         *  If you want to update only the name and description, then do not send a permissions list in the request.
         *  Sending an empty list will remove all permission grants from the permission scheme.

        If you want to add or delete a permission grant instead of updating the whole list, see [Create permission grant](#api-rest-api-3-permissionscheme-schemeId-permission-post) or [Delete permission scheme entity](#api-rest-api-3-permissionscheme-schemeId-permission-permissionId-delete).

        See [About permission schemes and grants](../api-group-permission-schemes/#about-permission-schemes-and-grants) for more details.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updatePermissionScheme
      parameters:
      - name: schemeId
        in: path
        description: The ID of the permission scheme to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:

           *  `all` Returns all expandable information.
           *  `field` Returns information about the custom field granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `permissions` Returns all permission grants for each permission scheme.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `user` Returns information about the user who is granted the permission
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionScheme'
            example:
              description: description
              name: Example permission scheme
              permissions:
              - holder:
                  parameter: jira-core-users
                  type: group
                  value: ca85fac0-d974-40ca-a615-7af99c48d24f
                permission: ADMINISTER_PROJECTS
        required: true
      responses:
        '200':
          description: Returned if the scheme is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionScheme'
              example: '{"description":"description","id":10000,"name":"Example permission
                scheme","permissions":[{"holder":{"expand":"group","parameter":"jira-core-users","type":"group","value":"ca85fac0-d974-40ca-a615-7af99c48d24f"},"id":10000,"permission":"ADMINISTER_PROJECTS","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000"}],"self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: |-
            Returned if:

             *  the user does not have the necessary permission to update permission schemes.
             *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be updated on free plans.
        '404':
          description: Returned if the permission scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:permission-scheme:jira
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission-scheme:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Permission schemes
      summary: Delete permission scheme
      description: |-
        Deletes a permission scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deletePermissionScheme
      parameters:
      - name: schemeId
        in: path
        description: The ID of the permission scheme being deleted
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the permission scheme is deleted
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the permission scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:permission-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/component:
    get:
      tags:
      - Project components
      summary: Get project components paginated
      description: |-
        Returns a [paginated](#pagination) list of all components in a project. See the [Get project components](#api-rest-api-3-project-projectIdOrKey-components-get) resource if you want to get a full list of versions without pagination.

        If your project uses Compass components, this API will return a list of Compass components that are linked to issues in that project.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectComponentsPaginated
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `description` Sorts by the component description.
           *  `issueCount` Sorts by the count of issues associated with the component.
           *  `lead` Sorts by the user key of the component's project lead.
           *  `name` Sorts by component name
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - description
          - -description
          - +description
          - issueCount
          - -issueCount
          - +issueCount
          - lead
          - -lead
          - +lead
          - name
          - -name
          - +name
      - name: componentSource
        in: query
        description: The source of the components to return. Can be `jira` (default),
          `compass` or `auto`. When `auto` is specified, the API will return connected
          Compass components if the project is opted into Compass, otherwise it will
          return Jira components. Defaults to `jira`
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - jira
          - compass
          - auto
          default: jira
      - name: query
        in: query
        description: Filter the results using a literal string. Components with a
          matching `name` or `description` are returned (case insensitive)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanComponentWithIssueCount'
              example: '{"isLast":false,"maxResults":2,"nextPage":"https://your-domain.atlassian.net/rest/api/3/project/PR/component?startAt=2&maxResults=2","self":"https://your-domain.atlassian.net/rest/api/3/project/PR/component?startAt=0&maxResults=2","startAt":0,"total":7,"values":[{"assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","componentBean":{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"},"description":"This
                is a Jira component","id":"10000","isAssigneeTypeValid":false,"issueCount":1,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"},{"assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","componentBean":{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-11ee-4e70-be56-0242ac120002/fdb3fdec-4e70-11ee-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a another Jira component","id":"10050","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"PXA","project":"PROJECTKEY","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"},"description":"This
                is a another Jira component","id":"10050","isAssigneeTypeValid":false,"issueCount":5,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"PXA","project":"PROJECTKEY","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:project.component:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /filter/{id}/owner:
    put:
      tags:
      - Filters
      summary: Change filter owner
      description: |-
        Changes the owner of the filter.

        **[Permissions](#permissions) required:** Permission to access Jira. However, the user must own the filter or have the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: changeFilterOwner
      parameters:
      - name: id
        in: path
        description: The ID of the filter to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The account ID of the new owner of the filter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeFilterOwner'
            example:
              accountId: 0000-0000-0000-0000
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: |-
            Returned when:

             *  The new owner of the filter owns a filter with the same name.
             *  An attempt is made to change owner of the default filter.
        '403':
          description: Returned if the requesting user is not an owner of the filter
            or does not have *Administer Jira* global permission.
        '404':
          description: Returned if the filter or the new owner of the filter is not
            found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:filter:jira
        - write:filter:jira
        state: Beta
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      x-experimental: true
      x-atlassian-connect-scope: WRITE
  /issue/{issueIdOrKey}/notify:
    post:
      tags:
      - Issues
      summary: Send notification for issue
      description: |-
        Creates an email notification for an issue and adds it to the mail queue.

        **[Permissions](#permissions) required:**

         *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: notify
      parameters:
      - name: issueIdOrKey
        in: path
        description: ID or key of the issue that the notification is sent for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The request object for the notification and recipients
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
            example:
              htmlBody: The <strong>latest</strong> test results for this ticket are
                now available.
              restrict:
                groupIds: [
                  ]
                groups:
                - name: notification-group
                permissions:
                - key: BROWSE
              subject: Latest test results
              textBody: The latest test results for this ticket are now available.
              to:
                assignee: false
                groupIds: [
                  ]
                groups:
                - name: notification-group
                reporter: false
                users:
                - accountId: 5b10a2844c20165700ede21g
                  active: false
                voters: true
                watchers: true
        required: true
      responses:
        '204':
          description: Returned if the email is queued for sending
          content:
            application/json:
              schema: {
                }
        '400':
          description: |-
            Returned if:

             *  the recipient is the same as the calling user.
             *  the recipient is invalid. For example, the recipient is set to the assignee, but the issue is unassigned.
             *  the issueIdOrKey is of an invalid/null issue.
             *  the request is invalid. For example, required fields are missing or have invalid values.
        '403':
          description: |-
            Returned if:

             *  outgoing emails are disabled.
             *  no SMTP server is configured.
        '404':
          description: Returned if the issue is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - send:notification:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /issuetype/{issueTypeId}/properties/{propertyKey}:
    get:
      tags:
      - Issue type properties
      summary: Get issue type property
      description: |-
        Returns the key and value of the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) to get the details of any issue type.
         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) to get the details of any issue types associated with the projects the user has permission to browse.
      operationId: getIssueTypeProperty
      parameters:
      - name: issueTypeId
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property. Use [Get issue type property keys](#api-rest-api-3-issuetype-issueTypeId-properties-get)
          to get a list of all issue type property keys
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityProperty'
              example: '{"key":"issue.support","value":{"system.conversation.id":"b1bf38be-5e94-4b40-a3b8-9278735ee1e6","system.support.time":"1m"}}'
        '400':
          description: Returned if the issue type ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue type or property is not found or the
            user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue type properties
      summary: Set issue type property
      description: |-
        Creates or updates the value of the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties). Use this resource to store and update data against an issue type.

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setIssueTypeProperty
      parameters:
      - name: issueTypeId
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the issue type property. The maximum length is 255
          characters
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The value of the property. The value has to be a valid, non-empty
          [JSON](https://tools.ietf.org/html/rfc4627) value. The maximum length of
          the property value is 32768 bytes
        content:
          application/json:
            schema: {
              }
            example:
              number: 5
              string: string-value
        required: true
      responses:
        '200':
          description: Returned if the issue type property is updated
          content:
            application/json:
              schema: {
                }
        '201':
          description: Returned if the issue type property is created.
          content:
            application/json:
              schema: {
                }
        '400':
          description: |-
            Returned if:

             *  the issue type ID is invalid.
             *  a property value is not provided.
             *  the property value JSON content is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to modify the
            issue type.
        '404':
          description: |-
            Returned if:

             *  the issue type is not found.
             *  the user does not have the permission view the issue type.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type.property:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue type properties
      summary: Delete issue type property
      description: |-
        Deletes the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteIssueTypeProperty
      parameters:
      - name: issueTypeId
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property. Use [Get issue type property keys](#api-rest-api-3-issuetype-issueTypeId-properties-get)
          to get a list of all issue type property keys
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the issue type property is deleted
        '400':
          description: Returned if the issue type ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the issue type or property is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue-type.property:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/bulkfetch:
    post:
      tags:
      - Issues
      summary: Bulk fetch issues
      description: |-
        Returns the details for a set of requested issues. You can request up to 100 issues.

        Each issue is identified by its ID or key, however, if the identifier doesn't match an issue, a case-insensitive search and check for moved issues is performed. If a matching issue is found its details are returned, a 302 or other redirect is **not** returned.

        Issues will be returned in ascending `id` order. If there are errors, Jira will return a list of issues which couldn't be fetched along with error messages.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Issues are included in the response where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: bulkFetchIssues
      parameters: [
        ]
      requestBody:
        description: A JSON object containing the information about which issues and
          fields to fetch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkFetchIssueRequestBean'
            example:
              expand:
              - names
              fields:
              - summary
              - project
              - assignee
              fieldsByKeys: false
              issueIdsOrKeys:
              - EX-1
              - EX-2
              - '10005'
              properties: [
                ]
        required: true
      responses:
        '200':
          description: Returned if the request is successful. A response may contain
            both successful issues and issue errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkIssueResults'
              example: '{"expand":"schema,names","issueErrors":[],"issues":[{"expand":"","fields":{"summary":"My
                first example issue","project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"assignee":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}},"id":"10002","key":"EX-1","self":"https://your-domain.atlassian.net/rest/api/3/issue/10002"},{"expand":"","fields":{"summary":"My
                second example issue","project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001"},"id":"10001","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"ABC","name":"Alphabetical","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/ABC","simplified":false,"style":"classic"},"assignee":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}},"id":"10005","key":"EX-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/10003"},{"expand":"","fields":{"summary":"My
                fourth example issue","project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002"},"deleted":true,"deletedBy":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"deletedDate":"2022-11-11T13:35:29.000+0000","id":"10002","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"MKY","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"retentionTillDate":"2023-01-10T13:35:29.000+0000","self":"https://your-domain.atlassian.net/rest/api/3/project/MKY","simplified":false,"style":"classic"},"assignee":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}},"id":"10005","key":"EX-4","self":"https://your-domain.atlassian.net/rest/api/3/issue/10005"}]}'
        '400':
          description: Returned if no issue IDs/keys were present, or more than 100
            issue IDs/keys were requested.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-meta:jira
        - read:issue-security-level:jira
        - read:issue.vote:jira
        - read:issue.changelog:jira
        - read:avatar:jira
        - read:issue:jira
        - read:status:jira
        - read:user:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issuesecurityschemes/{id}:
    get:
      tags:
      - Issue security schemes
      summary: Get issue security scheme
      description: |-
        Returns an issue security scheme along with its security levels.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
         *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project that uses the requested issue security scheme.
      operationId: getIssueSecurityScheme
      parameters:
      - name: id
        in: path
        description: The ID of the issue security scheme. Use the [Get issue security
          schemes](#api-rest-api-3-issuesecurityschemes-get) operation to get a list
          of issue security scheme IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityScheme'
              example: '{"defaultSecurityLevelId":10021,"description":"Description
                for the default issue security scheme","id":10000,"levels":[{"description":"Only
                the reporter and internal staff can see this issue.","id":"10021","name":"Reporter
                Only","self":"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021"}],"name":"Default
                Issue Security Scheme","self":"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the administrator permission
            and the scheme is not used in any project where the user has administrative
            permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-security-level:jira
        - read:issue-security-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Issue security schemes
      summary: Update issue security scheme
      description: |-
        Updates the issue security scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateIssueSecurityScheme
      parameters:
      - name: id
        in: path
        description: The ID of the issue security scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueSecuritySchemeRequestBean'
            example:
              description: My issue security scheme description
              name: My issue security scheme name
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The length of the description must not
                exceed 4,000 characters."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue security scheme isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue security scheme with ID 10000 not
                found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /bulk/issues/unwatch:
    post:
      tags:
      - Issue bulk operations
      summary: Bulk unwatch issues
      description: |-
        Use this API to submit a bulk unwatch request. You can unwatch up to 1,000 issues in a single operation.

        **[Permissions](#permissions) required:**

         *  Global bulk change [permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-global-permissions/).
         *  Browse [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) in all projects that contain the selected issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: submitBulkUnwatch
      parameters: [
        ]
      requestBody:
        description: The request body containing the issues to be unwatched
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueBulkWatchOrUnwatchPayload'
            example:
              selectedIssueIdsOrKeys:
              - '10001'
              - '10002'
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedBulkOperation'
              example: '{"taskId":"10641"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
              example: '{"errors":[{"message":"Some of the issues in the issueIdsOrKeys
                are not valid"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /groups/picker:
    get:
      tags:
      - Groups
      summary: Find groups
      description: |-
        Returns a list of groups whose names contain a query string. A list of group names can be provided to exclude groups from the results.

        The primary use case for this resource is to populate a group picker suggestions list. To this end, the returned object includes the `html` field where the matched query term is highlighted in the group name with the HTML strong tag. Also, the groups list is wrapped in a response object that contains a header for use in the picker, specifically *Showing X of Y matching groups*.

        The list returns with the groups sorted. If no groups match the list criteria, an empty list is returned.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg). Anonymous calls and calls by users without the required permission return an empty list.

        *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Without this permission, calls where query is not an exact match to an existing group will return an empty list.
      operationId: findGroups
      parameters:
      - name: accountId
        in: query
        description: This parameter is deprecated, setting it does not affect the
          results. To find groups containing a particular user, use [Get user groups](#api-rest-api-3-user-groups-get)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: query
        in: query
        description: The string to find in group names
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: query
      - name: exclude
        in: query
        description: "As a group's name can change, use of `excludeGroupIds` is recommended\
          \ to identify a group.  \nA group to exclude from the result. To exclude\
          \ multiple groups, provide an ampersand-separated list. For example, `exclude=group1&exclude=group2`.\
          \ This parameter cannot be used with the `excludeGroupIds` parameter"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: excludeId
        in: query
        description: A group ID to exclude from the result. To exclude multiple groups,
          provide an ampersand-separated list. For example, `excludeId=group1-id&excludeId=group2-id`.
          This parameter cannot be used with the `excludeGroups` parameter
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: maxResults
        in: query
        description: The maximum number of groups to return. The maximum number of
          groups that can be returned is limited by the system property `jira.ajax.autocomplete.limit`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: caseInsensitive
        in: query
        description: Whether the search for groups should be case insensitive
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: userName
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoundGroups'
              example: '{"groups":[{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","html":"<b>j</b>dog-developers","name":"jdog-developers"},{"groupId":"6e87dc72-4f1f-421f-9382-2fee8b652487","html":"<b>j</b>uvenal-bot","name":"juvenal-bot"}],"header":"Showing
                20 of 25 matching groups","total":25}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /mypreferences:
    get:
      tags:
      - Myself
      summary: Get preference
      description: |-
        Returns the value of a preference of the current user.

        Note that these keys are deprecated:

         *  *jira.user.locale* The locale of the user. By default this is not set and the user takes the locale of the instance.
         *  *jira.user.timezone* The time zone of the user. By default this is not set and the user takes the timezone of the instance.

        These system preferences keys will be deprecated by 15/07/2024. You can still retrieve these keys, but it will not have any impact on Notification behaviour.

         *  *user.notifications.watcher* Whether the user gets notified when they are watcher.
         *  *user.notifications.assignee* Whether the user gets notified when they are assignee.
         *  *user.notifications.reporter* Whether the user gets notified when they are reporter.
         *  *user.notifications.mentions* Whether the user gets notified when they are mentions.

        Use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API to manage timezone and locale instead.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getPreference
      parameters:
      - name: key
        in: query
        description: The key of the preference
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the key is not provided or not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ACT_AS_USER
    put:
      tags:
      - Myself
      summary: Set preference
      description: |-
        Creates a preference for the user or updates a preference's value by sending a plain text string. For example, `false`. An arbitrary preference can be created with the value containing up to 255 characters. In addition, the following keys define system preferences that can be set or created:

         *  *user.notifications.mimetype* The mime type used in notifications sent to the user. Defaults to `html`.
         *  *user.default.share.private* Whether new [ filters](https://confluence.atlassian.com/x/eQiiLQ) are set to private. Defaults to `true`.
         *  *user.keyboard.shortcuts.disabled* Whether keyboard shortcuts are disabled. Defaults to `false`.
         *  *user.autowatch.disabled* Whether the user automatically watches issues they create or add a comment to. By default, not set: the user takes the instance autowatch setting.
         *  *user.notifiy.own.changes* Whether the user gets notified of their own changes.

        Note that these keys are deprecated:

         *  *jira.user.locale* The locale of the user. By default, not set. The user takes the instance locale.
         *  *jira.user.timezone* The time zone of the user. By default, not set. The user takes the instance timezone.

        These system preferences keys will be deprecated by 15/07/2024. You can still use these keys to create arbitrary preferences, but it will not have any impact on Notification behaviour.

         *  *user.notifications.watcher* Whether the user gets notified when they are watcher.
         *  *user.notifications.assignee* Whether the user gets notified when they are assignee.
         *  *user.notifications.reporter* Whether the user gets notified when they are reporter.
         *  *user.notifications.mentions* Whether the user gets notified when they are mentions.

        Use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API to manage timezone and locale instead.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: setPreference
      parameters:
      - name: key
        in: query
        description: The key of the preference. The maximum length is 255 characters
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The value of the preference as a plain text string. The maximum
          length is 255 characters
        content:
          application/json:
            schema:
              type: string
          text/plain:
            schema:
              type: string
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the key or value is not provided or invalid.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:user-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ACT_AS_USER
    delete:
      tags:
      - Myself
      summary: Delete preference
      description: |-
        Deletes a preference of the user, which restores the default value of system defined settings.

        Note that these keys are deprecated:

         *  *jira.user.locale* The locale of the user. By default, not set. The user takes the instance locale.
         *  *jira.user.timezone* The time zone of the user. By default, not set. The user takes the instance timezone.

        Use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API to manage timezone and locale instead.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: removePreference
      parameters:
      - name: key
        in: query
        description: The key of the preference
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the key is not provided or not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:user-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ACT_AS_USER
  /project-template:
    post:
      tags:
      - Project templates
      summary: Create custom project
      description: |-
        Creates a project based on a custom template provided in the request.

        The request body should contain the project details and the capabilities that comprise the project:

         *  `details` \- represents the project details settings
         *  `template` \- represents a list of capabilities responsible for creating specific parts of a project

        A capability is defined as a unit of configuration for the project you want to create.

        This operation is:

         *  [asynchronous](#async). Follow the `Location` link in the response header to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        ***Note: This API is only supported for Jira Enterprise edition.***
      operationId: createProjectWithCustomTemplate
      parameters: [
        ]
      requestBody:
        description: The JSON payload containing the project details and capabilities
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCustomTemplateCreateRequestDTO'
        required: true
      responses:
        '303':
          description: The project creation task has been queued for execution
          content:
            application/json:
              schema: {
                }
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /worklog/updated:
    get:
      tags:
      - Issue worklogs
      summary: Get IDs of updated worklogs
      description: |-
        Returns a list of IDs and update timestamps for worklogs updated after a date and time.

        This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to youngest. If the number of items in the date range exceeds 1000, `until` indicates the timestamp of the youngest item on the page. Also, `nextPage` provides the URL for the next page of worklogs. The `lastPage` parameter is set to true on the last page of worklogs.

        This resource does not return worklogs updated during the minute preceding the request.

        **[Permissions](#permissions) required:** Permission to access Jira, however, worklogs are only returned where either of the following is true:

         *  the worklog is set as *Viewable by All Users*.
         *  the user is a member of a project role or group with permission to view the worklog.
      operationId: getIdsOfWorklogsModifiedSince
      parameters:
      - name: since
        in: query
        description: The date and time, as a UNIX timestamp in milliseconds, after
          which updated worklogs are returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          worklogs in the response. This parameter accepts `properties` that returns
          the properties of each worklog
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedWorklogs'
              example: '{"lastPage":true,"nextPage":"https://your-domain.atlassian.net/api/~ver~/worklog/updated?since=1438013693136","self":"https://your-domain.atlassian.net/api/~ver~/worklog/updated?since=1438013671562","since":1438013671562,"until":1438013693136,"values":[{"properties":[],"updatedTime":1438013671562,"worklogId":103},{"properties":[],"updatedTime":1438013672165,"worklogId":104},{"properties":[],"updatedTime":1438013693136,"worklogId":105}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-worklog:jira
        - read:issue-worklog.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /expression/eval:
    post:
      tags:
      - Jira expressions
      summary: Evaluate Jira expression
      description: "Evaluates a Jira expression and returns its value.\n\nThis resource\
        \ can be used to test Jira expressions that you plan to use elsewhere, or\
        \ to fetch data in a flexible way. Consult the [Jira expressions documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/)\
        \ for more details.\n\n#### Context variables ####\n\nThe following context\
        \ variables are available to Jira expressions evaluated by this resource.\
        \ Their presence depends on various factors; usually you need to manually\
        \ request them in the context object sent in the payload, but some of them\
        \ are added automatically under certain conditions.\n\n *  `user` ([User](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user)):\
        \ The current user. Always available and equal to `null` if the request is\
        \ anonymous.\n *  `app` ([App](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#app)):\
        \ The [Connect app](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps)\
        \ that made the request. Available only for authenticated requests made by\
        \ Connect Apps (read more here: [Authentication for Connect apps](https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/)).\n\
        \ *  `issue` ([Issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)):\
        \ The current issue. Available only when the issue is provided in the request\
        \ context object.\n *  `issues` ([List](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#list)\
        \ of [Issues](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)):\
        \ A collection of issues matching a JQL query. Available only when JQL is\
        \ provided in the request context object.\n *  `project` ([Project](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#project)):\
        \ The current project. Available only when the project is provided in the\
        \ request context object.\n *  `sprint` ([Sprint](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#sprint)):\
        \ The current sprint. Available only when the sprint is provided in the request\
        \ context object.\n *  `board` ([Board](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#board)):\
        \ The current board. Available only when the board is provided in the request\
        \ context object.\n *  `serviceDesk` ([ServiceDesk](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#servicedesk)):\
        \ The current service desk. Available only when the service desk is provided\
        \ in the request context object.\n *  `customerRequest` ([CustomerRequest](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#customerrequest)):\
        \ The current customer request. Available only when the customer request is\
        \ provided in the request context object.\n\nAlso, custom context variables\
        \ can be passed in the request with their types. Those variables can be accessed\
        \ by key in the Jira expression. These variable types are available for use\
        \ in a custom context:\n\n *  `user`: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user)\
        \ specified as an Atlassian account ID.\n *  `issue`: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)\
        \ specified by ID or key. All the fields of the issue object are available\
        \ in the Jira expression.\n *  `json`: A JSON object containing custom content.\n\
        \ *  `list`: A JSON list of `user`, `issue`, or `json` variable types.\n\n\
        This operation can be accessed anonymously.\n\n**[Permissions](#permissions)\
        \ required**: None. However, an expression may return different results for\
        \ different users depending on their permissions. For example, different users\
        \ may see different comments on the same issue.  \nPermission to access Jira\
        \ Software is required to access Jira Software context variables (`board`\
        \ and `sprint`) or fields (for example, `issue.sprint`)."
      operationId: evaluateJiraExpression
      parameters:
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information in
          the response. This parameter accepts `meta.complexity` that returns information
          about the expression complexity. For example, the number of expensive operations
          used by the expression and how close the expression is to reaching the [complexity
          limit](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#restrictions).
          Useful when designing and debugging your expressions
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The Jira expression and the evaluation context
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraExpressionEvalRequestBean'
            example:
              context:
                board: 10100
                custom:
                  config:
                    type: json
                    value:
                      userId: '10002'
                  issuesList:
                  - key: ACJIRA-1471
                    type: issue
                  - id: 100001
                    type: issue
                  myUser:
                    accountId: '100001'
                    type: user
                  nullField:
                    type: json
                customerRequest: 1450
                issue:
                  key: ACJIRA-1470
                issues:
                  jql:
                    maxResults: 100
                    query: project = HSP
                    startAt: 0
                    validation: strict
                project:
                  key: ACJIRA
                serviceDesk: 10023
                sprint: 10001
              expression: '{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link
                => link.linkedIssue.id), listCustomVariable: issuesList.includes(issue),
                customVariables: myUser.accountId == config.userId}'
        required: true
      responses:
        '200':
          description: Returned if the evaluation results in a value. The result is
            a JSON primitive value, list, or object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraExpressionResult'
              example: '{"value":"The expression''s result. This value can be any
                JSON, not necessarily a String","meta":{"complexity":{"steps":{"value":1,"limit":10000},"expensiveOperations":{"value":3,"limit":10},"beans":{"value":0,"limit":1000},"primitiveValues":{"value":1,"limit":10000}},"issues":{"jql":{"startAt":0,"maxResults":1000,"count":140,"totalCount":140,"validationWarnings":["There
                is a problem with the JQL query."]}}}}'
        '400':
          description: "Returned if:\n\n *  the request is invalid, that is:\n   \
            \ \n     *  invalid data is provided, such as a request including issue\
            \ ID and key.\n     *  the expression is invalid and can not be parsed.\n\
            \ *  evaluation fails at runtime. This may happen for various reasons.\
            \ For example, accessing a property on a null object (such as the expression\
            \ `issue.id` where `issue` is `null`). In this case an error message is\
            \ provided."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Evaluation failed: \"issue[''a'' + ''b'']\"
                - Unrecognized property of `issue`: \"ab\" (''a'' + ''b''). Available
                properties of type ''Issue'' are: ''assignee'', ''comments'', ''description'',
                ''id'', ''issueType'', ''key'', ''priority'', ''project'', ''properties'',
                ''reporter'', ''status'', ''summary''"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if any object provided in the request context is not
            found or the user does not have permission to view it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue does not exist or you do not have
                permission to see it."],"errors":{}}'
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:jira-expressions:jira
        state: Beta
      x-changes:
      - announced: 2024-10-31T00:00:00Z
        details: https://developer.atlassian.com/changelog/#CHANGE-2046
        effective: 2025-05-01T00:00:00Z
        type: removed
      x-atlassian-connect-scope: READ
  /field/{fieldId}/context/projectmapping:
    get:
      tags:
      - Issue custom field contexts
      summary: Get project mappings for custom field context
      description: |-
        Returns a [paginated](#pagination) list of context to project mappings for a custom field. The result can be filtered by `contextId`. Otherwise, all mappings are returned. Invalid IDs are ignored.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getProjectContextMapping
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field, for example `customfield\_10000`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: query
        description: 'The list of context IDs. To include multiple context, separate
          IDs with ampersand: `contextId=10000&contextId=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanCustomFieldContextProjectMapping'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":2,"values":[{"contextId":"10025","projectId":"10001"},{"contextId":"10026","isGlobalContext":true}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field is not found.
          content:
            application/json:
              example: '{"errorMessages":["The custom field was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/{projectKeyOrId}/permissionscheme:
    get:
      tags:
      - Project permission schemes
      summary: Get assigned permission scheme
      description: |-
        Gets the [permission scheme](https://confluence.atlassian.com/x/yodKLg) associated with the project.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg).
      operationId: getAssignedPermissionScheme
      parameters:
      - name: projectKeyOrId
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:

           *  `all` Returns all expandable information.
           *  `field` Returns information about the custom field granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `permissions` Returns all permission grants for each permission scheme.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `user` Returns information about the user who is granted the permission
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionScheme'
              example: '{"description":"description","id":10000,"name":"Example permission
                scheme","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to view the project's
            configuration.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view the project.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission-scheme:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Project permission schemes
      summary: Assign permission scheme
      description: |-
        Assigns a permission scheme with a project. See [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for more information about permission schemes.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
      operationId: assignPermissionScheme
      parameters:
      - name: projectKeyOrId
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:

           *  `all` Returns all expandable information.
           *  `field` Returns information about the custom field granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `permissions` Returns all permission grants for each permission scheme.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `user` Returns information about the user who is granted the permission
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdBean'
            example:
              id: 10000
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionScheme'
              example: '{"description":"description","id":10000,"name":"Example permission
                scheme","self":"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: |-
            Returned if:

             *  the user does not have the necessary permission to edit the project's configuration.
             *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be assigned to projects on free plans.
        '404':
          description: Returned if the project or permission scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:application-role:jira
        - read:field:jira
        - read:group:jira
        - read:permission-scheme:jira
        - read:permission:jira
        - read:project-role:jira
        - read:user:jira
        - write:project:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /workflowscheme/{id}/draft/issuetype/{issueType}:
    get:
      tags:
      - Workflow scheme drafts
      summary: Get workflow for issue type in draft workflow scheme
      description: |-
        Returns the issue type-workflow mapping for an issue type in a workflow scheme's draft.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getWorkflowSchemeDraftIssueType
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: issueType
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTypeWorkflowMapping'
              example: '{"issueType":"10000","workflow":"jira"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme or issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:issue-type:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow scheme drafts
      summary: Set workflow for issue type in draft workflow scheme
      description: |-
        Sets the workflow for an issue type in a workflow scheme's draft.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setWorkflowSchemeDraftIssueType
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: issueType
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The issue type-project mapping
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeWorkflowMapping'
            example:
              issueType: '10000'
              updateDraftIfNeeded: false
              workflow: jira
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"scrum workflow","description":"The description
                of the example workflow scheme.","draft":true,"id":17218781,"issueTypeMappings":{"10000":"jira","10001":"jira"},"lastModified":"Today
                6:38 PM","lastModifiedUser":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"name":"Example
                workflow scheme","originalDefaultWorkflow":"jira","originalIssueTypeMappings":{"10001":"builds
                workflow"},"self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme or issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Workflow scheme drafts
      summary: Delete workflow for issue type in draft workflow scheme
      description: |-
        Deletes the issue type-workflow mapping for an issue type in a workflow scheme's draft.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteWorkflowSchemeDraftIssueType
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme that the draft belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: issueType
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"scrum workflow","description":"The description
                of the example workflow scheme.","draft":true,"id":17218781,"issueTypeMappings":{"10000":"jira","10001":"jira"},"lastModified":"Today
                6:38 PM","lastModifiedUser":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"},"name":"Example
                workflow scheme","originalDefaultWorkflow":"jira","originalIssueTypeMappings":{"10001":"builds
                workflow"},"self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme or issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/remotelink/{linkId}:
    get:
      tags:
      - Issue remote links
      summary: Get remote issue link by ID
      description: |-
        Returns a remote issue link for an issue.

        This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getRemoteIssueLinkById
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: linkId
        in: path
        description: The ID of the remote issue link
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteIssueLink'
              example: '{"application":{"name":"My Acme Tracker","type":"com.acme.tracker"},"globalId":"system=http://www.mycompany.com/support&id=1","id":10000,"object":{"icon":{"title":"Support
                Ticket","url16x16":"http://www.mycompany.com/support/ticket.png"},"status":{"icon":{"link":"http://www.mycompany.com/support?id=1&details=closed","title":"Case
                Closed","url16x16":"http://www.mycompany.com/support/resolved.png"},"resolved":true},"summary":"Customer
                support issue","title":"TSTSUP-111","url":"http://www.mycompany.com/support?id=1"},"relationship":"causes","self":"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000"}'
        '400':
          description: Returned if the link ID is invalid or the remote issue link
            does not belong to the issue.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if issue linking is disabled.
        '404':
          description: Returned if the issue or remote issue link is not found or
            the user does not have permission to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.remote-link:jira
        - read:status:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue remote links
      summary: Update remote issue link by ID
      description: |-
        Updates a remote issue link for an issue.

        Note: Fields without values in the request are set to null.

        This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: updateRemoteIssueLink
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '10000'
        x-showInExample: 'true'
      - name: linkId
        in: path
        description: The ID of the remote issue link
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '10000'
        x-showInExample: 'true'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteIssueLinkRequest'
            example:
              application:
                name: My Acme Tracker
                type: com.acme.tracker
              globalId: system=http://www.mycompany.com/support&id=1
              object:
                icon:
                  title: Support Ticket
                  url16x16: http://www.mycompany.com/support/ticket.png
                status:
                  icon:
                    link: http://www.mycompany.com/support?id=1&details=closed
                    title: Case Closed
                    url16x16: http://www.mycompany.com/support/resolved.png
                  resolved: true
                summary: Customer support issue
                title: TSTSUP-111
                url: http://www.mycompany.com/support?id=1
              relationship: causes
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: |-
            Returned if:

             *  the link ID is invalid.
             *  the remote issue link does not belong to the issue.
             *  the request body is invalid.
          content:
            application/json:
              example: '{"errorMessages":[],"errors":{"title":"''title'' is required."}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to link issues.
        '404':
          description: Returned if the issue or remote issue link is not found or
            the user does not have permission to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - write:issue.remote-link:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue remote links
      summary: Delete remote issue link by ID
      description: |-
        Deletes a remote issue link from an issue.

        This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects*, *Edit issues*, and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: deleteRemoteIssueLinkById
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '10000'
        x-showInExample: 'true'
      - name: linkId
        in: path
        description: The ID of a remote issue link
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '10000'
        x-showInExample: 'true'
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the link ID is invalid or the remote issue link
            does not belong to the issue.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to link issues.
        '404':
          description: Returned if the issue or remote issue link is not found or
            the user does not have permission to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue.remote-link:jira
        - write:issue:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /workflowscheme/read:
    post:
      tags:
      - Workflow schemes
      summary: Bulk get workflow schemes
      description: |-
        Returns a list of workflow schemes by providing workflow scheme IDs or project IDs.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* global permission to access all, including project-scoped, workflow schemes
         *  *Administer projects* project permissions to access project-scoped workflow schemes
      operationId: readWorkflowSchemes
      parameters:
      - name: expand
        in: query
        description: |-
          Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `workflows.usages` Returns the project and issue types that each workflow in the workflow scheme is associated with
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-changes:
        - announced: 2025-02-07T00:00:00Z
          details: https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298
          effective: 2025-07-07T00:00:00Z
          type: removed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowSchemeReadRequest'
            example:
              projectIds:
              - '10047'
              - '10048'
              workflowSchemeIds:
              - 3e59db0f-ed6c-47ce-8d50-80c0c4572677
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowSchemeReadResponse'
              example: '[{"defaultWorkflow":{"description":"This is the default workflow
                for Software Development projects.","id":"3e59db0f-ed6c-47ce-8d50-80c0c4572677","name":"Default
                Software Development Workflow","usage":[{"issueTypeIds":[],"projectId":"10047"}],"version":{"id":"657812fc-bc72-400f-aae0-df8d88db3d9g","versionNumber":1}},"description":"This
                is the workflow scheme for the Software Development project type.","id":"3g78dg2a-ns2n-56ab-9812-42h5j1464567","name":"Software
                Developer Workflow Scheme","projectIdsUsingScheme":["10047"],"scope":{"project":{"id":"10047"},"type":"GLOBAL"},"taskId":"3f83dg2a-ns2n-56ab-9812-42h5j1461629","version":{"id":"527213fc-bc72-400f-aae0-df8d88db2c8a","versionNumber":1},"workflowsForIssueTypes":[{"issueTypeIds":["10013"],"workflow":{"description":"This
                is the workflow for the Software Development bug issue type.","id":"5e79ae0f-ed6c-47ce-8d50-80c0c4572745","name":"Software
                Development Bug Workflow","usage":[{"issueTypeIds":["10013"],"projectId":"10047"}],"version":{"id":"897812dc-bc72-400f-aae0-df8d88fe3d8f","versionNumber":1}}}]}]'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /license/approximateLicenseCount/product/{applicationKey}:
    get:
      tags:
      - License metrics
      summary: Get approximate application license count
      description: |-
        Returns the total approximate number of user accounts for a single Jira license. Note that this information is cached with a 7-day lifecycle and could be stale at the time of call.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getApproximateApplicationLicenseCount
      parameters:
      - name: applicationKey
        in: path
        description: The ID of the application, represents a specific version of Jira
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - jira-core
          - jira-product-discovery
          - jira-software
          - jira-servicedesk
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMetric'
              example: '{"key":"license.jira-software.approximateUserCount","value":"115"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have permission to complete this
            request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only Jira administrators can access license
                details."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:license:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /project/{projectIdOrKey}:
    get:
      tags:
      - Projects
      summary: Get project
      description: |-
        Returns the [project details](https://confluence.atlassian.com/x/ahLpNw) for a project.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProject
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:

           *  `description` The project description.
           *  `issueTypes` The issue types associated with the project.
           *  `lead` The project lead.
           *  `projectKeys` All project keys associated with the project.
           *  `issueTypeHierarchy` The project issue type hierarchy
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: properties
        in: query
        description: A list of project properties to return for the project. This
          parameter accepts a comma-separated list
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: ''
      responses:
        '200':
          description: Returned if successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
              example: '{"assigneeType":"PROJECT_LEAD","avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"components":[{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}],"description":"This
                project was created as an example for REST.","email":"from-jira@example.com","id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"issueTypes":[{"avatarId":1,"description":"A
                task that needs to be done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false},{"avatarId":10002,"description":"A
                problem with the software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}],"key":"EX","lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"properties":{"propertyKey":"propertyValue"},"roles":{"Developers":"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic","url":"https://www.example.com","versions":[]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:project:jira
        - read:project.property:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type-hierarchy:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Projects
      summary: Update project
      description: |-
        Updates the [project details](https://confluence.atlassian.com/x/ahLpNw) of a project.

        All parameters are optional in the body of the request. Schemes will only be updated if they are included in the request, any omitted schemes will be left unchanged.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). is only needed when changing the schemes or project key. Otherwise you will only need *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg)
      operationId: updateProject
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '10001'
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:

           *  `description` The project description.
           *  `issueTypes` The issue types associated with the project.
           *  `lead` The project lead.
           *  `projectKeys` All project keys associated with the project
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: The project details to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectDetails'
            example:
              assigneeType: PROJECT_LEAD
              avatarId: 10200
              categoryId: 10120
              description: Cloud migration initiative
              issueSecurityScheme: 10001
              key: EX
              leadAccountId: 5b10a0effa615349cb016cd8
              name: Example
              notificationScheme: 10021
              permissionScheme: 10011
              url: http://atlassian.com
        required: true
      responses:
        '200':
          description: Returned if the project is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
              example: '{"assigneeType":"PROJECT_LEAD","avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"components":[{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}],"description":"This
                project was created as an example for REST.","email":"from-jira@example.com","id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"issueTypes":[{"avatarId":1,"description":"A
                task that needs to be done.","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\",","id":"3","name":"Task","self":"https://your-domain.atlassian.net/rest/api/3/issueType/3","subtask":false},{"avatarId":10002,"description":"A
                problem with the software.","entityId":"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2","hierarchyLevel":0,"iconUrl":"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\",","id":"1","name":"Bug","scope":{"project":{"id":"10000"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/issueType/1","subtask":false}],"key":"EX","lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"properties":{"propertyKey":"propertyValue"},"roles":{"Developers":"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic","url":"https://www.example.com","versions":[]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: |-
            Returned if:

             *  the user does not have the necessary permission to update project details.
             *  the permission scheme is being changed and the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be changed on free plans.
        '404':
          description: Returned if the project is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:project:jira
        - read:project.property:jira
        - read:user:jira
        - write:project:jira
        - write:project.avatar:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type-hierarchy:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Projects
      summary: Delete project
      description: |-
        Deletes a project.

        You can't delete a project if it's archived. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteProject
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '10001'
      - name: enableUndo
        in: query
        description: Whether this project is placed in the Jira recycle bin where
          it will be available for restoration
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      responses:
        '204':
          description: Returned if the project is deleted
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to delete it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /filter/{id}/columns:
    get:
      tags:
      - Filters
      summary: Get columns
      description: |-
        Returns the columns configured for a filter. The column configuration is used when the filter's results are viewed in *List View* with the *Columns* set to *Filter*.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None, however, column details are only returned for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: getColumns
      parameters:
      - name: id
        in: path
        description: The ID of the filter
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ColumnItem'
              example: '[{"label":"Key","value":"issuekey"},{"label":"Summary","value":"summary"}]'
        '400':
          description: Returned if the user does not have permission to view the filter.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if a column configuration is not set for the filter.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter.column:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Filters
      summary: Set columns
      description: |-
        Sets the columns for a filter. Only navigable fields can be set as columns. Use [Get fields](#api-rest-api-3-field-get) to get the list fields in Jira. A navigable field has `navigable` set to `true`.

        The parameters for this resource are expressed as HTML form data. For example, in curl:

        `curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/filter/10000/columns`

        **[Permissions](#permissions) required:** Permission to access Jira, however, columns are only set for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: setColumns
      parameters:
      - name: id
        in: path
        description: The ID of the filter
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The IDs of the fields to set as columns. In the form data, specify
          each field as `columns=id`, where `id` is the *id* of a field (as seen in
          the response for [Get fields](#api-rest-api-<ver>-field-get)). For example,
          `columns=summary`
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ColumnRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/ColumnRequestBody'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ColumnRequestBody'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: |-
            Returned if:

             *  a non-navigable field is set as a column.
             *  the user does not have permission to view the filter.
        '403':
          description: Returned if the requesting user is not an owner of the filter.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:filter.column:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Filters
      summary: Reset columns
      description: |-
        Reset the user's column configuration for the filter to the default.

        **[Permissions](#permissions) required:** Permission to access Jira, however, columns are only reset for:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: resetColumns
      parameters:
      - name: id
        in: path
        description: The ID of the filter
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: |-
            Returned if:

             *  the filter is not found.
             *  the user does not have permission to view the filter.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - delete:filter.column:jira
        state: Beta
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      x-atlassian-connect-scope: DELETE
  /user/permission/search:
    get:
      tags:
      - User search
      summary: Find users with permissions
      description: |-
        Returns a list of users who fulfill these criteria:

         *  their user attributes match a search string.
         *  they have a set of permissions for a project or issue.

        If no search string is provided, a list of all users with the permissions is returned.

        This operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that match the search string and have permission for the project or issue. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the search string and have permission for the project or issue, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.

        Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get users for any project.
         *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project, to get users for that project.
      operationId: findUsersWithAllPermissions
      parameters:
      - name: query
        in: query
        description: A query string that is matched against user attributes, such
          as `displayName` and `emailAddress`, to find relevant users. The string
          can match the prefix of the attribute's value. For example, *query=john*
          matches a user with a `displayName` of *John Smith* and a user with an `emailAddress`
          of *johnson@example.com*. Required, unless `accountId` is specified
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: query
        x-showInExample: 'true'
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountId
        in: query
        description: A query string that is matched exactly against user `accountId`.
          Required, unless `query` is specified
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
      - name: permissions
        in: query
        description: "A comma separated list of permissions. Permissions can be specified\
          \ as any:\n\n *  permission returned by [Get all permissions](#api-rest-api-3-permissions-get).\n\
          \ *  custom project permission added by Connect apps.\n *  (deprecated)\
          \ one of the following:\n    \n     *  ASSIGNABLE\\_USER\n     *  ASSIGN\\\
          _ISSUE\n     *  ATTACHMENT\\_DELETE\\_ALL\n     *  ATTACHMENT\\_DELETE\\\
          _OWN\n     *  BROWSE\n     *  CLOSE\\_ISSUE\n     *  COMMENT\\_DELETE\\\
          _ALL\n     *  COMMENT\\_DELETE\\_OWN\n     *  COMMENT\\_EDIT\\_ALL\n   \
          \  *  COMMENT\\_EDIT\\_OWN\n     *  COMMENT\\_ISSUE\n     *  CREATE\\_ATTACHMENT\n\
          \     *  CREATE\\_ISSUE\n     *  DELETE\\_ISSUE\n     *  EDIT\\_ISSUE\n\
          \     *  LINK\\_ISSUE\n     *  MANAGE\\_WATCHER\\_LIST\n     *  MODIFY\\\
          _REPORTER\n     *  MOVE\\_ISSUE\n     *  PROJECT\\_ADMIN\n     *  RESOLVE\\\
          _ISSUE\n     *  SCHEDULE\\_ISSUE\n     *  SET\\_ISSUE\\_SECURITY\n     *\
          \  TRANSITION\\_ISSUE\n     *  VIEW\\_VERSION\\_CONTROL\n     *  VIEW\\\
          _VOTERS\\_AND\\_WATCHERS\n     *  VIEW\\_WORKFLOW\\_READONLY\n     *  WORKLOG\\\
          _DELETE\\_ALL\n     *  WORKLOG\\_DELETE\\_OWN\n     *  WORKLOG\\_EDIT\\\
          _ALL\n     *  WORKLOG\\_EDIT\\_OWN\n     *  WORK\\_ISSUE"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: issueKey
        in: query
        description: The issue key for the issue
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectKey
        in: query
        description: The project key for the project (case sensitive)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example: '[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},{"accountId":"5b10ac8d82e05b22cc7d4ef5","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48"},"displayName":"Emma
                Richards","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5"}]'
        '400':
          description: |-
            Returned if:

             *  `issueKey` or `projectKey` is missing.
             *  `query` or `accountId` is missing.
             *  `query` and `accountId` are provided.
             *  `permissions` is empty or contains an invalid entry.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the issue or project is not found.
        '429':
          description: Returned if the rate limit is exceeded. User search endpoints
            share a collective rate limit for the tenant, in addition to Jira's normal
            rate limiting you may receive a rate limit for user search. Please respect
            the Retry-After header.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue:jira
        - read:project:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /comment/{commentId}/properties/{propertyKey}:
    get:
      tags:
      - Issue comment properties
      summary: Get comment property
      description: |-
        Returns the value of a comment property.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to.
      operationId: getCommentProperty
      parameters:
      - name: commentId
        in: path
        description: The ID of the comment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityProperty'
              example: '{"key":"issue.support","value":{"system.conversation.id":"b1bf38be-5e94-4b40-a3b8-9278735ee1e6","system.support.time":"1m"}}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the comment or the property is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue comment properties
      summary: Set comment property
      description: |-
        Creates or updates the value of a property for a comment. Use this resource to store custom data against a comment.

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.

        **[Permissions](#permissions) required:** either of:

         *  *Edit All Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to create or update the value of a property on any comment.
         *  *Edit Own Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to create or update the value of a property on a comment created by the user.

        Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group.
      operationId: setCommentProperty
      parameters:
      - name: commentId
        in: path
        description: The ID of the comment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property. The maximum length is 255 characters
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The value of the property. The value has to be a valid, non-empty
          [JSON](https://tools.ietf.org/html/rfc4627) value. The maximum length of
          the property value is 32768 bytes
        content:
          application/json:
            schema: {
              }
        required: true
      responses:
        '200':
          description: Returned if the comment property is updated
          content:
            application/json:
              schema: {
                }
        '201':
          description: Returned if the comment property is created.
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the comment is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:comment.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue comment properties
      summary: Delete comment property
      description: |-
        Deletes a comment property.

        **[Permissions](#permissions) required:** either of:

         *  *Edit All Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete a property from any comment.
         *  *Edit Own Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete a property from a comment created by the user.

        Also, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group.
      operationId: deleteCommentProperty
      parameters:
      - name: commentId
        in: path
        description: The ID of the comment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the comment or the property is not found or the
            user has the necessary project permissions but isn't a member of the role
            or group visibility of the comment is restricted to.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:comment.property:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /project/{projectIdOrKey}/classification-level/default:
    get:
      tags:
      - Project classification levels
      summary: Get the default data classification level of a project
      description: |-
        Returns the default data classification for a project.

        **[Permissions](#permissions) required:**

         *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getDefaultProjectClassification
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case-sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
              example: '{"classification":{"id":"ari:cloud:platform::classification-tag/5bfa70f7-4af1-44f5-9e12-1ce185f15a38","status":"published","name":"Restricted","rank":1,"description":"Data
                we hold that would be very damaging and would cause loss of trust
                with customers and present legal risk if mishandled","guideline":"Access
                to data must be restricted to only individuals who need access in
                order to perform their job duties.","color":"RED"}}'
        '401':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the project is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Project classification levels
      summary: Update the default data classification level of a project
      description: |-
        Updates the default data classification level for a project.

        **[Permissions](#permissions) required:**

         *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateDefaultProjectClassification
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case-sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultProjectClassificationBean'
            example:
              id: ari:cloud:platform::classification-tag/dec24c48-5073-4c25-8fef-9d81a992c30c
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the project is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Project classification levels
      summary: Remove the default data classification level from a project
      description: |-
        Remove the default data classification level for a project.

        **[Permissions](#permissions) required:**

         *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeDefaultProjectClassification
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case-sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the project is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /dashboard/{dashboardId}/gadget:
    get:
      tags:
      - Dashboards
      summary: Get gadgets
      description: |-
        Returns a list of dashboard gadgets on a dashboard.

        This operation returns:

         *  Gadgets from a list of IDs, when `id` is set.
         *  Gadgets with a module key, when `moduleKey` is set.
         *  Gadgets from a list of URIs, when `uri` is set.
         *  All gadgets, when no other parameters are set.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getAllGadgets
      parameters:
      - name: dashboardId
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: moduleKey
        in: query
        description: 'The list of gadgets module keys. To include multiple module
          keys, separate module keys with ampersand: `moduleKey=key:one&moduleKey=key:two`'
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: ''
      - name: uri
        in: query
        description: 'The list of gadgets URIs. To include multiple URIs, separate
          URIs with ampersand: `uri=/rest/example/uri/1&uri=/rest/example/uri/2`'
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: ''
      - name: gadgetId
        in: query
        description: 'The list of gadgets IDs. To include multiple IDs, separate IDs
          with ampersand: `gadgetId=10000&gadgetId=10001`'
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardGadgetResponse'
              example: '{"gadgets":[{"id":10001,"moduleKey":"com.atlassian.plugins.atlassian-connect-plugin:com.atlassian.connect.node.sample-addon__sample-dashboard-item","color":"blue","position":{"row":0,"column":0},"title":"Issue
                statistics"},{"id":10002,"moduleKey":"com.atlassian.plugins.atlassian-connect-plugin:com.atlassian.connect.node.sample-addon__sample-dashboard-graph","color":"red","position":{"row":1,"column":0},"title":"Activity
                stream"},{"id":10003,"moduleKey":"com.atlassian.plugins.atlassian-connect-plugin:com.atlassian.connect.node.sample-addon__sample-dashboard-item","color":"yellow","position":{"row":0,"column":1},"title":"Bubble
                chart"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if the dashboard is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The dashboard you requested either does
                not exist or you don''t have the required permissions to perform this
                action."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Dashboards
      summary: Add gadget to dashboard
      description: |-
        Adds a gadget to a dashboard.

        **[Permissions](#permissions) required:** None.
      operationId: addGadget
      parameters:
      - name: dashboardId
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardGadgetSettings'
            example:
              color: blue
              ignoreUriAndModuleKeyValidation: false
              moduleKey: com.atlassian.plugins.atlassian-connect-plugin:com.atlassian.connect.node.sample-addon__sample-dashboard-item
              position:
                column: 1
                row: 0
              title: Issue statistics
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardGadget'
              example: '{"color":"blue","id":10001,"moduleKey":"com.atlassian.plugins.atlassian-connect-plugin:com.atlassian.connect.node.sample-addon__sample-dashboard-item","position":{"column":1,"row":0},"title":"Issue
                statistics"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Cannot add another gadget. The maximum
                number of gadgets the dashboard can hold has been reached."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the dashboard is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The dashboard you requested either does
                not exist or you don''t have the required permissions to perform this
                action."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:dashboard:jira
        - read:dashboard:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
  /search/jql:
    get:
      tags:
      - Issue search
      summary: Search for issues using JQL enhanced search (GET)
      description: |-
        Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ). Recent updates might not be immediately visible in the returned search results. If you need [read-after-write](https://developer.atlassian.com/cloud/jira/platform/search-and-reconcile/) consistency, you can utilize the `reconcileIssues` parameter to ensure stronger consistency assurances. This operation can be accessed anonymously.

        If the JQL query expression is too large to be encoded as a query parameter, use the [POST](#api-rest-api-3-search-post) version of this resource.

        **[Permissions](#permissions) required:** Issues are included in the response where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: searchAndReconsileIssuesUsingJql
      parameters:
      - name: jql
        in: query
        description: |-
          A [JQL](https://confluence.atlassian.com/x/egORLQ) expression. For performance reasons, this parameter requires a bounded query. A bounded query is a query with a search restriction.

           *  Example of an unbounded query: `order by key desc`.
           *  Example of a bounded query: `assignee = currentUser() order by key`.

          Additionally, `orderBy` clause can contain a maximum of 7 fields
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: project = HSP
        x-showInExample: 'true'
      - name: nextPageToken
        in: query
        description: |-
          The token for a page to fetch that is not the first page. The first page has a `nextPageToken` of `null`. Use the `nextPageToken` to fetch the next page of issues.

          Note: The `nextPageToken` field is **not included** in the response for the last page, indicating there is no next page
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: <string>
        x-showInExample: 'true'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page. To manage page
          size, API may return fewer items per page where a large number of fields
          or properties are requested. The greatest number of items returned per page
          is achieved when requesting `id` or `key` only. It returns max 5000 issues
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 114
          default: 50
        x-showInExample: 'true'
      - name: fields
        in: query
        description: |-
          A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:

           *  `*all` Returns all fields.
           *  `*navigable` Returns navigable fields.
           *  `id` Returns only issue IDs.
           *  Any issue field, prefixed with a minus to exclude.

          The default is `id`.

          Examples:

           *  `summary,comment` Returns only the summary and comments fields only.
           *  `-description` Returns all navigable (default) fields except description.
           *  `*all,-comment` Returns all fields except comments.

          Multiple `fields` parameters can be included in a request.

          Note: By default, this resource returns IDs only. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: id
        x-showInExample: 'true'
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about issues in the response. Note that, unlike the majority of instances where `expand` is specified, `expand` is defined as a comma-delimited string of values. The expand options are:

           *  `renderedFields` Returns field values rendered in HTML format.
           *  `names` Returns the display name of each field.
           *  `schema` Returns the schema describing a field type.
           *  `transitions` Returns all possible transitions for the issue.
           *  `operations` Returns all possible operations for the issue.
           *  `editmeta` Returns information about how each field can be edited.
           *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
           *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version.

          Examples: `"names,changelog"` Returns the display name of each field as well as a list of recent updates to an issue
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: <string>
        x-showInExample: 'true'
      - name: properties
        in: query
        description: A list of up to 5 issue properties to include in the results.
          This parameter accepts a comma-separated list
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: fieldsByKeys
        in: query
        description: Reference fields by their key (rather than ID). The default is
          `false`
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: failFast
        in: query
        description: Fail this request early if we can't retrieve all field data
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: reconcileIssues
        in: query
        description: Strong consistency issue ids to be reconciled with search results.
          Accepts max 50 ids
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAndReconcileResults'
              example: '{"isLast":true,"issues":[{"expand":"","fields":{"watcher":{"isWatching":false,"self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers","watchCount":1},"attachment":[{"author":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"content":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10001","created":"2023-06-24T19:24:50.000+0000","filename":"debuglog.txt","id":10001,"mimeType":"text/plain","self":"https://your-domain.atlassian.net/rest/api/2/attachments/10001","size":2460}],"sub-tasks":[{"id":"10000","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10003","key":"ED-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/ED-2"},"type":{"id":"10000","inward":"Parent","name":"","outward":"Sub-task"}}],"description":"Main
                order flow broken","project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"comment":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper.","created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}],"issuelinks":[{"id":"10001","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004L","key":"PR-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-2"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}},{"id":"10002","inwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004","key":"PR-3","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-3"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}}],"worklog":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"comment":"I
                did some work here.","id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}],"updated":1,"timetracking":{"originalEstimate":"10m","originalEstimateSeconds":600,"remainingEstimate":"3m","remainingEstimateSeconds":200,"timeSpent":"6m","timeSpentSeconds":400}},"id":"10002","key":"ED-1","self":"https://your-domain.atlassian.net/rest/api/3/issue/10002"}]}'
        '400':
          description: Returned if the search request is invalid
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-details:jira
        - read:audit-log:jira
        - read:avatar:jira
        - read:field-configuration:jira
        - read:issue-meta:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue search
      summary: Search for issues using JQL enhanced search (POST)
      description: |-
        Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ). Recent updates might not be immediately visible in the returned search results. If you need [read-after-write](https://developer.atlassian.com/cloud/jira/platform/search-and-reconcile/) consistency, you can utilize the `reconcileIssues` parameter to ensure stronger consistency assurances. This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Issues are included in the response where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: searchAndReconsileIssuesUsingJqlPost
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAndReconcileRequestBean'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAndReconcileResults'
              example: '{"isLast":true,"issues":[{"expand":"","fields":{"watcher":{"isWatching":false,"self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers","watchCount":1},"attachment":[{"author":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"content":"https://your-domain.atlassian.net/jira/rest/api/3/attachment/content/10001","created":"2023-06-24T19:24:50.000+0000","filename":"debuglog.txt","id":10001,"mimeType":"text/plain","self":"https://your-domain.atlassian.net/rest/api/2/attachments/10001","size":2460}],"sub-tasks":[{"id":"10000","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10003","key":"ED-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/ED-2"},"type":{"id":"10000","inward":"Parent","name":"","outward":"Sub-task"}}],"description":"Main
                order flow broken","project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"comment":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"body":"Lorem
                ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget
                venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper
                quam laoreet nisi egestas at posuere augue semper.","created":"2021-01-17T12:34:00.000+0000","id":"10000","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000","updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"Administrators","type":"role","value":"Administrators"}}],"issuelinks":[{"id":"10001","outwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004L","key":"PR-2","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-2"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}},{"id":"10002","inwardIssue":{"fields":{"status":{"iconUrl":"https://your-domain.atlassian.net/images/icons/statuses/open.png","name":"Open"}},"id":"10004","key":"PR-3","self":"https://your-domain.atlassian.net/rest/api/3/issue/PR-3"},"type":{"id":"10000","inward":"depends
                on","name":"Dependent","outward":"is depended by"}}],"worklog":[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"comment":"I
                did some work here.","id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}],"updated":1,"timetracking":{"originalEstimate":"10m","originalEstimateSeconds":600,"remainingEstimate":"3m","remainingEstimateSeconds":200,"timeSpent":"6m","timeSpentSeconds":400}},"id":"10002","key":"ED-1","self":"https://your-domain.atlassian.net/rest/api/3/issue/10002"}]}'
        '400':
          description: Returned if the search request is invalid
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-details:jira
        - read:field.default-value:jira
        - read:field.option:jira
        - read:field:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/{projectKeyOrId}/securitylevel:
    get:
      tags:
      - Project permission schemes
      summary: Get project issue security levels
      description: |-
        Returns all [issue security](https://confluence.atlassian.com/x/J4lKLg) levels for the project that the user has access to.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project, however, issue security levels are only returned for authenticated user with *Set Issue Security* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project.
      operationId: getSecurityLevelsForProject
      parameters:
      - name: projectKeyOrId
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectIssueSecurityLevels'
              example: '{"levels":[{"description":"Only the reporter and internal
                staff can see this issue.","id":"100000","name":"Reporter Only","self":"https://your-domain.atlassian.net/rest/api/3/securitylevel/100000"},{"description":"Only
                internal staff can see this issue.","id":"100001","name":"Staff Only","self":"https://your-domain.atlassian.net/rest/api/3/securitylevel/100001"}]}'
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-security-level:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /user/bulk/migration:
    get:
      tags:
      - Users
      summary: Get account IDs for users
      description: |-
        Returns the account IDs for the users specified in the `key` or `username` parameters. Note that multiple `key` or `username` parameters can be specified.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: bulkGetUsersMigration
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: username
        in: query
        description: Username of a user. To specify multiple users, pass multiple
          copies of this parameter. For example, `username=fred&username=barney`.
          Required if `key` isn't provided. Cannot be provided if `key` is present
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: key
        in: query
        description: Key of a user. To specify multiple users, pass multiple copies
          of this parameter. For example, `key=fred&key=barney`. Required if `username`
          isn't provided. Cannot be provided if `username` is present
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserMigrationBean'
              example: '[{"username":"mia","accountId":"5b10a2844c20165700ede21g"},{"username":"emma","accountId":"5b10ac8d82e05b22cc7d4ef5"}]'
        '400':
          description: Returned if `key` or `username`
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /classification-levels:
    get:
      tags:
      - Classification levels
      summary: Get all classification levels
      description: |-
        Returns all classification levels.

        **[Permissions](#permissions) required:** None.
      operationId: getAllUserDataClassificationLevels
      parameters:
      - name: status
        in: query
        description: Optional set of statuses to filter by
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            description: The status of the project classification.
            enum:
            - PUBLISHED
            - ARCHIVED
            - DRAFT
            default: ''
      - name: orderBy
        in: query
        description: Ordering of the results by a given field. If not provided, values
          will not be sorted
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - rank
          - -rank
          - +rank
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataClassificationLevelsBean'
              example: '{"classifications":[{"id":"ari:cloud:platform::classification-tag/5bfa70f7-4af1-44f5-9e12-1ce185f15a38","status":"published","name":"Restricted","rank":1,"description":"Data
                we hold that would be very damaging and would cause loss of trust
                with customers and present legal risk to Atlassian and/or customers
                if mishandled","guideline":"Access to data must be restricted to only
                individuals who need access in order to perform their job duties.","color":"RED"},{"id":"ari:cloud:platform::classification-tag/bd58e74c-c31b-41a7-ba69-9673ebd9dae9","status":"archived","name":"Protected","rank":2,"description":"Data
                we hold that could cause loss of trust with customers or present legal
                risk to Atlassian if mishandled","guideline":"Access to systems or
                APIs mapping data to other identifiers must be carefully controlled.","color":"ORANGE"},{"id":"ari:cloud:platform::classification-tag/a82d653e-1035-4aa2-b9de-4265511fd487","status":"published","name":"Confidential","rank":3,"description":"Data
                we hold that would likely be damaging and could cause loss of trust
                with our customers if mishandled","guideline":"Data should be encrypted
                at rest and in transit.","color":"BLUE"},{"id":"ari:cloud:platform::classification-tag/a82d653e-1035-4aa2-b9de-4265511fd487","status":"published","name":"system-tag"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /issuesecurityschemes/{issueSecuritySchemeId}/members:
    get:
      tags:
      - Issue security level
      summary: Get issue security level members by issue security scheme
      description: |-
        Returns issue security level members.

        Only issue security level members in context of classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueSecurityLevelMembers
      parameters:
      - name: issueSecuritySchemeId
        in: path
        description: The ID of the issue security scheme. Use the [Get issue security
          schemes](#api-rest-api-3-issuesecurityschemes-get) operation to get a list
          of issue security scheme IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: issueSecurityLevelId
        in: query
        description: 'The list of issue security level IDs. To include multiple issue
          security levels separate IDs with ampersand: `issueSecurityLevelId=10000&issueSecurityLevelId=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: expand
        in: query
        description: |-
          Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `all` Returns all expandable information.
           *  `field` Returns information about the custom field granted the permission.
           *  `group` Returns information about the group that is granted the permission.
           *  `projectRole` Returns information about the project role granted the permission.
           *  `user` Returns information about the user who is granted the permission
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueSecurityLevelMember'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":3,"values":[{"id":10000,"issueSecurityLevelId":10020,"holder":{"expand":"user","type":"user","user":{"accountId":"5b10a2844c20165700ede21g","active":true,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}}},{"id":10001,"issueSecurityLevelId":10020,"holder":{"expand":"group","parameter":"jira-core-users","type":"group","value":"9c559b11-6c5d-4f96-992c-a746cabab28b"}},{"id":10002,"issueSecurityLevelId":10021,"holder":{"type":"assignee"}}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if no issue security level members are found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:issue-security-level:jira
        - read:project-role:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/version:
    get:
      tags:
      - Project versions
      summary: Get project versions paginated
      description: |-
        Returns a [paginated](#pagination) list of all versions in a project. See the [Get project versions](#api-rest-api-3-project-projectIdOrKey-versions-get) resource if you want to get a full list of versions without pagination.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectVersionsPaginated
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `description` Sorts by version description.
           *  `name` Sorts by version name.
           *  `releaseDate` Sorts by release date, starting with the oldest date. Versions with no release date are listed last.
           *  `sequence` Sorts by the order of appearance in the user interface.
           *  `startDate` Sorts by start date, starting with the oldest date. Versions with no start date are listed last
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - description
          - -description
          - +description
          - name
          - -name
          - +name
          - releaseDate
          - -releaseDate
          - +releaseDate
          - sequence
          - -sequence
          - +sequence
          - startDate
          - -startDate
          - +startDate
      - name: query
        in: query
        description: Filter the results using a literal string. Versions with matching
          `name` or `description` are returned (case insensitive)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: A list of status values used to filter the results by version
          status. This parameter accepts a comma-separated list. The status values
          are `released`, `unreleased`, and `archived`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `issuesstatus` Returns the number of issues in each status category for each version.
           *  `operations` Returns actions that can be performed on the specified version.
           *  `driver` Returns the Atlassian account ID of the version driver.
           *  `approvers` Returns a list containing the approvers for this version
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanVersion'
              example: '{"isLast":false,"maxResults":2,"nextPage":"https://your-domain.atlassian.net/rest/api/3/project/PR/version?startAt=2&maxResults=2","self":"https://your-domain.atlassian.net/rest/api/3/project/PR/version?startAt=0&maxResults=2","startAt":0,"total":7,"values":[{"archived":false,"description":"An
                excellent version","id":"10000","name":"New Version 1","overdue":true,"projectId":10000,"releaseDate":"2010-07-06","released":true,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000","userReleaseDate":"6/Jul/2010"},{"archived":false,"description":"Minor
                Bugfix version","id":"10010","issuesStatusForFixVersion":{"done":100,"inProgress":20,"toDo":10,"unmapped":0},"name":"Next
                Version","overdue":false,"projectId":10000,"released":false,"self":"https://your-domain.atlassian.net/rest/api/3/version/10010"}]}'
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-version:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /worklog/list:
    post:
      tags:
      - Issue worklogs
      summary: Get worklogs
      description: |-
        Returns worklog details for a list of worklog IDs.

        The returned list of worklogs is limited to 1000 items.

        **[Permissions](#permissions) required:** Permission to access Jira, however, worklogs are only returned where either of the following is true:

         *  the worklog is set as *Viewable by All Users*.
         *  the user is a member of a project role or group with permission to view the worklog.
      operationId: getWorklogsForIds
      parameters:
      - name: expand
        in: query
        description: Use [expand](#expansion) to include additional information about
          worklogs in the response. This parameter accepts `properties` that returns
          the properties of each worklog
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      requestBody:
        description: A JSON object containing a list of worklog IDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorklogIdsRequestBean'
            example:
              ids:
              - 1
              - 2
              - 5
              - 10
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Worklog'
              example: '[{"author":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"comment":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"type":"text","text":"I
                did some work here."}]}]},"id":"100028","issueId":"10002","self":"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000","started":"2021-01-17T12:34:00.000+0000","timeSpent":"3h
                20m","timeSpentSeconds":12000,"updateAuthor":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"updated":"2021-01-18T23:45:00.000+0000","visibility":{"identifier":"276f955c-63d7-42c8-9520-92d01dca0625","type":"group","value":"jira-developers"}}]'
        '400':
          description: Returned if the request contains more than 1000 worklog IDs
            or is empty.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment:jira
        - read:group:jira
        - read:issue-worklog:jira
        - read:issue-worklog.property:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issuetypescheme/mapping:
    get:
      tags:
      - Issue type schemes
      summary: Get issue type scheme items
      description: |-
        Returns a [paginated](#pagination) list of issue type scheme items.

        Only issue type scheme items used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getIssueTypeSchemesMapping
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: issueTypeSchemeId
        in: query
        description: The list of issue type scheme IDs. To include multiple IDs, provide
          an ampersand-separated list. For example, `issueTypeSchemeId=10000&issueTypeSchemeId=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueTypeSchemeMapping'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":4,"values":[{"issueTypeSchemeId":"10000","issueTypeId":"10000"},{"issueTypeSchemeId":"10000","issueTypeId":"10001"},{"issueTypeSchemeId":"10000","issueTypeId":"10002"},{"issueTypeSchemeId":"10001","issueTypeId":"10000"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{fieldId}/context/mapping:
    post:
      tags:
      - Issue custom field contexts
      summary: Get custom field contexts for projects and issue types
      description: |-
        Returns a [paginated](#pagination) list of project and issue type mappings and, for each mapping, the ID of a [custom field context](https://confluence.atlassian.com/x/k44fOw) that applies to the project and issue type.

        If there is no custom field context assigned to the project then, if present, the custom field context that applies to all projects is returned if it also applies to the issue type or all issue types. If a custom field context is not found, the returned custom field context ID is `null`.

        Duplicate project and issue type mappings cannot be provided in the request.

        The order of the returned values is the same as provided in the request.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getCustomFieldContextsForProjectsAndIssueTypes
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      requestBody:
        description: The list of project and issue type mappings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectIssueTypeMappings'
            example:
              mappings:
              - issueTypeId: '10000'
                projectId: '10000'
              - issueTypeId: '10001'
                projectId: '10000'
              - issueTypeId: '10002'
                projectId: '10001'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanContextForProjectAndIssueType'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":3,"values":[{"projectId":"10000","issueTypeId":"10000","contextId":"10000"},{"projectId":"10000","issueTypeId":"10001","contextId":null},{"projectId":"10001","issueTypeId":"10002","contextId":"10003"}]}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Duplicate project and issue type mappings
                cannot be provided."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field, project, or issue type is not
            found.
          content:
            application/json:
              example: '{"errorMessages":["These projects were not found: 10005."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /jql/parse:
    post:
      tags:
      - JQL
      summary: Parse JQL query
      description: |-
        Parses and validates JQL queries.

        Validation is performed in context of the current user.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: parseJqlQueries
      parameters:
      - name: validation
        in: query
        description: |-
          How to validate the JQL query and treat the validation results. Validation options include:

           *  `strict` Returns all errors. If validation fails, the query structure is not returned.
           *  `warn` Returns all errors. If validation fails but the JQL query is correctly formed, the query structure is returned.
           *  `none` No validation is performed. If JQL query is correctly formed, the query structure is returned
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - strict
          - warn
          - none
          default: strict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JqlQueriesToParse'
            example:
              queries:
              - summary ~ test AND (labels in (urgent, blocker) OR lastCommentedBy
                = currentUser()) AND status CHANGED AFTER startOfMonth(-1M) ORDER
                BY updated DESC
              - issue.property["spaces here"].value in ("Service requests", Incidents)
              - invalid query
              - summary = test
              - summary in test
              - project = INVALID
              - universe = 42
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParsedJqlQueries'
              example: '{"queries":[{"query":"summary ~ test AND (labels in (urgent,
                blocker) OR lastCommentedBy = currentUser()) AND status CHANGED AFTER
                -5d ORDER BY updated DESC","structure":{"orderBy":{"fields":[{"direction":"desc","field":{"encodedName":"updated","name":"updated"}}]},"where":{"clauses":[{"field":{"encodedName":"summary","name":"summary"},"operand":{"encodedValue":"test","value":"test"},"operator":"~"},{"clauses":[{"field":{"encodedName":"labels","name":"labels"},"operand":{"encodedOperand":"urgent,
                blocker)","values":[{"encodedValue":"urgent","value":"urgent"},{"encodedValue":"blocker","value":"blocker"}]},"operator":"in"},{"field":{"encodedName":"lastCommentedBy","name":"lastCommentedBy","property":[{"entity":"issue","key":"propertyKey","path":"path.in.property","type":"user"}]},"operand":{"arguments":[],"encodedOperand":"currentUser()","function":"currentUser"},"operator":"="}],"operator":"or"},{"field":{"encodedName":"status","name":"status"},"operator":"changed","predicates":[{"operand":{"arguments":["-1M"],"encodedOperand":"startOfMonth(-1M)","function":"startOfMonth"},"operator":"after"}]}],"operator":"and"}}},{"query":"issue.property[\"spaces
                here\"].value in (\"Service requests\", Incidents)","structure":{"where":{"field":{"encodedName":"issue.property[\"spaces
                here\"].value","name":"issue.property[spaces here].value","property":[{"entity":"issue","key":"spaces
                here","path":"value"}]},"operand":{"encodedOperand":"(\"Service requests\",
                Incidents)","values":[{"encodedValue":"\"Service requests\"","value":"Service
                requests"},{"encodedValue":"Incidents","value":"Incidents"}]},"operator":"in"}}},{"errors":["Error
                in the JQL Query: Expecting operator but got ''query''. The valid
                operators are ''='', ''!='', ''<'', ''>'', ''<='', ''>='', ''~'',
                ''!~'', ''IN'', ''NOT IN'', ''IS'' and ''IS NOT''. (line 1, character
                9)"],"query":"invalid query"},{"errors":["The operator ''='' is not
                supported by the ''summary'' field."],"query":"summary = test"},{"errors":["Operator
                ''in'' does not support the non-list value ''\"test\"'' for field
                ''summary''."],"query":"summary in test"},{"query":"project = INVALID","warnings":["The
                value ''INVALID'' does not exist for the field ''project''."]},{"errors":["Field
                ''universe'' does not exist or you do not have permission to view
                it."],"query":"universe = 42"}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - validate:jql:jira
        - read:jql:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /application-properties/{id}:
    put:
      tags:
      - Jira settings
      summary: Set application property
      description: "Changes the value of an application property. For example, you\
        \ can change the value of the `jira.clone.prefix` from its default value of\
        \ *CLONE -* to *Clone -* if you prefer sentence case capitalization. Editable\
        \ properties are described below along with their default values.\n\n####\
        \ Advanced settings ####\n\nThe advanced settings below are also accessible\
        \ in [Jira](https://confluence.atlassian.com/x/vYXKM).\n\n| Key | Description\
        \ | Default value |  \n| -- | -- | -- |  \n| `jira.clone.prefix` | The string\
        \ of text prefixed to the title of a cloned issue. | `CLONE -` |  \n| `jira.date.picker.java.format`\
        \ | The date format for the Java (server-side) generated dates. This must\
        \ be the same as the `jira.date.picker.javascript.format` format setting.\
        \ | `d/MMM/yy` |  \n| `jira.date.picker.javascript.format` | The date format\
        \ for the JavaScript (client-side) generated dates. This must be the same\
        \ as the `jira.date.picker.java.format` format setting. | `%e/%b/%y` |  \n\
        | `jira.date.time.picker.java.format` | The date format for the Java (server-side)\
        \ generated date times. This must be the same as the `jira.date.time.picker.javascript.format`\
        \ format setting. | `dd/MMM/yy h:mm a` |  \n| `jira.date.time.picker.javascript.format`\
        \ | The date format for the JavaScript (client-side) generated date times.\
        \ This must be the same as the `jira.date.time.picker.java.format` format\
        \ setting. | `%e/%b/%y %I:%M %p` |  \n| `jira.issue.actions.order` | The default\
        \ order of actions (such as *Comments* or *Change history*) displayed on the\
        \ issue view. | `asc` |  \n| `jira.view.issue.links.sort.order` | The sort\
        \ order of the list of issue links on the issue view. | `type, status, priority`\
        \ |  \n| `jira.comment.collapsing.minimum.hidden` | The minimum number of\
        \ comments required for comment collapsing to occur. A value of `0` disables\
        \ comment collapsing. | `4` |  \n| `jira.newsletter.tip.delay.days` | The\
        \ number of days before a prompt to sign up to the Jira Insiders newsletter\
        \ is shown. A value of `-1` disables this feature. | `7` |  \n\n\n#### Look\
        \ and feel ####\n\nThe settings listed below adjust the [look and feel](https://confluence.atlassian.com/x/VwCLLg).\n\
        \n| Key | Description | Default value |  \n| -- | -- | -- |  \n| `jira.lf.date.time`\
        \ | The [ time format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html).\
        \ | `h:mm a` |  \n| `jira.lf.date.day` | The [ day format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html).\
        \ | `EEEE h:mm a` |  \n| `jira.lf.date.complete` | The [ date and time format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html).\
        \ | `dd/MMM/yy h:mm a` |  \n| `jira.lf.date.dmy` | The [ date format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html).\
        \ | `dd/MMM/yy` |  \n| `jira.date.time.picker.use.iso8061` | When enabled,\
        \ sets Monday as the first day of the week in the date picker, as specified\
        \ by the ISO8601 standard. | `false` |  \n| `jira.lf.logo.url` | The URL of\
        \ the logo image file. | `/images/icon-jira-logo.png` |  \n| `jira.lf.logo.show.application.title`\
        \ | Controls the visibility of the application title on the sidebar. | `false`\
        \ |  \n| `jira.lf.favicon.url` | The URL of the favicon. | `/favicon.ico`\
        \ |  \n| `jira.lf.favicon.hires.url` | The URL of the high-resolution favicon.\
        \ | `/images/64jira.png` |  \n| `jira.lf.navigation.bgcolour` | The background\
        \ color of the sidebar. | `#0747A6` |  \n| `jira.lf.navigation.highlightcolour`\
        \ | The color of the text and logo of the sidebar. | `#DEEBFF` |  \n| `jira.lf.hero.button.base.bg.colour`\
        \ | The background color of the hero button. | `#3b7fc4` |  \n| `jira.title`\
        \ | The text for the application title. The application title can also be\
        \ set in *General settings*. | `Jira` |  \n| `jira.option.globalsharing` |\
        \ Whether filters and dashboards can be shared with anyone signed into Jira.\
        \ | `true` |  \n| `xflow.product.suggestions.enabled` | Whether to expose\
        \ product suggestions for other Atlassian products within Jira. | `true` |\
        \  \n\n\n#### Other settings ####\n\n| Key | Description | Default value |\
        \  \n| -- | -- | -- |  \n| `jira.issuenav.criteria.autoupdate` | Whether instant\
        \ updates to search criteria is active. | `true` |  \n\n\n*Note: Be careful\
        \ when changing [application properties and advanced settings](https://confluence.atlassian.com/x/vYXKM).*\n\
        \n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
      operationId: setApplicationProperty
      parameters:
      - name: id
        in: path
        description: The key of the application property to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleApplicationPropertyBean'
            example:
              id: jira.home
              value: /var/jira/jira-home
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationProperty'
        '400':
          description: Returned if the data type of the `value` does not match the
            application property's data type. For example, a string is provided instead
            of an integer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have permission to edit the property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the property is not found or the user does not
            have permission to view it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:instance-configuration:jira
        - read:instance-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issuetype/{id}/avatar2:
    post:
      tags:
      - Issue types
      summary: Load issue type avatar
      description: "Loads an avatar for the issue type.\n\nSpecify the avatar's local\
        \ file location in the body of the request. Also, include the following headers:\n\
        \n *  `X-Atlassian-Token: no-check` To prevent XSRF protection blocking the\
        \ request, for more information see [Special Headers](#special-request-headers).\n\
        \ *  `Content-Type: image/image type` Valid image types are JPEG, GIF, or\
        \ PNG.\n\nFor example:  \n`curl --request POST \\ --user email@example.com:<api_token>\
        \ \\ --header 'X-Atlassian-Token: no-check' \\ --header 'Content-Type: image/<\
        \ image_type>' \\ --data-binary \"<@/path/to/file/with/your/avatar>\" \\ --url\
        \ 'https://your-domain.atlassian.net/rest/api/3/issuetype/{issueTypeId}'This`\n\
        \nThe avatar is cropped to a square. If no crop parameters are specified,\
        \ the square originates at the top left of the image. The length of the square's\
        \ sides is set to the smaller of the height or width of the image.\n\nThe\
        \ cropped image is then used to create avatars of 16x16, 24x24, 32x32, and\
        \ 48x48 in size.\n\nAfter creating the avatar, use [ Update issue type](#api-rest-api-3-issuetype-id-put)\
        \ to set it as the issue type's displayed avatar.\n\n**[Permissions](#permissions)\
        \ required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
      operationId: createIssueTypeAvatar
      parameters:
      - name: id
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x
        in: query
        description: The X coordinate of the top-left corner of the crop region
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: y
        in: query
        description: The Y coordinate of the top-left corner of the crop region
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        description: The length of each side of the crop region
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          '*/*':
            schema: {
              }
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avatar'
              example: '{"id":"1010","isDeletable":true,"isSelected":false,"isSystemAvatar":false}'
        '400':
          description: |-
            Returned if:

             *  an image isn't included in the request.
             *  the image type is unsupported.
             *  the crop parameters extend the crop area beyond the edge of the image.
             *  `cropSize` is missing.
             *  the issue type ID is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:avatar:jira
        - write:issue-type:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /mypreferences/locale:
    get:
      tags:
      - Myself
      summary: Get locale
      description: |-
        Returns the locale for the user.

        If the user has no language preference set (which is the default setting) or this resource is accessed anonymous, the browser locale detected by Jira is returned. Jira detects the browser locale using the *Accept-Language* header in the request. However, if this doesn't match a locale available Jira, the site default locale is returned.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getLocale
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Locale'
              example: '{"locale":"en_US"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ACT_AS_USER
    put:
      tags:
      - Myself
      summary: Set locale
      description: |-
        Deprecated, use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API instead.

        Sets the locale of the user. The locale must be one supported by the instance of Jira.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: setLocale
      parameters: [
        ]
      requestBody:
        description: The locale defined in a LocaleBean
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locale'
            example:
              locale: en_US
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: true
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
    delete:
      tags:
      - Myself
      summary: Delete locale
      description: |-
        Deprecated, use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API instead.

        Deletes the locale of the user, which restores the default setting.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: deleteLocale
      parameters: [
        ]
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: true
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: INACCESSIBLE
  /filter/search:
    get:
      tags:
      - Filters
      summary: Search for filters
      description: |-
        Returns a [paginated](#pagination) list of filters. Use this operation to get:

         *  specific filters, by defining `id` only.
         *  filters that match all of the specified attributes. For example, all filters for a user with a particular word in their name. When multiple attributes are specified only filters matching all attributes are returned.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None, however, only the following filters that match the query parameters are returned:

         *  filters owned by the user.
         *  filters shared with a group that the user is a member of.
         *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
         *  filters shared with a public project.
         *  filters shared with the public.
      operationId: getFiltersPaginated
      parameters:
      - name: filterName
        in: query
        description: String used to perform a case-insensitive partial match with
          `name`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountId
        in: query
        description: User account ID used to return filters with the matching `owner.accountId`.
          This parameter cannot be used with `owner`
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          minLength: 0
          type: string
      - name: owner
        in: query
        description: This parameter is deprecated because of privacy changes. Use
          `accountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details. User name used to return filters with the matching `owner.name`.
          This parameter cannot be used with `accountId`
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupname
        in: query
        description: As a group's name can change, use of `groupId` is recommended
          to identify a group. Group name used to returns filters that are shared
          with a group that matches `sharePermissions.group.groupname`. This parameter
          cannot be used with the `groupId` parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupId
        in: query
        description: Group ID used to returns filters that are shared with a group
          that matches `sharePermissions.group.groupId`. This parameter cannot be
          used with the `groupname` parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectId
        in: query
        description: Project ID used to returns filters that are shared with a project
          that matches `sharePermissions.project.id`
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: id
        in: query
        description: The list of filter IDs. To include multiple IDs, provide an ampersand-separated
          list. For example, `id=10000&id=10001`. Do not exceed 200 filter IDs
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `description` Sorts by filter description. Note that this sorting works independently of whether the expand to display the description field is in use.
           *  `favourite_count` Sorts by the count of how many users have this filter as a favorite.
           *  `is_favourite` Sorts by whether the filter is marked as a favorite.
           *  `id` Sorts by filter ID.
           *  `name` Sorts by filter name.
           *  `owner` Sorts by the ID of the filter owner.
           *  `is_shared` Sorts by whether the filter is shared
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - description
          - -description
          - +description
          - favourite_count
          - -favourite_count
          - +favourite_count
          - id
          - -id
          - +id
          - is_favourite
          - -is_favourite
          - +is_favourite
          - name
          - -name
          - +name
          - owner
          - -owner
          - +owner
          - is_shared
          - -is_shared
          - +is_shared
          default: name
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `description` Returns the description of the filter.
           *  `favourite` Returns an indicator of whether the user has set the filter as a favorite.
           *  `favouritedCount` Returns a count of how many users have set this filter as a favorite.
           *  `jql` Returns the JQL query that the filter uses.
           *  `owner` Returns the owner of the filter.
           *  `searchUrl` Returns a URL to perform the filter's JQL query.
           *  `sharePermissions` Returns the share permissions defined for the filter.
           *  `editPermissions` Returns the edit permissions defined for the filter.
           *  `isWritable` Returns whether the current user has permission to edit the filter.
           *  `approximateLastUsed` \[Experimental\] Returns the approximate date and time when the filter was last evaluated.
           *  `subscriptions` Returns the users that are subscribed to the filter.
           *  `viewUrl` Returns a URL to view the filter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: overrideSharePermissions
        in: query
        description: 'EXPERIMENTAL: Whether share permissions are overridden to enable
          filters with any share permissions to be returned. Available to users with
          *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: isSubstringMatch
        in: query
        description: When `true` this will perform a case-insensitive substring match
          for the provided `filterName`. When `false` the filter name will be searched
          using [full text search syntax](https://support.atlassian.com/jira-software-cloud/docs/search-for-issues-using-the-text-field/)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanFilterDetails'
              example: '{"isLast":true,"maxResults":100,"self":"https://your-domain.atlassian.net/rest/api/3/filter/search?accountId=&maxResults=50&filterName=&orderBy=name&startAt=0&expand=description,owner,jql,searchUrl,viewUrl,favourite,favouritedCount,sharePermissions,editPermissions,isWritable,subscriptions,approximateLastUsed","startAt":0,"total":2,"values":[{"approximateLastUsed":"2023-03-01T13:15:00.000+0000","description":"Lists
                all open bugs","editPermissions":[],"expand":"description,owner,jql,searchUrl,viewUrl,favourite,favouritedCount,sharePermissions,editPermissions,isWritable,approximateLastUsed,subscriptions","favourite":false,"favouritedCount":0,"id":"10000","jql":"type
                = Bug and resolution is empty","name":"All Open Bugs","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10000","sharePermissions":[],"subscriptions":[],"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10000"},{"approximateLastUsed":null,"description":"Issues
                assigned to me","editPermissions":[{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002"},"deleted":true,"deletedBy":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"deletedDate":"2022-11-11T13:35:29.000+0000","id":"10002","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"MKY","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"retentionTillDate":"2023-01-10T13:35:29.000+0000","self":"https://your-domain.atlassian.net/rest/api/3/project/MKY","simplified":false,"style":"classic"},"role":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"}},"type":"project"},{"group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":10010,"type":"group"}],"expand":"description,owner,jql,searchUrl,viewUrl,favourite,favouritedCount,sharePermissions,editPermissions,isWritable,approximateLastUsed,subscriptions","favourite":true,"favouritedCount":123,"id":"10010","jql":"assignee
                = currentUser() and resolution is empty","name":"My issues","owner":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"searchUrl":"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty","self":"https://your-domain.atlassian.net/rest/api/3/filter/10010","sharePermissions":[{"id":10000,"type":"global"},{"id":10010,"project":{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":"2021-04-22T05:37:05.000+0000","totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"classic"},"type":"project"}],"subscriptions":[{"id":1,"user":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":true,"applicationRoles":{"items":[],"size":1},"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","emailAddress":"mia@example.com","groups":{"items":[],"size":3},"key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g","timeZone":"Australia/Sydney"}}],"viewUrl":"https://your-domain.atlassian.net/issues/?filter=10010"}]}'
        '400':
          description: |-
            Returned if:

             *  `owner` and `accountId` are provided.
             *  `expand` includes an invalid value.
             *  `orderBy` is invalid.
             *  `id` identifies more than 200 filter IDs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter:jira
        - read:group:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:jql:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:issue-type-hierarchy:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /workflow/{workflowId}/project/{projectId}/issueTypeUsages:
    get:
      tags:
      - Workflows
      summary: Get issue types in a project that are using a given workflow
      description: Returns a page of issue types using a given workflow within a project.
      operationId: getWorkflowProjectIssueTypeUsages
      parameters:
      - name: workflowId
        in: path
        description: The workflow ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: projectId
        in: path
        description: The project ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: nextPageToken
        in: query
        description: The cursor for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of results to return. Must be an integer between
          1 and 200
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowProjectIssueTypeUsageDTO'
              example: '{"issueTypes":{"nextPageToken":"eyJvIjoyfQ==","values":[{"id":"1000"}]},"projectId":"6e2bde9f-f213-4920-95cd-28e015af59a1","workflowId":"2000"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Invalid format of nextPageToken"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '404':
          description: Returned if the workflow with the given ID does not exist.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:workflow:jira
        - read:issue-type:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /events:
    get:
      tags:
      - Issues
      summary: Get events
      description: |-
        Returns all issue events.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getEvents
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueEvent'
              example: '[{"id":1,"name":"Issue Created"},{"id":2,"name":"Issue Updated"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to complete this
            request.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-event:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issuesecurityschemes/level:
    get:
      tags:
      - Issue security schemes
      summary: Get issue security levels
      description: |-
        Returns a [paginated](#pagination) list of issue security levels.

        Only issue security levels in the context of classic projects are returned.

        Filtering using IDs is inclusive: if you specify both security scheme IDs and level IDs, the result will include both specified issue security levels and all issue security levels from the specified schemes.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getSecurityLevels
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: id
        in: query
        description: 'The list of issue security scheme level IDs. To include multiple
          issue security levels, separate IDs with an ampersand: `id=10000&id=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: schemeId
        in: query
        description: 'The list of issue security scheme IDs. To include multiple issue
          security schemes, separate IDs with an ampersand: `schemeId=10000&schemeId=10001`'
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: onlyDefault
        in: query
        description: When set to true, returns multiple default levels for each security
          scheme containing a default. If you provide scheme and level IDs not associated
          with the default, returns an empty page. The default value is false
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanSecurityLevel'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":1,"values":[{"description":"Only
                the reporter and internal staff can see this issue.","id":"10021","isDefault":true,"issueSecuritySchemeId":"10001","name":"Reporter
                Only","self":"https://your-domain.atlassian.net/rest/api/3/issuesecurityscheme/level?id=10021"}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["-1000 is not a valid value. id must be
                zero or a positive integer."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-security-level:jira
        - read:issue-security-scheme:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /workflows/defaultEditor:
    get:
      tags:
      - Workflows
      summary: Get the user's default workflow editor
      description: Get the user's default workflow editor. This can be either the
        new editor or the legacy editor.
      operationId: getDefaultEditor
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultWorkflowEditorResponse'
              example: '{"value":"NEW"}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/role:
    get:
      tags:
      - Project roles
      summary: Get project roles for project
      description: |-
        Returns a list of [project roles](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-roles/) for the project returning the name and self URL for each role.

        Note that all project roles are shared with all projects in Jira Cloud. See [Get all project roles](#api-rest-api-3-role-get) for more information.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for any project on the site or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getProjectRoles
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                  format: uri
              example: '{"Administrators":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10002","Developers":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10000","Users":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10001"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing or if the user lacks administrative permissions for the project.
        '404':
          description: Returned if the project is not found or or if the user does
            not have administrative permissions for the project.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-role:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /redact/status/{jobId}:
    get:
      tags:
      - Issue redaction
      summary: Get redaction status
      description: |-
        Retrieves the current status of a redaction job ID.

        The jobStatus will be one of the following:

         *  IN\_PROGRESS - The redaction job is currently in progress
         *  COMPLETED - The redaction job has completed successfully.
         *  PENDING - The redaction job has not started yet
      operationId: getRedactionStatus
      parameters:
      - name: jobId
        in: path
        description: Redaction job id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the job status is successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedactionJobStatusResponse'
        '403':
          description: Returned if the AGP subscription is not present.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the job id is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - redact:issue:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /search/approximate-count:
    post:
      tags:
      - Issue search
      summary: Count issues using JQL
      description: |-
        Provide an estimated count of the issues that match the [JQL](https://confluence.atlassian.com/x/egORLQ). Recent updates might not be immediately visible in the returned output. This endpoint requires JQL to be bounded.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Issues are included in the response where the user has:

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: countIssues
      parameters: [
        ]
      requestBody:
        description: A JSON object containing the search request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JQLCountRequestBean'
            example:
              jql: project = HSP
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JQLCountResultsBean'
              example: '{"count":153}'
        '400':
          description: Returned if the JQL query cannot be parsed.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-details:jira
        - read:field.default-value:jira
        - read:field.option:jira
        - read:field:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /workflowscheme/{id}/default:
    get:
      tags:
      - Workflow schemes
      summary: Get default workflow
      description: |-
        Returns the default workflow for a workflow scheme. The default workflow is the workflow that is assigned any issue types that have not been mapped to any other workflow. The default workflow has *All Unassigned Issue Types* listed in its issue types for the workflow scheme in Jira.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getDefaultWorkflow
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: returnDraftIfExists
        in: query
        description: Set to `true` to return the default workflow for the workflow
          scheme's draft rather than scheme itself. If the workflow scheme does not
          have a draft, then the default workflow for the workflow scheme is returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultWorkflow'
              example: '{"workflow":"jira"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow schemes
      summary: Update default workflow
      description: |-
        Sets the default workflow for a workflow scheme.

        Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` in the request object and a draft workflow scheme is created or updated with the new default workflow. The draft workflow scheme can be published in Jira.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateDefaultWorkflow
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The new default workflow
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultWorkflow'
            example:
              updateDraftIfNeeded: false
              workflow: jira
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"jira","description":"The description of
                the example workflow scheme.","draft":false,"id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}'
        '400':
          description: Returned if the workflow scheme cannot be edited and `updateDraftIfNeeded`
            is not `true`.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - write:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Workflow schemes
      summary: Delete default workflow
      description: |-
        Resets the default workflow for a workflow scheme. That is, the default workflow is set to Jira's system workflow (the *jira* workflow).

        Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` and a draft workflow scheme is created or updated with the default workflow reset. The draft workflow scheme can be published in Jira.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteDefaultWorkflow
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: updateDraftIfNeeded
        in: query
        description: Set to true to create or update the draft of a workflow scheme
          and delete the mapping from the draft, when the workflow scheme cannot be
          edited. Defaults to `false`
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"jira","description":"The description of
                the example workflow scheme.","draft":false,"id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}'
        '400':
          description: Returned if the workflow scheme cannot be edited and `updateDraftIfNeeded`
            is not `true`.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - write:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /fieldconfigurationscheme/{id}/mapping/delete:
    post:
      tags:
      - Issue field configurations
      summary: Remove issue types from field configuration scheme
      description: |-
        Removes issue types from the field configuration scheme.

        This operation can only modify field configuration schemes used in company-managed (classic) projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeIssueTypesFromGlobalFieldConfigurationScheme
      parameters:
      - name: id
        in: path
        description: The ID of the field configuration scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: The issue type IDs to remove
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeIdsToRemove'
            example:
              issueTypeIds:
              - '10000'
              - '10001'
              - '10002'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The issueTypeIds must not contain duplicates."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Only Jira administrators can access field
                configurations."],"errors":{}}'
        '404':
          description: Returned if the field configuration scheme or the issue types
            are not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The field configuration scheme was not
                found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field-configuration-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /fieldconfigurationscheme:
    get:
      tags:
      - Issue field configurations
      summary: Get all field configuration schemes
      description: |-
        Returns a [paginated](#pagination) list of field configuration schemes.

        Only field configuration schemes used in classic projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAllFieldConfigurationSchemes
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: id
        in: query
        description: The list of field configuration scheme IDs. To include multiple
          IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanFieldConfigurationScheme'
              example: '{"isLast":true,"maxResults":10,"startAt":0,"total":3,"values":[{"id":"10000","name":"Field
                Configuration Scheme for Bugs","description":"This field configuration
                scheme is for bugs only."},{"id":"10001","name":"Field Configuration
                Scheme for software related projects","description":"We can use this
                one for software projects."},{"id":"10002","name":"Field Configuration
                Scheme for Epics","description":"Use this one for Epic issue type."}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field-configuration-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Issue field configurations
      summary: Create field configuration scheme
      description: |-
        Creates a field configuration scheme.

        This operation can only create field configuration schemes used in company-managed (classic) projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createFieldConfigurationScheme
      parameters: [
        ]
      requestBody:
        description: The details of the field configuration scheme
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFieldConfigurationSchemeDetails'
            example:
              description: We can use this one for software projects.
              name: Field Configuration Scheme for software related projects
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldConfigurationScheme'
              example: '{"description":"We can use this one for software projects.","id":"10002","name":"Field
                Configuration Scheme for software related projects"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["A field configuration scheme is using this
                name."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access field
                configurations."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field-configuration-scheme:jira
        - read:field-configuration-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /screens:
    get:
      tags:
      - Screens
      summary: Get screens
      description: |-
        Returns a [paginated](#pagination) list of all screens or those specified by one or more screen IDs.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getScreens
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      - name: id
        in: query
        description: The list of screen IDs. To include multiple IDs, provide an ampersand-separated
          list. For example, `id=10000&id=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: queryString
        in: query
        description: String used to perform a case-insensitive partial match with
          screen name
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      - name: scope
        in: query
        description: The scope filter string. To filter by multiple scope, provide
          an ampersand-separated list. For example, `scope=GLOBAL&scope=PROJECT`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - GLOBAL
            - TEMPLATE
            - PROJECT
            default: ''
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `id` Sorts by screen ID.
           *  `name` Sorts by screen name
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - -name
          - +name
          - id
          - -id
          - +id
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanScreen'
              example: '{"isLast":true,"maxResults":100,"self":"https://your-domain.atlassian.net/rest/api/3/screens","startAt":0,"total":3,"values":[{"id":1,"name":"Default
                Screen","description":"Provides for the update all system fields."},{"id":2,"name":"Workflow
                Screen","description":"This screen is used in the workflow and enables
                you to assign issues."},{"id":3,"name":"Resolve Issue Screen","description":"Offers
                the ability to set resolution, change fix versions, and assign an
                issue."}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:screen:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Screens
      summary: Create screen
      description: |-
        Creates a screen with a default field tab.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createScreen
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenDetails'
            example:
              description: Enables changes to resolution and linked issues.
              name: Resolve Security Issue Screen
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Screen'
              example: '{"id":10005,"name":"Resolve Security Issue Screen","description":"Enables
                changes to resolution and linked issues."}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The name is used by another screen."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can manage screens."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:screen:jira
        - write:screen:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/delete:
    post:
      tags:
      - Projects
      summary: Delete project asynchronously
      description: |-
        Deletes a project asynchronously.

        This operation is:

         *  transactional, that is, if part of the delete fails the project is not deleted.
         *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteProjectAsynchronously
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '303':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project:jira
        - write:project.property:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issuetypescheme/{issueTypeSchemeId}/issuetype:
    put:
      tags:
      - Issue type schemes
      summary: Add issue types to issue type scheme
      description: |-
        Adds issue types to an issue type scheme.

        The added issue types are appended to the issue types list.

        If any of the issue types exist in the issue type scheme, the operation fails and no issue types are added.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addIssueTypesToIssueTypeScheme
      parameters:
      - name: issueTypeSchemeId
        in: path
        description: The ID of the issue type scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeIds'
            example:
              issueTypeIds:
              - '10000'
              - '10002'
              - '10003'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["These issue types were not added because
                they are already present in the issue type scheme: 10002, 10003"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type or the issue type scheme is not
            found.
          content:
            application/json:
              example: '{"errorMessages":["These issue types were not found: 10000,
                10002"],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /user/email:
    get:
      tags:
      - Users
      summary: Get user email
      description: Returns a user's email address regardless of the user's profile
        visibility settings. For Connect apps, this API is only available to apps
        approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).
        For Forge apps, this API only supports access via asApp() requests.
      operationId: getUserEmail
      parameters:
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, `5b10ac8d82e05b22cc7d4ef5`
        required: true
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnrestrictedUserEmail'
              example: name@example.com
        '400':
          description: Returned if the calling app is not approved to use this API.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing from the request (for example if a user is trying to access this
            API).
        '404':
          description: Returned if a user with the given `accountId` doesn't exist
        '503':
          description: Indicates the API is not currently enabled
      deprecated: false
      security:
      - basicAuth: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:email-address:jira
        state: Beta
      x-atlassian-connect-scope: ACCESS_EMAIL_ADDRESSES
  /filter/defaultShareScope:
    get:
      tags:
      - Filter sharing
      summary: Get default share scope
      description: |-
        Returns the default sharing settings for new filters and dashboards for a user.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getDefaultShareScope
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultShareScope'
              example: '{"scope":"GLOBAL"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:filter.default-share-scope:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Filter sharing
      summary: Set default share scope
      description: |-
        Sets the default sharing for new filters and dashboards for a user.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: setDefaultShareScope
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultShareScope'
            example:
              scope: GLOBAL
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultShareScope'
              example: '{"scope":"GLOBAL"}'
        '400':
          description: Returned if an invalid scope is set.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:filter.default-share-scope:jira
        - read:filter.default-share-scope:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /workflows/create:
    post:
      tags:
      - Workflows
      summary: Bulk create workflows
      description: |-
        Create workflows and related statuses.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* project permission to create all, including global-scoped, workflows
         *  *Administer projects* project permissions to create project-scoped workflows
      operationId: createWorkflows
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowCreateRequest'
            example:
              scope:
                type: GLOBAL
              statuses:
              - description: ''
                name: To Do
                statusCategory: TODO
                statusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
              - description: ''
                name: In Progress
                statusCategory: IN_PROGRESS
                statusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
              - description: ''
                name: Done
                statusCategory: DONE
                statusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
              workflows:
              - description: ''
                name: Software workflow 1
                startPointLayout:
                  x: -100.00030899047852
                  y: -153.00020599365234
                statuses:
                - layout:
                    x: 114.99993896484375
                    y: -16
                  properties: {
                    }
                  statusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                - layout:
                    x: 317.0000915527344
                    y: -16
                  properties: {
                    }
                  statusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                - layout:
                    x: 508.000244140625
                    y: -16
                  properties: {
                    }
                  statusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                transitions:
                - actions: [
                    ]
                  description: ''
                  id: '1'
                  links: [
                    ]
                  name: Create
                  properties: {
                    }
                  toStatusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                  triggers: [
                    ]
                  type: INITIAL
                  validators: [
                    ]
                - actions: [
                    ]
                  description: ''
                  id: '11'
                  links: [
                    ]
                  name: To Do
                  properties: {
                    }
                  toStatusReference: f0b24de5-25e7-4fab-ab94-63d81db6c0c0
                  triggers: [
                    ]
                  type: GLOBAL
                  validators: [
                    ]
                - actions: [
                    ]
                  description: ''
                  id: '21'
                  links: [
                    ]
                  name: In Progress
                  properties: {
                    }
                  toStatusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                  triggers: [
                    ]
                  type: GLOBAL
                  validators: [
                    ]
                - actions: [
                    ]
                  description: Move a work item from in progress to done
                  id: '31'
                  links:
                  - fromPort: 0
                    fromStatusReference: c7a35bf0-c127-4aa6-869f-4033730c61d8
                    toPort: 1
                  name: Done
                  properties: {
                    }
                  toStatusReference: 6b3fc04d-3316-46c5-a257-65751aeb8849
                  triggers: [
                    ]
                  type: DIRECTED
                  validators: [
                    ]
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowCreateResponse'
              example: '{"statuses":[{"description":"","id":"10001","name":"To Do","scope":{"type":"GLOBAL"},"statusCategory":"TODO","statusReference":"10001","usages":[]},{"description":"","id":"10002","name":"In
                Progress","scope":{"type":"GLOBAL"},"statusCategory":"IN_PROGRESS","statusReference":"10002","usages":[]},{"description":"","id":"10003","name":"Done","scope":{"type":"GLOBAL"},"statusCategory":"DONE","statusReference":"10003","usages":[]}],"workflows":[{"description":"","id":"b9ff2384-d3b6-4d4e-9509-3ee19f607168","isEditable":true,"name":"Software
                workflow 1","scope":{"type":"GLOBAL"},"startPointLayout":{"x":-100.00030899047852,"y":-153.00020599365234},"statuses":[{"deprecated":false,"layout":{"x":317.0000915527344,"y":-16.0},"properties":{},"statusReference":"10002"},{"deprecated":false,"layout":{"x":508.000244140625,"y":-16.0},"properties":{},"statusReference":"10003"},{"deprecated":false,"layout":{"x":114.99993896484375,"y":-16.0},"properties":{},"statusReference":"10001"}],"transitions":[{"actions":[],"description":"","id":"11","links":[],"name":"To
                Do","properties":{},"toStatusReference":"10001","triggers":[],"type":"GLOBAL","validators":[]},{"actions":[],"description":"","id":"21","links":[],"name":"In
                Progress","properties":{},"toStatusReference":"10002","triggers":[],"type":"GLOBAL","validators":[]},{"actions":[],"description":"","id":"1","links":[],"name":"Create","properties":{},"toStatusReference":"10001","triggers":[],"type":"INITIAL","validators":[]},{"actions":[],"description":"Move
                a work item from in progress to done","id":"31","links":[{"fromPort":0,"fromStatusReference":"10002","toPort":1}],"name":"Done","properties":{},"toStatusReference":"10003","triggers":[],"type":"DIRECTED","validators":[]}],"usages":[],"version":{"id":"f010ac1b-3dd3-43a3-aa66-0ee8a447f76e","versionNumber":0}}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '409':
          description: Returned if another workflow configuration update task is ongoing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/recent:
    get:
      tags:
      - Projects
      summary: Get recent projects
      description: |-
        Returns a list of up to 20 projects recently viewed by the user that are still visible to the user.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Projects are returned only where the user has one of:

         *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getRecent
      parameters:
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:

           *  `description` Returns the project description.
           *  `projectKeys` Returns all project keys associated with a project.
           *  `lead` Returns information about the project lead.
           *  `issueTypes` Returns all issue types associated with the project.
           *  `url` Returns the URL associated with the project.
           *  `permissions` Returns the permissions associated with the project.
           *  `insight` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project.
           *  `*` Returns the project with all available expand options
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: properties
        in: query
        description: EXPERIMENTAL. A list of project properties to return for the
          project. This parameter accepts a comma-separated list. Invalid property
          names are ignored
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/StringList'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
              example: '[{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":1619069825000,"totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"CLASSIC"},{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001"},"id":"10001","insight":{"lastIssueUpdateTime":1619069825000,"totalIssueCount":100},"key":"ABC","name":"Alphabetical","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/ABC","simplified":false,"style":"CLASSIC"}]'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:project:jira
        - read:project.property:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type-hierarchy:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /screens/{screenId}/tabs/{tabId}:
    put:
      tags:
      - Screen tabs
      summary: Update screen tab
      description: |-
        Updates the name of a screen tab.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: renameScreenTab
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tabId
        in: path
        description: The ID of the screen tab
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenableTab'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenableTab'
              example: '{"id":10000,"name":"Fields Tab"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen or screen tab is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:screen-tab:jira
        - write:screen-tab:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Screen tabs
      summary: Delete screen tab
      description: |-
        Deletes a screen tab.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteScreenTab
      parameters:
      - name: screenId
        in: path
        description: The ID of the screen
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: tabId
        in: path
        description: The ID of the screen tab
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the screen or screen tab is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:screen-tab:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /task/{taskId}:
    get:
      tags:
      - Tasks
      summary: Get task
      description: |-
        Returns the status of a [long-running asynchronous task](#async).

        When a task has finished, this operation returns the JSON blob applicable to the task. See the documentation of the operation that created the task for details. Task details are not permanently retained. As of September 2019, details are retained for 14 days although this period may change without notice.

        **Deprecation notice:** The required OAuth 2.0 scopes will be updated on June 15, 2024.

         *  `read:jira-work`

        **[Permissions](#permissions) required:** either of:

         *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
         *  Creator of the task.
      operationId: getTask
      parameters:
      - name: taskId
        in: path
        description: The ID of the task
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
              example: '{"self":"https://your-domain.atlassian.net/rest/api/3/task/1","id":"1","description":"Task
                description","status":"COMPLETE","result":"the task result, this may
                be any JSON","submittedBy":10000,"progress":100,"elapsedRuntime":156,"submitted":1501708132800,"started":1501708132900,"finished":1501708133000,"lastUpdate":1501708133000}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the task is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes: [
          ]
        state: Beta
      x-atlassian-connect-scope: NONE
  /groupuserpicker:
    get:
      tags:
      - Group and user picker
      summary: Find users and groups
      description: "Returns a list of users and groups matching a string. The string\
        \ is used:\n\n *  for users, to find a case-insensitive match with display\
        \ name and e-mail address. Note that if a user has hidden their email address\
        \ in their user profile, partial matches of the email address will not find\
        \ the user. An exact match is required.\n *  for groups, to find a case-sensitive\
        \ match with group name.\n\nFor example, if the string *tin* is used, records\
        \ with the display name *Tina*, email address *sarah@tinplatetraining.com*,\
        \ and the group *accounting* would be returned.\n\nOptionally, the search\
        \ can be refined to:\n\n *  the projects and issue types associated with a\
        \ custom field, such as a user picker. The search can then be further refined\
        \ to return only users and groups that have permission to view specific:\n\
        \    \n     *  projects.\n     *  issue types.\n    \n    If multiple projects\
        \ or issue types are specified, they must be a subset of those enabled for\
        \ the custom field or no results are returned. For example, if a field is\
        \ enabled for projects A, B, and C then the search could be limited to projects\
        \ B and C. However, if the search is limited to projects B and D, nothing\
        \ is returned.\n *  not return Connect app users and groups.\n *  return groups\
        \ that have a case-insensitive match with the query.\n\nThe primary use case\
        \ for this resource is to populate a picker field suggestion list with users\
        \ or groups. To this end, the returned object includes an `html` field for\
        \ each list. This field highlights the matched query term in the item name\
        \ with the HTML strong tag. Also, each list is wrapped in a response object\
        \ that contains a header for use in a picker, specifically *Showing X of Y\
        \ matching groups*.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions)\
        \ required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/yodKLg)."
      operationId: findUsersAndGroups
      parameters:
      - name: query
        in: query
        description: The search string
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of items to return in each list
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: showAvatar
        in: query
        description: Whether the user avatar should be returned. If an invalid value
          is provided, the default value is used
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: fieldId
        in: query
        description: The custom field ID of the field this request is for
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectId
        in: query
        description: The ID of a project that returned users and groups must have
          permission to view. To include multiple projects, provide an ampersand-separated
          list. For example, `projectId=10000&projectId=10001`. This parameter is
          only used when `fieldId` is present
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: issueTypeId
        in: query
        description: The ID of an issue type that returned users and groups must have
          permission to view. To include multiple issue types, provide an ampersand-separated
          list. For example, `issueTypeId=10000&issueTypeId=10001`. Special values,
          such as `-1` (all standard issue types) and `-2` (all subtask issue types),
          are supported. This parameter is only used when `fieldId` is present
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: avatarSize
        in: query
        description: The size of the avatar to return. If an invalid value is provided,
          the default value is used
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - xsmall
          - xsmall@2x
          - xsmall@3x
          - small
          - small@2x
          - small@3x
          - medium
          - medium@2x
          - medium@3x
          - large
          - large@2x
          - large@3x
          - xlarge
          - xlarge@2x
          - xlarge@3x
          - xxlarge
          - xxlarge@2x
          - xxlarge@3x
          - xxxlarge
          - xxxlarge@2x
          - xxxlarge@3x
          default: xsmall
      - name: caseInsensitive
        in: query
        description: Whether the search for groups should be case insensitive
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: excludeConnectAddons
        in: query
        description: Whether Connect app users and groups should be excluded from
          the search results. If an invalid value is provided, the default value is
          used
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoundUsersAndGroups'
              example: '{"groups":{"groups":[{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","html":"<b>j</b>dog-developers","name":"jdog-developers"},{"groupId":"6e87dc72-4f1f-421f-9382-2fee8b652487","html":"<b>j</b>uvenal-bot","name":"juvenal-bot"}],"header":"Showing
                20 of 25 matching groups","total":25},"users":{"header":"Showing 20
                of 25 matching groups","total":25,"users":[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","avatarUrl":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","displayName":"Mia
                Krystof","html":"<strong>Mi</strong>a Krystof - <strong>mi</strong>a@example.com
                (<strong>mi</strong>a)","key":"mia","name":"mia"}]}}'
        '400':
          description: Returned if the query parameter is not provided.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '429':
          description: Returned if the rate limit is exceeded. User search endpoints
            share a collective rate limit for the tenant, in addition to Jira's normal
            rate limiting you may receive a rate limit for user search. Please respect
            the Retry-After header.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issuetypescheme/{issueTypeSchemeId}/issuetype/{issueTypeId}:
    delete:
      tags:
      - Issue type schemes
      summary: Remove issue type from issue type scheme
      description: |-
        Removes an issue type from an issue type scheme.

        This operation cannot remove:

         *  any issue type used by issues.
         *  any issue types from the default issue type scheme.
         *  the last standard issue type from an issue type scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeIssueTypeFromIssueTypeScheme
      parameters:
      - name: issueTypeSchemeId
        in: path
        description: The ID of the issue type scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: issueTypeId
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Can''t remove the last standard issue type
                from the issue type scheme."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type scheme is missing or the issue type
            is not found in the issue type scheme.
          content:
            application/json:
              example: '{"errorMessages":["The issue type was not found in the issue
                type scheme."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /priorityscheme/{schemeId}/priorities:
    get:
      tags:
      - Priority schemes
      summary: Get priorities by priority scheme
      description: |-
        Returns a [paginated](#pagination) list of priorities by scheme.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getPrioritiesByPriorityScheme
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: schemeId
        in: path
        description: The priority scheme ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanPriorityWithSequence'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":3,"values":[{"description":"Serious
                problem that could block progress.","iconUrl":"/images/icons/priorities/high.svg","id":"1","isDefault":false,"name":"High","statusColor":"#f15C75"},{"description":"Has
                the potential to affect progress.","iconUrl":"/images/icons/priorities/medium.svg","id":"2","isDefault":true,"name":"Medium","statusColor":"#f79232"},{"description":"Minor
                problem or easily worked around.","iconUrl":"/images/icons/priorities/low.svg","id":"3","isDefault":false,"name":"Low","statusColor":"#707070"}]}'
        '400':
          description: Returned if the request isn't valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: READ
  /priority/default:
    put:
      tags:
      - Issue priorities
      summary: Set default priority
      description: |-
        Sets default issue priority.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setDefaultPriority
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDefaultPriorityRequest'
            example:
              id: '3'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The id has to be provided."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue priority isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Priority with ID 10000 not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: ADMIN
  /webhook/refresh:
    put:
      tags:
      - Webhooks
      summary: Extend webhook life
      description: |-
        Extends the life of webhook. Webhooks registered through the REST API expire after 30 days. Call this operation to keep them alive.

        Unrecognized webhook IDs (those that are not found or belong to other apps) are ignored.

        **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/#connect-apps) and [OAuth 2.0](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps) apps can use this operation.
      operationId: refreshWebhooks
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerForWebhookIDs'
            example:
              webhookIds:
              - 10000
              - 10001
              - 10042
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksExpirationDate'
              example: '{"expirationDate":"2019-06-01T12:42:30.000+0000"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the caller isn't an app.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
        - manage:jira-webhook
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - manage:jira-webhook
        state: Current
      - scheme: OAuth2
        scopes:
        - write:webhook:jira
        - read:webhook:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /project/{projectIdOrKey}/properties:
    get:
      tags:
      - Project properties
      summary: Get project property keys
      description: |-
        Returns all [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) keys for the project.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getProjectPropertyKeys
      parameters:
      - name: projectIdOrKey
        in: path
        description: The project ID or project key (case sensitive)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeys'
              example: '{"keys":[{"key":"issue.support","self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have permission to view the project.
        '404':
          description: Returned if the project is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issuesecurityschemes/{schemeId}/level/{levelId}/member:
    put:
      tags:
      - Issue security schemes
      summary: Add issue security level members
      description: |-
        Adds members to the issue security level. You can add up to 100 members per request.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addSecurityLevelMembers
      parameters:
      - name: schemeId
        in: path
        description: The ID of the issue security scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: levelId
        in: path
        description: The ID of the issue security level
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecuritySchemeMembersRequest'
            example:
              members:
              - type: reporter
              - parameter: jira-administrators
                type: group
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["some-wrong-string is not a valid value.
                The issue security scheme ID must be a positive integer."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the security scheme isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue security scheme with ID 10000 not
                found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issuetypescheme/{issueTypeSchemeId}/issuetype/move:
    put:
      tags:
      - Issue type schemes
      summary: Change order of issue types
      description: |-
        Changes the order of issue types in an issue type scheme.

        The request body parameters must meet the following requirements:

         *  all of the issue types must belong to the issue type scheme.
         *  either `after` or `position` must be provided.
         *  the issue type in `after` must not be in the issue type list.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: reorderIssueTypesInIssueTypeScheme
      parameters:
      - name: issueTypeSchemeId
        in: path
        description: The ID of the issue type scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderOfIssueTypes'
            example:
              after: '10008'
              issueTypeIds:
              - '10001'
              - '10004'
              - '10002'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The issue type scheme does not include
                some of the specified issue types. Issue type IDs missing from the
                scheme are:  10007, 10008"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["The issue type scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issuesecurityschemes/project:
    get:
      tags:
      - Issue security schemes
      summary: Get projects using issue security schemes
      description: Returns a [paginated](#pagination) mapping of projects that are
        using security schemes. You can provide either one or multiple security scheme
        IDs or project IDs to filter by. If you don't provide any, this will return
        a list of all mappings. Only issue security schemes in the context of classic
        projects are supported. **[Permissions](#permissions) required:** *Administer
        Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: searchProjectsUsingSecuritySchemes
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: issueSecuritySchemeId
        in: query
        description: The list of security scheme IDs to be filtered out
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: projectId
        in: query
        description: The list of project IDs to be filtered out
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueSecuritySchemeToProjectMapping'
              example: '{"issueSecuritySchemeId":"10000","projectId":"10000"}'
        '400':
          description: Returned if the search criteria is invalid.If you specify the
            project ID parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Issue security schemes
      summary: Associate security scheme to project
      description: |-
        Associates an issue security scheme with a project and remaps security levels of issues to the new levels, if provided.

        This operation is [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: associateSchemesToProjects
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateSecuritySchemeWithProjectDetails'
            example:
              oldToNewSecurityLevelMappings:
              - newLevelId: '30001'
                oldLevelId: '30000'
              projectId: '10000'
              schemeId: '20000'
        required: true
      responses:
        '303':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["some-wrong-string is not a valid value.
                The issue security scheme ID must be a positive integer."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the security scheme isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue security scheme with ID 10000 not
                found."],"errors":{}}'
        '409':
          description: Returned if a task to remove the issue security level is already
            running.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /jql/function/computation:
    get:
      tags:
      - JQL functions (apps)
      summary: Get precomputations (apps)
      description: |-
        Returns the list of a function's precomputations along with information about when they were created, updated, and last used. Each precomputation has a `value` \- the JQL fragment to replace the custom function clause with.

        **[Permissions](#permissions) required:** This API is only accessible to apps and apps can only inspect their own functions.

        The new `read:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: getPrecomputations
      parameters:
      - name: functionKey
        in: query
        description: |-
          The function key in format:

           *  Forge: `ari:cloud:ecosystem::extension/[App ID]/[Environment ID]/static/[Function key from manifest]`
           *  Connect: `[App key]__[Module key]`
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: ''
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `functionKey` Sorts by the functionKey.
           *  `used` Sorts by the used timestamp.
           *  `created` Sorts by the created timestamp.
           *  `updated` Sorts by the updated timestamp
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBean2JqlFunctionPrecomputationBean'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":1,"values":[{"arguments":["Test"],"created":"2023-10-14T05:25:20.000+0000","field":"issue","functionKey":"ari:cloud:ecosystem::extension/00000000-1111-2222-3333-4444444/111111-2222-3333-4444-55555/static/issuesWithText","functionName":"issuesWithText","id":"cf75a1b0-4ac6-4bd8-8a50-29a465a96520","operator":"in","updated":"2023-10-14T05:25:20.000+0000","used":"2023-10-14T05:25:20.000+0000","value":"issue
                in (TEST-1, TEST-2, TEST-3)"},{"arguments":["10001"],"created":"2023-10-14T05:25:20.000+0000","error":"Error
                message to be displayed to the user","field":"issue","functionKey":"ari:cloud:ecosystem::extension/00000000-1111-2222-3333-4444444/111111-2222-3333-4444-55555/static/issuesWithText","functionName":"issuesWithText","id":"2a854f11-d0e1-4260-aea8-64a562a7062a","operator":"=","updated":"2023-10-14T05:25:20.000+0000","used":"2023-10-14T05:25:20.000+0000"}]}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the request is not authenticated as the app that
            provided the function.
        '404':
          description: Returned if the function is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes:
        - read:app-data:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - JQL functions (apps)
      summary: Update precomputations (apps)
      description: |-
        Update the precomputation value of a function created by a Forge/Connect app.

        **[Permissions](#permissions) required:** An API for apps to update their own precomputations.

        The new `write:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: updatePrecomputations
      parameters:
      - name: skipNotFoundPrecomputations
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JqlFunctionPrecomputationUpdateRequestBean'
            example:
              values:
              - id: f2ef228b-367f-4c6b-bd9d-0d0e96b5bd7b
                value: issue in (TEST-1, TEST-2, TEST-3)
              - error: Error message to be displayed to the user
                id: 2a854f11-d0e1-4260-aea8-64a562a7062a
        required: true
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JqlFunctionPrecomputationUpdateResponse'
        '204':
          description: Returned if the request is successful.
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JqlFunctionPrecomputationUpdateErrorResponse'
        '403':
          description: Returned if the request is not authenticated as the app that
            provided the function.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JqlFunctionPrecomputationUpdateErrorResponse'
        '404':
          description: Returned if the function is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JqlFunctionPrecomputationUpdateErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes:
        - write:app-data:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /screens/addToDefault/{fieldId}:
    post:
      tags:
      - Screens
      summary: Add field to default screen
      description: |-
        Adds a field to the default tab of the default screen.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addFieldToDefaultScreen
      parameters:
      - name: fieldId
        in: path
        description: The ID of the field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the field it not found or the field is already
            present.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:screen:jira
        - write:screen:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /mypermissions:
    get:
      tags:
      - Permissions
      summary: Get my permissions
      description: |-
        Returns a list of permissions indicating which permissions the user has. Details of the user's permissions can be obtained in a global, project, issue or comment context.

        The user is reported as having a project permission:

         *  in the global context, if the user has the project permission in any project.
         *  for a project, where the project permission is determined using issue data, if the user meets the permission's criteria for any issue in the project. Otherwise, if the user has the project permission in the project.
         *  for an issue, where a project permission is determined using issue data, if the user has the permission in the issue. Otherwise, if the user has the project permission in the project containing the issue.
         *  for a comment, where the user has both the permission to browse the comment and the project permission for the comment's parent issue. Only the BROWSE\_PROJECTS permission is supported. If a `commentId` is provided whose `permissions` does not equal BROWSE\_PROJECTS, a 400 error will be returned.

        This means that users may be shown as having an issue permission (such as EDIT\_ISSUES) in the global context or a project context but may not have the permission for any or all issues. For example, if Reporters have the EDIT\_ISSUES permission a user would be shown as having this permission in the global context or the context of a project, because any user can be a reporter. However, if they are not the user who reported the issue queried they would not have EDIT\_ISSUES permission for that issue.

        For [Jira Service Management project permissions](https://support.atlassian.com/jira-cloud-administration/docs/customize-jira-service-management-permissions/), this will be evaluated similarly to a user in the customer portal. For example, if the BROWSE\_PROJECTS permission is granted to Service Project Customer - Portal Access, any users with access to the customer portal will have the BROWSE\_PROJECTS permission.

        Global permissions are unaffected by context.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getMyPermissions
      parameters:
      - name: projectKey
        in: query
        description: The key of project. Ignored if `projectId` is provided
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectId
        in: query
        description: The ID of project
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: issueKey
        in: query
        description: The key of the issue. Ignored if `issueId` is provided
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: issueId
        in: query
        description: The ID of the issue
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: permissions
        in: query
        description: A list of permission keys. (Required) This parameter accepts
          a comma-separated list. To get the list of available permissions, use [Get
          all permissions](#api-rest-api-3-permissions-get)
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: BROWSE_PROJECTS,EDIT_ISSUES
        x-changes:
        - announced: 2018-08-01T00:00:00Z
          details: https://developer.atlassian.com/cloud/jira/platform/change-notice-get-my-permissions-requires-permissions-query-parameter/
          effective: 2019-02-01T00:00:00Z
          type: required
        x-showInExample: 'true'
      - name: projectUuid
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectConfigurationUuid
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: commentId
        in: query
        description: The ID of the comment
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permissions'
              example: '{"permissions":{"EDIT_ISSUES":{"description":"Ability to edit
                issues.","havePermission":true,"id":"12","key":"EDIT_ISSUES","name":"Edit
                Issues","type":"PROJECT"}}}'
        '400':
          description: Returned if `permissions` is empty, contains an invalid key,
            or does not equal BROWSE\_PROJECTS when commentId is provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the project or issue is not found or the user does
            not have permission to view the project or issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:permission:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /resolution/search:
    get:
      tags:
      - Issue resolutions
      summary: Search resolutions
      description: |-
        Returns a [paginated](#pagination) list of resolutions. The list can contain all resolutions or a subset determined by any combination of these criteria:

         *  a list of resolutions IDs.
         *  whether the field configuration is a default. This returns resolutions from company-managed (classic) projects only, as there is no concept of default resolutions in team-managed projects.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: searchResolutions
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '0'
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: '50'
      - name: id
        in: query
        description: The list of resolutions IDs to be filtered out
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: ''
      - name: onlyDefault
        in: query
        description: When set to true, return default only, when IDs provided, if
          none of them is default, return empty page. Default value is false
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanResolutionJsonBean'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":1,"values":[{"description":"This
                is what it is supposed to do.","id":"10001","isDefault":true,"name":"Works
                as designed"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:resolution:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /statuses/{statusId}/project/{projectId}/issueTypeUsages:
    get:
      tags:
      - Status
      summary: Get issue type usages by status and project
      description: Returns a page of issue types in a project using a given status.
      operationId: getProjectIssueTypeUsagesForStatus
      parameters:
      - name: statusId
        in: path
        description: The statusId to fetch issue type usages for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: projectId
        in: path
        description: The projectId to fetch issue type usages for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: nextPageToken
        in: query
        description: The cursor for pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: maxResults
        in: query
        description: The maximum number of results to return. Must be an integer between
          1 and 200
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusProjectIssueTypeUsageDTO'
              example: '{"issueTypes":{"nextPageToken":"eyJvIjoyfQ==","values":[{"id":"1000"}]},"projectId":"2000","statusId":"1000"}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Invalid format of nextPageToken"],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
        '404':
          description: Returned if the status with the given ID does not exist.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:status:jira
        - read:issue-type:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /securitylevel/{id}:
    get:
      tags:
      - Issue security level
      summary: Get issue security level
      description: |-
        Returns details of an issue security level.

        Use [Get issue security scheme](#api-rest-api-3-issuesecurityschemes-id-get) to obtain the IDs of issue security levels associated with the issue security scheme.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getIssueSecurityLevel
      parameters:
      - name: id
        in: path
        description: The ID of the issue security level
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityLevel'
              example: '{"description":"Only the reporter and internal staff can see
                this issue.","id":"10021","name":"Reporter Only","self":"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021"}'
        '401':
          description: Returned if the authentication credentials are incorrect.
        '404':
          description: Returned if the issue security level is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:issue-security-level:jira
        - read:project-role:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /field/{fieldId}/contexts:
    get:
      tags:
      - Issue fields
      summary: Get contexts for a field
      description: |-
        Returns a [paginated](#pagination) list of the contexts a field is used in. Deprecated, use [ Get custom field contexts](#api-rest-api-3-field-fieldId-context-get).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getContextsForFieldDeprecated
      parameters:
      - name: fieldId
        in: path
        description: The ID of the field to return contexts for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 20
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanContext'
              example: '{"isLast":false,"maxResults":1,"startAt":0,"total":5,"values":[{"id":10001,"name":"Default
                Context"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /role/{id}/actors:
    get:
      tags:
      - Project role actors
      summary: Get default actors for project role
      description: |-
        Returns the [default actors](#api-rest-api-3-resolution-get) for the project role.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getProjectRoleActorsForRole
      parameters:
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"}]}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have administrative permissions.
        '404':
          description: Returned if the project role is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project-role:jira
        - read:project:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Project role actors
      summary: Add default actors to project role
      description: |-
        Adds [default actors](#api-rest-api-3-resolution-get) to a role. You may add groups or users, but you cannot add groups and users in the same request.

        Changing a project role's default actors does not affect project role members for projects already created.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: addProjectRoleActorsToRole
      parameters:
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorInputBean'
            example:
              user:
              - admin
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"}]}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have administrative permissions.
        '404':
          description: Returned if the project role is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project-role:jira
        - read:project:jira
        - write:project-role:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Project role actors
      summary: Delete default actors from project role
      description: |-
        Deletes the [default actors](#api-rest-api-3-resolution-get) from a project role. You may delete a group or user, but you cannot delete a group and a user in the same request.

        Changing a project role's default actors does not affect project role members for projects already created.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteProjectRoleActorsFromRole
      parameters:
      - name: id
        in: path
        description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
          to get a list of project role IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: user
        in: query
        description: The user account ID of the user to remove as a default actor
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      - name: groupId
        in: query
        description: The group ID of the group to be removed as a default actor. This
          parameter cannot be used with the `group` parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: group
        in: query
        description: The group name of the group to be removed as a default actor.This
          parameter cannot be used with the `groupId` parameter. As a group's name
          can change, use of `groupId` is recommended
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"}]}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have administrative permissions.
        '404':
          description: Returned if the project role is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project-role:jira
        - read:user:jira
        - read:group:jira
        - read:project-role:jira
        - read:project:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /workflowscheme/{id}/issuetype/{issueType}:
    get:
      tags:
      - Workflow schemes
      summary: Get workflow for issue type in workflow scheme
      description: |-
        Returns the issue type-workflow mapping for an issue type in a workflow scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getWorkflowSchemeIssueType
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: issueType
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: returnDraftIfExists
        in: query
        description: Returns the mapping from the workflow scheme's draft rather than
          the workflow scheme, if set to true. If no draft exists, the mapping from
          the workflow scheme is returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTypeWorkflowMapping'
              example: '{"issueType":"10000","workflow":"jira"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme or issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:issue-type:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow schemes
      summary: Set workflow for issue type in workflow scheme
      description: |-
        Sets the workflow for an issue type in a workflow scheme.

        Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` in the request body and a draft workflow scheme is created or updated with the new issue type-workflow mapping. The draft workflow scheme can be published in Jira.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setWorkflowSchemeIssueType
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: issueType
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The issue type-project mapping
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeWorkflowMapping'
            example:
              issueType: '10000'
              updateDraftIfNeeded: false
              workflow: jira
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"jira","description":"The description of
                the example workflow scheme.","draft":false,"id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}'
        '400':
          description: Returned if the workflow cannot be edited and `updateDraftIfNeeded`
            is false.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme or issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Workflow schemes
      summary: Delete workflow for issue type in workflow scheme
      description: |-
        Deletes the issue type-workflow mapping for an issue type in a workflow scheme.

        Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` and a draft workflow scheme is created or updated with the issue type-workflow mapping deleted. The draft workflow scheme can be published in Jira.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteWorkflowSchemeIssueType
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: issueType
        in: path
        description: The ID of the issue type
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: updateDraftIfNeeded
        in: query
        description: Set to true to create or update the draft of a workflow scheme
          and update the mapping in the draft, when the workflow scheme cannot be
          edited. Defaults to `false`
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"jira","description":"The description of
                the example workflow scheme.","draft":false,"id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}'
        '400':
          description: Returned if the workflow cannot be edited and `updateDraftIfNeeded`
            is false.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the workflow scheme or issue type is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:workflow-scheme:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/{issueIdOrKey}/watchers:
    get:
      tags:
      - Issue watchers
      summary: Get issue watchers
      description: |-
        Returns the watchers for an issue.

        This operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is ini
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  To see details of users on the watchlist other than themselves, *View voters and watchers* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
      operationId: getIssueWatchers
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchers'
              example: '{"isWatching":false,"self":"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers","watchCount":1,"watchers":[{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.watcher:jira
        - read:user:jira
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue watchers
      summary: Add watcher
      description: |-
        Adds a user as a watcher of an issue by passing the account ID of the user. For example, `"5b10ac8d82e05b22cc7d4ef5"`. If no user is specified the calling user is added.

        This operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  To add users other than themselves to the watchlist, *Manage watcher list* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
      operationId: addWatcher
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The account ID of the user. Note that username cannot be used
          due to privacy changes
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the permission to manage
            the watcher list.
        '404':
          description: Returned if the issue or the user is not found or the user
            does not have permission to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue.watcher:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue watchers
      summary: Delete watcher
      description: |-
        Deletes a user as a watcher of an issue.

        This operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  To remove users other than themselves from the watchlist, *Manage watcher list* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
      operationId: removeWatcher
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: username
        in: query
        description: This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
          for details
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountId
        in: query
        description: The account ID of the user, which uniquely identifies the user
          across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
          Required
        required: false
        style: form
        explode: true
        schema:
          maxLength: 128
          type: string
          example: 5b10ac8d82e05b22cc7d4ef5
        x-showInExample: 'true'
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if `accountId` is not supplied.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the permission to manage
            the watcher list.
        '404':
          description: Returned if the issue or the user is not found or the user
            does not have permission to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue.watcher:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /workflows:
    post:
      tags:
      - Workflows
      summary: Bulk get workflows
      description: |-
        Returns a list of workflows and related statuses by providing workflow names, workflow IDs, or project and issue types.

        **[Permissions](#permissions) required:**

         *  *Administer Jira* global permission to access all, including project-scoped, workflows
         *  At least one of the *Administer projects* and *View (read-only) workflow* project permissions to access project-scoped workflows
      operationId: readWorkflows
      parameters:
      - name: expand
        in: query
        description: |-
          Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `workflows.usages` Returns the project and issue types that each workflow is associated with.
           *  `statuses.usages` Returns the project and issue types that each status is associated with
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-changes:
        - announced: 2025-02-07T00:00:00Z
          details: https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298
          effective: 2025-07-07T00:00:00Z
          type: removed
      - name: useApprovalConfiguration
        in: query
        description: Return the new field `approvalConfiguration` instead of the deprecated
          status properties for approval configuration
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowReadRequest'
            example:
              projectAndIssueTypes: [
                ]
              workflowIds: [
                ]
              workflowNames:
              - Workflow 1
              - Workflow 2
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowReadResponse'
              example: '{"statuses":[{"description":"","id":"10001","name":"To Do","scope":{"type":"GLOBAL"},"statusCategory":"TODO","statusReference":"10001","usages":[]},{"description":"","id":"10002","name":"In
                Progress","scope":{"type":"GLOBAL"},"statusCategory":"IN_PROGRESS","statusReference":"10002","usages":[]},{"description":"","id":"10003","name":"Done","scope":{"type":"GLOBAL"},"statusCategory":"DONE","statusReference":"10003","usages":[]}],"workflows":[{"description":"","id":"b9ff2384-d3b6-4d4e-9509-3ee19f607168","isEditable":true,"name":"Workflow
                1","scope":{"type":"GLOBAL"},"startPointLayout":{"x":-100.00030899047852,"y":-153.00020599365234},"statuses":[{"deprecated":false,"layout":{"x":317.0000915527344,"y":-16.0},"properties":{},"statusReference":"10002"},{"deprecated":false,"layout":{"x":508.000244140625,"y":-16.0},"properties":{},"statusReference":"10003"},{"deprecated":false,"layout":{"x":114.99993896484375,"y":-16.0},"properties":{},"statusReference":"10001"}],"transitions":[{"actions":[],"description":"","id":"11","links":[],"name":"To
                Do","properties":{},"toStatusReference":"10001","triggers":[],"type":"GLOBAL","validators":[]},{"actions":[],"description":"","id":"21","links":[],"name":"In
                Progress","properties":{},"toStatusReference":"10002","triggers":[],"type":"GLOBAL","validators":[]},{"actions":[],"description":"","id":"41","links":[{"fromPort":0,"fromStatusReference":"10001","toPort":1}],"name":"Start
                work","properties":{},"toStatusReference":"10002","triggers":[],"type":"DIRECTED","validators":[]},{"actions":[],"description":"","id":"1","links":[],"name":"Create","properties":{},"toStatusReference":"10001","triggers":[],"type":"INITIAL","validators":[]},{"actions":[],"description":"","id":"31","links":[],"name":"Done","properties":{},"toStatusReference":"10003","triggers":[],"type":"GLOBAL","validators":[]}],"usages":[],"version":{"id":"f010ac1b-3dd3-43a3-aa66-0ee8a447f76e","versionNumber":0}}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing, or the caller doesn't have permissions to perform the operation.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /issue/properties:
    post:
      tags:
      - Issue properties
      summary: Bulk set issues properties by list
      description: |-
        Sets or updates a list of entity property values on issues. A list of up to 10 entity properties can be specified along with up to 10,000 issues on which to set or update that list of entity properties.

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON. The maximum length of single issue property value is 32768 characters. This operation can be accessed anonymously.

        This operation is:

         *  transactional, either all properties are updated in all eligible issues or, when errors occur, no properties are updated.
         *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: bulkSetIssuesPropertiesList
      parameters: [
        ]
      requestBody:
        description: Issue properties to be set or updated with values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueEntityProperties'
        required: true
      responses:
        '303':
          description: Returned if the operation is successful
        '400':
          description: Return if the request is invalid or the user does not have
            the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /issuesecurityschemes/{schemeId}/level/{levelId}:
    put:
      tags:
      - Issue security schemes
      summary: Update issue security level
      description: |-
        Updates the issue security level.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateSecurityLevel
      parameters:
      - name: schemeId
        in: path
        description: The ID of the issue security scheme level belongs to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: levelId
        in: path
        description: The ID of the issue security level to update
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueSecurityLevelDetails'
            example:
              description: New level description
              name: New level name
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The length of the description must not
                exceed 4,000 characters."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue security level isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue security scheme with ID 10000 not
                found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue security schemes
      summary: Remove issue security level
      description: |-
        Deletes an issue security level.

        This operation is [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: removeLevel
      parameters:
      - name: schemeId
        in: path
        description: The ID of the issue security scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: levelId
        in: path
        description: The ID of the issue security level to remove
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replaceWith
        in: query
        description: The ID of the issue security level that will replace the currently
          selected level
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '303':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProgressBeanObject'
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '"You can''t delete an issue security scheme if any projects
                are associated with it."'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue security level isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue security scheme with ID 10000 not
                found."],"errors":{}}'
        '409':
          description: Returned if a task to remove the issue security level is already
            running.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /component:
    get:
      tags:
      - Project components
      summary: Find components for projects
      description: |-
        Returns a [paginated](#pagination) list of all components in a project, including global (Compass) components when applicable.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: findComponentsForProjects
      parameters:
      - name: projectIdsOrKeys
        in: query
        description: The project IDs and/or project keys (case sensitive)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: orderBy
        in: query
        description: |-
          [Order](#ordering) the results by a field:

           *  `description` Sorts by the component description.
           *  `name` Sorts by component name
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - description
          - -description
          - +description
          - name
          - -name
          - +name
      - name: query
        in: query
        description: Filter the results using a literal string. Components with a
          matching `name` or `description` are returned (case insensitive)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBean2ComponentJsonBean'
              example: '{"isLast":false,"maxResults":2,"startAt":0,"total":2,"values":[{"description":"This
                is a component","id":"10000","name":"Component1","self":"http://www.example.com/jira/rest/api/2/component/10000"},{"ari":"ari:cloud:graph::integration-context/ecda99d9-9b42-4bf7-8b4f-ecb5fcf5868c/component/10001","description":"This
                is a global component","id":"10001","metadata":{"key1":"value1","key2":"value2"},"name":"Component2","self":"http://www.example.com/jira/rest/api/2/component/10001"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:project.component:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Project components
      summary: Create component
      description: |-
        Creates a component. Use components to provide containers for issues within a project. Use components to provide containers for issues within a project.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the component is created or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createComponent
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectComponent'
            example:
              assigneeType: PROJECT_LEAD
              description: This is a Jira component
              isAssigneeTypeValid: false
              leadAccountId: 5b10a2844c20165700ede21g
              name: Component 1
              project: HSP
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectComponent'
              example: '{"ari":"ari:cloud:compass:fdb3fdec-4e70-be56-11ee-0242ac120002:component/fdb3fdec-4e70-11ee-be56-0242ac120002/fdb3fdec-11ee-4e70-be56-0242ac120002","assignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"assigneeType":"PROJECT_LEAD","description":"This
                is a Jira component","id":"10000","isAssigneeTypeValid":false,"lead":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"metadata":{"icon":"https://www.example.com/icon.png"},"name":"Component
                1","project":"HSP","projectId":10000,"realAssignee":{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},"realAssigneeType":"PROJECT_LEAD","self":"https://your-domain.atlassian.net/rest/api/3/component/10000"}'
        '400':
          description: |-
            Returned if:

             *  the user is not found.
             *  `name` is not provided.
             *  `name` is over 255 characters in length.
             *  `projectId` is not provided.
             *  `assigneeType` is an invalid value.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to manage the
            project containing the component or does not have permission to administer
            Jira.
        '404':
          description: Returned if the project is not found or the user does not have
            permission to browse the project containing the component.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-project
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-project
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:user:jira
        - write:project.component:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:project.component:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /field/{fieldId}/context/{contextId}:
    put:
      tags:
      - Issue custom field contexts
      summary: Update custom field context
      description: |-
        Updates a [ custom field context](https://confluence.atlassian.com/adminjiracloud/what-are-custom-field-contexts-991923859.html).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateCustomFieldContext
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldContextUpdateDetails'
            example:
              description: A context used to define the custom field options for bugs.
              name: Bug fields context
        required: true
      responses:
        '204':
          description: Returned if the context is updated
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The contextId has to be provided."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field or the context is not found.
          content:
            application/json:
              example: '{"errorMessages":["The context was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue custom field contexts
      summary: Delete custom field context
      description: |-
        Deletes a [ custom field context](https://confluence.atlassian.com/adminjiracloud/what-are-custom-field-contexts-991923859.html).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteCustomFieldContext
      parameters:
      - name: fieldId
        in: path
        description: The ID of the custom field
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contextId
        in: path
        description: The ID of the context
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the context is deleted
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The contextId has to be provided."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access custom
                field contexts."],"errors":{}}'
        '404':
          description: Returned if the custom field or the context is not found.
          content:
            application/json:
              example: '{"errorMessages":["The context was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:field:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /atlassian-connect/1/addons/{addonKey}/properties:
    get:
      tags:
      - App properties
      summary: Get app properties
      description: |-
        Gets all the properties of an app.

        **[Permissions](#permissions) required:** Only a Connect app whose key matches `addonKey` can make this request.
        Additionally, Forge apps can access Connect app properties (stored against the same `app.connect.key`).
      operationId: AddonPropertiesResource.getAddonProperties_get
      parameters:
      - name: addonKey
        in: path
        description: The key of the app, as defined in its descriptor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeys'
              example:
                keys:
                - self: https://your-domain.atlassian.net/jira/rest/atlassian-connect/1/addon/example.app.key/properties/propertyKey
                  key: propertyKey
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationMessage'
              example:
                message: Access to this resource must be authenticated as an app.
                statusCode: 401
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes: [
          ]
        state: Beta
      x-atlassian-connect-scope: NONE
  /fieldconfiguration:
    get:
      tags:
      - Issue field configurations
      summary: Get all field configurations
      description: |-
        Returns a [paginated](#pagination) list of field configurations. The list can be for all field configurations or a subset determined by any combination of these criteria:

         *  a list of field configuration item IDs.
         *  whether the field configuration is a default.
         *  whether the field configuration name or description contains a query string.

        Only field configurations used in company-managed (classic) projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAllFieldConfigurations
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: id
        in: query
        description: The list of field configuration IDs. To include multiple IDs,
          provide an ampersand-separated list. For example, `id=10000&id=10001`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
      - name: isDefault
        in: query
        description: If *true* returns default field configurations only
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: query
        in: query
        description: The query string used to match against field configuration names
          and descriptions
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanFieldConfigurationDetails'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":2,"values":[{"id":10000,"name":"Default
                Field Configuration","description":"The default field configuration
                description","isDefault":true},{"id":10001,"name":"My Field Configuration","description":"My
                field configuration description"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Issue field configurations
      summary: Create field configuration
      description: |-
        Creates a field configuration. The field configuration is created with the same field properties as the default configuration, with all the fields being optional.

        This operation can only create configurations for use in company-managed (classic) projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createFieldConfiguration
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldConfigurationDetails'
            example:
              description: My field configuration description
              name: My Field Configuration
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldConfiguration'
              example: '{"description":"My field configuration description","id":10001,"name":"My
                Field Configuration"}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field-configuration:jira
        - write:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /bulk/issues/transition:
    get:
      tags:
      - Issue bulk operations
      summary: Get available transitions
      description: |-
        Use this API to retrieve a list of transitions available for the specified issues that can be used or bulk transition operations. You can submit either single or multiple issues in the query to obtain the available transitions.

        The response will provide the available transitions for issues, organized by their respective workflows. **Only the transitions that are common among the issues within that workflow and do not involve any additional field updates will be included.** For bulk transitions that require additional field updates, please utilise the Jira Cloud UI.

        You can request available transitions for up to 1,000 issues in a single operation. This API uses pagination to return responses, delivering 50 workflows at a time.

        **[Permissions](#permissions) required:**

         *  Global bulk change [permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-global-permissions/).
         *  Transition [issues permission](https://support.atlassian.com/jira-cloud-administration/docs/permissions-for-company-managed-projects/#Transition-issues/) in all projects that contain the selected issues.
         *  Browse [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) in all projects that contain the selected issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getAvailableTransitions
      parameters:
      - name: issueIdsOrKeys
        in: query
        description: Comma (,) separated Ids or keys of the issues to get transitions
          available for them
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: (Optional)The end cursor for use in pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startingAfter
        in: query
        description: (Optional)The start cursor for use in pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTransitionGetAvailableTransitions'
              example: '{"availableTransitions":[{"isTransitionsFiltered":false,"issues":["EPIC-1","TASK-1"],"transitions":[{"to":{"statusId":10001,"statusName":"To
                Do"},"transitionId":11,"transitionName":"To Do"},{"to":{"statusId":10002,"statusName":"In
                Progress"},"transitionId":21,"transitionName":"In Progress"},{"to":{"statusId":10003,"statusName":"Done"},"transitionId":31,"transitionName":"Done"}]},{"isTransitionsFiltered":true,"issues":["BUG-1"],"transitions":[{"to":{"statusId":10004,"statusName":"To
                Do bug"},"transitionId":41,"transitionName":"To Do bug"},{"to":{"statusId":10005,"statusName":"Triage"},"transitionId":51,"transitionName":"Triage"}]}]}'
        '400':
          description: Returned if the request is not valid. For example, if a provided
            issue ID or key is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
              example: '{"errors":[{"message":"Some of the issues in the issueIdsOrKeys
                are not valid"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue bulk operations
      summary: Bulk transition issue statuses
      description: |-
        Use this API to submit a bulk issue status transition request. You can transition multiple issues, alongside with their valid transition Ids. You can transition up to 1,000 issues in a single operation.

        **[Permissions](#permissions) required:**

         *  Global bulk change [permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-global-permissions/).
         *  Transition [issues permission](https://support.atlassian.com/jira-cloud-administration/docs/permissions-for-company-managed-projects/#Transition-issues/) in all projects that contain the selected issues.
         *  Browse [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) in all projects that contain the selected issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: submitBulkTransition
      parameters: [
        ]
      requestBody:
        description: The request body containing the issues to be transitioned
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueBulkTransitionPayload'
            example:
              bulkTransitionInputs:
              - selectedIssueIdsOrKeys:
                - '10001'
                - '10002'
                transitionId: '11'
              - selectedIssueIdsOrKeys:
                - TEST-1
                transitionId: '2'
              sendBulkNotification: false
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedBulkOperation'
              example: '{"taskId":"10641"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
              example: '{"errors":[{"message":"Some of the issues in the issueIdsOrKeys
                are not valid"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /configuration/timetracking/list:
    get:
      tags:
      - Time tracking
      summary: Get all time tracking providers
      description: |-
        Returns all time tracking providers. By default, Jira only has one time tracking provider: *JIRA provided time tracking*. However, you can install other time tracking providers via apps from the Atlassian Marketplace. For more information on time tracking providers, see the documentation for the [ Time Tracking Provider](https://developer.atlassian.com/cloud/jira/platform/modules/time-tracking-provider/) module.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAvailableTimeTrackingImplementations
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeTrackingProvider'
              example: '[{"key":"Jira","name":"JIRA provided time tracking","url":"/example/config/url"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.time-tracking:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issuetypescreenscheme/{issueTypeScreenSchemeId}:
    put:
      tags:
      - Issue type screen schemes
      summary: Update issue type screen scheme
      description: |-
        Updates an issue type screen scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateIssueTypeScreenScheme
      parameters:
      - name: issueTypeScreenSchemeId
        in: path
        description: The ID of the issue type screen scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The issue type screen scheme update details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypeScreenSchemeUpdateDetails'
            example:
              description: Screens for scrum issue types.
              name: Scrum scheme
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The issue type screen scheme name is in
                use."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access issue
                type screen schemes."],"errors":{}}'
        '404':
          description: Returned if the issue type screen scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["The issue type screen scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Issue type screen schemes
      summary: Delete issue type screen scheme
      description: |-
        Deletes an issue type screen scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteIssueTypeScreenScheme
      parameters:
      - name: issueTypeScreenSchemeId
        in: path
        description: The ID of the issue type screen scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the issue type screen scheme is deleted
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["The issue type screen scheme cannot be
                deleted because it is assigned to one or more projects."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
        '404':
          description: Returned if the issue type screen scheme is not found.
          content:
            application/json:
              example: '{"errorMessages":["The issue type screen scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue-type-screen-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /user/search/query/key:
    get:
      tags:
      - User search
      summary: Find user keys by query
      description: |-
        Finds users with a structured query and returns a [paginated](#pagination) list of user keys.

        This operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that match the structured query. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the structured query, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).

        The query statements are:

         *  `is assignee of PROJ` Returns the users that are assignees of at least one issue in project *PROJ*.
         *  `is assignee of (PROJ-1, PROJ-2)` Returns users that are assignees on the issues *PROJ-1* or *PROJ-2*.
         *  `is reporter of (PROJ-1, PROJ-2)` Returns users that are reporters on the issues *PROJ-1* or *PROJ-2*.
         *  `is watcher of (PROJ-1, PROJ-2)` Returns users that are watchers on the issues *PROJ-1* or *PROJ-2*.
         *  `is voter of (PROJ-1, PROJ-2)` Returns users that are voters on the issues *PROJ-1* or *PROJ-2*.
         *  `is commenter of (PROJ-1, PROJ-2)` Returns users that have posted a comment on the issues *PROJ-1* or *PROJ-2*.
         *  `is transitioner of (PROJ-1, PROJ-2)` Returns users that have performed a transition on issues *PROJ-1* or *PROJ-2*.
         *  `[propertyKey].entity.property.path is "property value"` Returns users with the entity property value. For example, if user property `location` is set to value `{"office": {"country": "AU", "city": "Sydney"}}`, then it's possible to use `[location].office.city is "Sydney"` to match the user.

        The list of issues can be extended as needed, as in *(PROJ-1, PROJ-2, ... PROJ-n)*. Statements can be combined using the `AND` and `OR` operators to form more complex queries. For example:

        `is assignee of PROJ AND [propertyKey].entity.property.path is "property value"`
      operationId: findUserKeysByQuery
      parameters:
      - name: query
        in: query
        description: The search query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResult
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanUserKey'
        '400':
          description: Returned if the query is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '408':
          description: Returned if the search is timed out.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:comment:jira
        - read:issue:jira
        - read:issue.vote:jira
        - read:issue.watcher:jira
        - read:project:jira
        - read:user.property:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /universal_avatar/view/type/{type}:
    get:
      tags:
      - Avatars
      summary: Get avatar image by type
      description: |-
        Returns the default project, issue type or priority avatar image.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** None.
      operationId: getAvatarImageByType
      parameters:
      - name: type
        in: path
        description: The icon type of the avatar
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - issuetype
          - project
          - priority
        x-showInExample: 'true'
      - name: size
        in: query
        description: The size of the avatar image. If not provided the default size
          is returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - xsmall
          - small
          - medium
          - large
          - xlarge
        x-showInExample: 'true'
      - name: format
        in: query
        description: The format to return the avatar image in. If not provided the
          original content format is returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - png
          - svg
        x-showInExample: 'true'
      responses:
        '200':
          description: Returned if the request is successful
          content:
            '*/*': {
              }
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingResponseBody'
            image/png: {
              }
            image/svg+xml: {
              }
        '401':
          description: Returned if the authentication credentials are incorrect.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
        '404':
          description: Returned if an avatar is not found or an avatar matching the
            requested size is not found.
          content:
            '*/*':
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
            image/png:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
            image/svg+xml:
              example: '{"errorMessages":["Human readable error message"],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:avatar:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /uiModifications/{uiModificationId}:
    put:
      tags:
      - UI modifications (apps)
      summary: Update UI modification
      description: |-
        Updates a UI modification. UI modification can only be updated by Forge apps.

        Each UI modification can define up to 1000 contexts. The same context can be assigned to maximum 100 UI modifications.

        **[Permissions](#permissions) required:**

         *  *None* if the UI modification is created without contexts.
         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the UI modification is created with contexts.

        The new `write:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: updateUiModification
      parameters:
      - name: uiModificationId
        in: path
        description: The ID of the UI modification
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Details of the UI modification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUiModificationDetails'
            example:
              contexts:
              - issueTypeId: '10000'
                projectId: '10000'
                viewType: GIC
              - issueTypeId: '10001'
                projectId: '10000'
                viewType: IssueView
              - issueTypeId: '10002'
                projectId: '10000'
                viewType: IssueTransition
              data: '{field: ''Story Points'', config: {hidden: true}}'
              name: Updated Reveal Story Points
        required: true
      responses:
        '204':
          description: Returned if the UI modification is updated
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the request is not from a Forge app.
        '404':
          description: Returned if the UI modification, a project or an issue type
            in the context are not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedErrorCollection'
              example: '{"details":{"issueTypesNotFound":{"10001":["10000","10001"]},"projectNotFound":["10000"]},"errorMessages":["Project
                with ID ''10000'' was not found.","Project with ID ''10001''. The
                following issue types were not found: [10000, 10001]"],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:jira-work
        - write:app-data:jira
        state: Beta
      x-atlassian-connect-scope: NONE
    delete:
      tags:
      - UI modifications (apps)
      summary: Delete UI modification
      description: |-
        Deletes a UI modification. All the contexts that belong to the UI modification are deleted too. UI modification can only be deleted by Forge apps.

        **[Permissions](#permissions) required:** None.

        The new `write:app-data:jira` OAuth scope is 100% optional now, and not using it won't break your app. However, we recommend adding it to your app's scope list because we will eventually make it mandatory.
      operationId: deleteUiModification
      parameters:
      - name: uiModificationId
        in: path
        description: The ID of the UI modification
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the UI modification is deleted
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the request is not from a Forge app.
        '404':
          description: Returned if the UI modification is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2: [
          ]
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes: [
          ]
        state: Current
      - scheme: OAuth2
        scopes:
        - write:app-data:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /notificationscheme/{id}:
    get:
      tags:
      - Issue notification schemes
      summary: Get notification scheme
      description: |-
        Returns a [notification scheme](https://confluence.atlassian.com/x/8YdKLg), including the list of events and the recipients who will receive notifications for those events.

        **[Permissions](#permissions) required:** Permission to access Jira, however, the user must have permission to administer at least one project associated with the notification scheme.
      operationId: getNotificationScheme
      parameters:
      - name: id
        in: path
        description: The ID of the notification scheme. Use [Get notification schemes
          paginated](#api-rest-api-3-notificationscheme-get) to get a list of notification
          scheme IDs
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:

           *  `all` Returns all expandable information
           *  `field` Returns information about any custom fields assigned to receive an event
           *  `group` Returns information about any groups assigned to receive an event
           *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information
           *  `projectRole` Returns information about any project roles assigned to receive an event
           *  `user` Returns information about any users assigned to receive an event
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationScheme'
              example: '{"description":"description","expand":"notificationSchemeEvents,user,group,projectRole,field,all","id":10100,"name":"notification
                scheme name","notificationSchemeEvents":[{"event":{"description":"Event
                published when an issue is created","id":1,"name":"Issue created"},"notifications":[{"expand":"group","group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":1,"notificationType":"Group","parameter":"jira-administrators","recipient":"276f955c-63d7-42c8-9520-92d01dca0625"},{"id":2,"notificationType":"CurrentAssignee"},{"expand":"projectRole","id":3,"notificationType":"ProjectRole","parameter":"10360","projectRole":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"}},"recipient":"10360"},{"emailAddress":"rest-developer@atlassian.com","id":4,"notificationType":"EmailAddress","parameter":"rest-developer@atlassian.com","recipient":"rest-developer@atlassian.com"},{"expand":"user","id":5,"notificationType":"User","parameter":"5b10a2844c20165700ede21g","recipient":"5b10a2844c20165700ede21g","user":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}},{"expand":"field","field":{"clauseNames":["cf[10101]","New
                custom field"],"custom":true,"id":"customfield_10101","key":"customfield_10101","name":"New
                custom field","navigable":true,"orderable":true,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:project","customId":10101,"type":"project"},"searchable":true,"untranslatedName":"New
                custom field"},"id":6,"notificationType":"GroupCustomField","parameter":"customfield_10101","recipient":"customfield_10101"}]},{"event":{"description":"Custom
                event that is published together with an issue created event","id":20,"name":"Custom
                event","templateEvent":{"description":"Event published when an issue
                is created","id":1,"name":"Issue created"}},"notifications":[{"expand":"group","group":{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jira-administrators","self":"https://your-domain.atlassian.net/rest/api/3/group?groupId=276f955c-63d7-42c8-9520-92d01dca0625"},"id":1,"notificationType":"Group","parameter":"jira-administrators","recipient":"276f955c-63d7-42c8-9520-92d01dca0625"},{"id":2,"notificationType":"CurrentAssignee"},{"expand":"projectRole","id":3,"notificationType":"ProjectRole","parameter":"10360","projectRole":{"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360","name":"Developers","id":10360,"description":"A
                project role that represents developers in a project","actors":[{"actorGroup":{"name":"jira-developers","displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"}},"recipient":"10360"},{"emailAddress":"rest-developer@atlassian.com","id":4,"notificationType":"EmailAddress","parameter":"rest-developer@atlassian.com","recipient":"rest-developer@atlassian.com"},{"expand":"user","id":5,"notificationType":"User","parameter":"5b10a2844c20165700ede21g","recipient":"5b10a2844c20165700ede21g","user":{"accountId":"5b10a2844c20165700ede21g","active":false,"displayName":"Mia
                Krystof","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"}},{"expand":"field","field":{"clauseNames":["cf[10101]","New
                custom field"],"custom":true,"id":"customfield_10101","key":"customfield_10101","name":"New
                custom field","navigable":true,"orderable":true,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:project","customId":10101,"type":"project"},"searchable":true,"untranslatedName":"New
                custom field"},"id":6,"notificationType":"GroupCustomField","parameter":"customfield_10101","recipient":"customfield_10101"}]}],"projects":[10001,10002],"self":"https://your-domain.atlassian.net/rest/api/3/notificationscheme"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the notification scheme is not found or the user
            does not have permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field:jira
        - read:notification-scheme:jira
        - read:project:jira
        - read:project-role:jira
        - read:user:jira
        - read:avatar:jira
        - read:field-configuration:jira
        - read:group:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Issue notification schemes
      summary: Update notification scheme
      description: |-
        Updates a notification scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateNotificationScheme
      parameters:
      - name: id
        in: path
        description: The ID of the notification scheme
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationSchemeDetails'
            example:
              description: My updated notification scheme description
              name: My updated notification scheme
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The length of the description must not
                exceed 4000 characters."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the notification scheme isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Notification scheme with ID 10000 not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /issuesecurityschemes/level/default:
    put:
      tags:
      - Issue security schemes
      summary: Set default issue security levels
      description: |-
        Sets default issue security levels for schemes.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: setDefaultLevels
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDefaultLevelsRequest'
            example:
              defaultValues:
              - defaultLevelId: '20000'
                issueSecuritySchemeId: '10000'
              - defaultLevelId: '30000'
                issueSecuritySchemeId: '12000'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["some-wrong-string is not a valid value.
                The issue security scheme ID must be a positive integer."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user doesn't have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["You are not authorized to perform this
                action. Administrator privileges are required."],"errors":{}}'
        '404':
          description: Returned if the issue resolution isn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["Issue security scheme with ID 10000 not
                found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /plans/plan/{planId}/archive:
    put:
      tags:
      - Plans
      summary: Archive plan
      description: |-
        Archives a plan.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: archivePlan
      parameters:
      - name: planId
        in: path
        description: The ID of the plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '401':
          description: Returned if the user is not logged in.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user does not have the Administer Jira global
            permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the plan is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '409':
          description: Returned if the plan is not active.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /project/type/{projectTypeKey}/accessible:
    get:
      tags:
      - Project types
      summary: Get accessible project type by key
      description: |-
        Returns a [project type](https://confluence.atlassian.com/x/Var1Nw) if it is accessible to the user.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getAccessibleProjectTypeByKey
      parameters:
      - name: projectTypeKey
        in: path
        description: The key of the project type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - software
          - service_desk
          - business
          - product_discovery
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
              example: '{"color":"#FFFFFF","descriptionI18nKey":"jira.project.type.business.description","formattedKey":"Business","icon":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+","key":"business"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the project type is not accessible to the user.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-type:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}:
    get:
      tags:
      - Dashboards
      summary: Get dashboard item property
      description: |-
        Returns the key and value of a dashboard item property.

        A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).

        When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.

        There is no resource to set or get dashboard items.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** The user must be the owner of the dashboard or have the dashboard shared with them. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users, and is accessible to anonymous users when Jira\\u2019s anonymous access is permitted.
      operationId: getDashboardItemProperty
      parameters:
      - name: dashboardId
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: itemId
        in: path
        description: The ID of the dashboard item
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the dashboard item property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityProperty'
              example: '{"key":"issue.support","value":{"system.conversation.id":"b1bf38be-5e94-4b40-a3b8-9278735ee1e6","system.support.time":"1m"}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the dashboard, the dashboard item, or dashboard
            item property is not found, or the dashboard is not owned by or shared
            with the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:dashboard.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Dashboards
      summary: Set dashboard item property
      description: |-
        Sets the value of a dashboard item property. Use this resource in apps to store custom data against a dashboard item.

        A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).

        When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.

        There is no resource to set or get dashboard items.

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard.
      operationId: setDashboardItemProperty
      parameters:
      - name: dashboardId
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: itemId
        in: path
        description: The ID of the dashboard item
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the dashboard item property. The maximum length is
          255 characters. For dashboard items with a spec URI and no complete module
          key, if the provided propertyKey is equal to "config", the request body's
          JSON must be an object with all keys and values as strings
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The value of the property. The value has to be a valid, non-empty
          [JSON](https://tools.ietf.org/html/rfc4627) value. The maximum length of
          the property value is 32768 bytes
        content:
          application/json:
            schema: {
              }
            example:
              number: 5
              string: string-value
        required: true
      responses:
        '200':
          description: Returned if the dashboard item property is updated
          content:
            application/json:
              schema: {
                }
        '201':
          description: Returned if the dashboard item property is created.
          content:
            application/json:
              schema: {
                }
        '400':
          description: "Returned if:\n\n *  Request is invalid\n *  Or if all of these\
            \ conditions are met in the request:\n    \n     *  The dashboard item\
            \ has a spec URI and no complete module key\n     *  The value of propertyKey\
            \ is equal to \"config\"\n     *  The request body contains a JSON object\
            \ whose keys and values are not strings."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
              example: '{"errorMessages":["The JSON data provided for the property
                has too many levels. It must be an object with all keys and values
                as strings."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user is not the owner of the dashboard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the dashboard item is not found or the dashboard
            is not shared with the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:dashboard.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Dashboards
      summary: Delete dashboard item property
      description: |-
        Deletes a dashboard item property.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard.
      operationId: deleteDashboardItemProperty
      parameters:
      - name: dashboardId
        in: path
        description: The ID of the dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: itemId
        in: path
        description: The ID of the dashboard item
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the dashboard item property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the dashboard item property is deleted
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the dashboard or dashboard item ID is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '403':
          description: Returned if the user is not the owner of the dashboard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
        '404':
          description: Returned if the dashboard item is not found or the dashboard
            is not shared with the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCollection'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:dashboard.property:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /configuration:
    get:
      tags:
      - Jira settings
      summary: Get global settings
      description: |-
        Returns the [global settings](https://confluence.atlassian.com/x/qYXKM) in Jira. These settings determine whether optional features (for example, subtasks, time tracking, and others) are enabled. If time tracking is enabled, this operation also returns the time tracking configuration.

        **[Permissions](#permissions) required:** Permission to access Jira.
      operationId: getConfiguration
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
              example: '{"attachmentsEnabled":true,"issueLinkingEnabled":true,"subTasksEnabled":false,"timeTrackingConfiguration":{"defaultUnit":"day","timeFormat":"pretty","workingDaysPerWeek":5.0,"workingHoursPerDay":8.0},"timeTrackingEnabled":true,"unassignedIssuesAllowed":false,"votingEnabled":true,"watchingEnabled":true}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:instance-configuration:jira
        - read:issue.time-tracking:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /version/{id}/unresolvedIssueCount:
    get:
      tags:
      - Project versions
      summary: Get version's unresolved issues count
      description: |-
        Returns counts of the issues and unresolved issues for the project version.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* project permission for the project that contains the version.
      operationId: getVersionUnresolvedIssues
      parameters:
      - name: id
        in: path
        description: The ID of the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionUnresolvedIssuesCount'
              example: '{"issuesCount":30,"issuesUnresolvedCount":23,"self":"https://your-domain.atlassian.net/rest/api/3/version/10000"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: |-
            Returned if:

             *  the version is not found.
             *  the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-version:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /workflow/{entityId}:
    delete:
      tags:
      - Workflows
      summary: Delete inactive workflow
      description: |-
        Deletes a workflow.

        The workflow cannot be deleted if it is:

         *  an active workflow.
         *  a system workflow.
         *  associated with any workflow scheme.
         *  associated with any draft workflow scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteInactiveWorkflow
      parameters:
      - name: entityId
        in: path
        description: The entity ID of the workflow
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the workflow is deleted
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Cannot delete an active workflow."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access the
                workflow configuration."],"errors":{}}'
        '404':
          description: Returned if the workflow is not found.
          content:
            application/json:
              example: '{"errorMessages":["The workflow was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:workflow:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /group/bulk:
    get:
      tags:
      - Groups
      summary: Bulk get groups
      description: |-
        Returns a [paginated](#pagination) list of groups.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: bulkGetGroups
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: groupId
        in: query
        description: The ID of a group. To specify multiple IDs, pass multiple `groupId`
          parameters. For example, `groupId=5b10a2844c20165700ede21g&groupId=5b10ac8d82e05b22cc7d4ef5`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          example: 3571b9a7-348f-414a-9087-8e1ea03a7df8
          items:
            type: string
            example: 3571b9a7-348f-414a-9087-8e1ea03a7df8
            default: ''
        x-showInExample: 'true'
      - name: groupName
        in: query
        description: The name of a group. To specify multiple names, pass multiple
          `groupName` parameters. For example, `groupName=administrators&groupName=jira-software-users`
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            default: ''
      - name: accessType
        in: query
        description: 'The access level of a group. Valid values: ''site-admin'', ''admin'',
          ''user'''
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: applicationKey
        in: query
        description: 'The application key of the product user groups to search for.
          Valid values: ''jira-servicedesk'', ''jira-software'', ''jira-product-discovery'',
          ''jira-core'''
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanGroupDetails'
              example: '{"isLast":true,"maxResults":10,"startAt":0,"total":2,"values":[{"groupId":"276f955c-63d7-42c8-9520-92d01dca0625","name":"jdog-developers"},{"groupId":"6e87dc72-4f1f-421f-9382-2fee8b652487","name":"juvenal-bot"}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Browse users and groups permission is required
                to view groups."],"errors":{}}'
        '500':
          description: Returned if the group with the given access level can't be
            retrieved.
          content:
            application/json:
              example: '{"errorMessages":["Couldn''t retrieve groups with the site-admin
                accessType."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:group:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: READ
  /version/{id}/relatedwork:
    get:
      tags:
      - Project versions
      summary: Get related work
      description: |-
        Returns related work items for the given version id.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the version.
      operationId: getRelatedWork
      parameters:
      - name: id
        in: path
        description: The ID of the version
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VersionRelatedWork'
              example: '[{"category":"Design","issueId":10001,"relatedWorkId":"fabcdef6-7878-1234-beaf-43211234abcd","title":"Design
                link","url":"https://www.atlassian.com"},{"category":"Communications","relatedWorkId":"fabcdef6-7878-1234-beaf-43211234abce","title":"Chat
                application","url":"https://www.atlassian.com"},{"category":"External
                Link","issueId":10003,"relatedWorkId":"fabcdef6-7878-1234-beaf-43211234abcf","url":"https://www.atlassian.com"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the version is not found or the user does not have
            the necessary permission.
        '500':
          description: Returned if reading related work fails
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project-version:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Project versions
      summary: Update related work
      description: |-
        Updates the given related work. You can only update generic link related works via Rest APIs. Any archived version related works can't be edited.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Resolve issues:* and *Edit issues* [Managing project permissions](https://confluence.atlassian.com/adminjiraserver/managing-project-permissions-938847145.html) for the project that contains the version.
      operationId: updateRelatedWork
      parameters:
      - name: id
        in: path
        description: The ID of the version to update the related work on. For the
          related work id, pass it to the input JSON
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionRelatedWork'
            example:
              category: Design
              relatedWorkId: fabcdef6-7878-1234-beaf-43211234abcd
              title: Design link
              url: https://www.atlassian.com
        required: true
      responses:
        '200':
          description: Returned if the request is successful together with updated
            related work
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionRelatedWork'
              example: '{"category":"Design","relatedWorkId":"fabcdef6-7878-1234-beaf-43211234abcd","title":"Design
                link","url":"https://www.atlassian.com"}'
        '400':
          description: Returned if the request data is invalid
        '401':
          description: Returned if the authentication credentials are incorrect.
        '403':
          description: Returned if the user does not have the required permissions.
        '404':
          description: Returned if the version or the related work is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
    post:
      tags:
      - Project versions
      summary: Create related work
      description: |-
        Creates a related work for the given version. You can only create a generic link type of related works via this API. relatedWorkId will be auto-generated UUID, that does not need to be provided.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** *Resolve issues:* and *Edit issues* [Managing project permissions](https://confluence.atlassian.com/adminjiraserver/managing-project-permissions-938847145.html) for the project that contains the version.
      operationId: createRelatedWork
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionRelatedWork'
            example:
              category: Design
              title: Design link
              url: https://www.atlassian.com
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionRelatedWork'
              example: '{"category":"Design","relatedWorkId":"fabcdef6-7878-1234-beaf-43211234abcd","title":"Design
                link","url":"https://www.atlassian.com"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
        '404':
          description: Returned if the version is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        state: Beta
      x-atlassian-connect-scope: PROJECT_ADMIN
  /workflowscheme/project:
    get:
      tags:
      - Workflow scheme project associations
      summary: Get workflow scheme project associations
      description: |-
        Returns a list of the workflow schemes associated with a list of projects. Each returned workflow scheme includes a list of the requested projects associated with it. Any team-managed or non-existent projects in the request are ignored and no errors are returned.

        If the project is associated with the `Default Workflow Scheme` no ID is returned. This is because the way the `Default Workflow Scheme` is stored means it has no ID.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getWorkflowSchemeProjectAssociations
      parameters:
      - name: projectId
        in: query
        description: 'The ID of a project to return the workflow schemes for. To include
          multiple projects, provide an ampersand-Jim: oneseparated list. For example,
          `projectId=10000&projectId=10001`'
        required: true
        style: form
        explode: true
        schema:
          maxItems: 100
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int64
            example: 10010
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerOfWorkflowSchemeAssociations'
              example: '{"values":[{"projectIds":["10010","10020"],"workflowScheme":{"defaultWorkflow":"jira","description":"The
                description of the example workflow scheme.","id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}}]}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              example: '{"errorMessages":[],"errors":{"projectId":"The ID of a project
                has to be provided."}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access workflow
                scheme associations."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow scheme project associations
      summary: Assign workflow scheme to project
      description: |-
        Assigns a workflow scheme to a project. This operation is performed only when there are no issues in the project.

        Workflow schemes can only be assigned to classic projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: assignSchemeToProject
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowSchemeProjectAssociation'
            example:
              projectId: '10001'
              workflowSchemeId: '10032'
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              example: '{"errorMessages":["Only classic projects can have workflow
                schemes assigned."],"errors":{}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only Jira administrators can access workflow
                scheme associations."],"errors":{}}'
        '404':
          description: Returned if the workflow scheme or the project are not found.
          content:
            application/json:
              example: '{"errorMessages":["The workflow scheme was not found."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project/{projectIdOrKey}/features:
    get:
      tags:
      - Project features
      summary: Get project features
      description: Returns the list of features for a project.
      operationId: getFeaturesForProject
      parameters:
      - name: projectIdOrKey
        in: path
        description: The ID or (case-sensitive) key of the project
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerForProjectFeatures'
              example: '{"features":[{"feature":"jsw.classic.roadmap","imageUri":"https://jira.atlassian.com/s/sb53l8/b/3/ab8a7691e4738b4f147e293f0864adfd5b8d3c85/_/download/resources/com.atlassian.jira.rest:classic-project-features/simple-roadmap-feature.svg","localisedDescription":"Your
                roadmap is an optimized location to create and manage your epics.","localisedName":"Roadmap","prerequisites":[],"projectId":10001,"state":"ENABLED","toggleLocked":true},{"feature":"jsw.classic.backlog","imageUri":"https://jira.atlassian.com/s/sb53l8/b/3/ab8a7691e4738b4f147e293f0864adfd5b8d3c85/_/download/resources/com.atlassian.jira.rest:classic-project-features/simple-backlog-feature.svg","localisedDescription":"Plan
                and prioritize work in a dedicated space. To enable and configure
                the backlog for each board, go to board settings.","localisedName":"Backlog","prerequisites":[],"projectId":10001,"state":"ENABLED","toggleLocked":true}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
        '404':
          description: Returned if the project is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project.feature:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /issue/unarchive:
    put:
      tags:
      - Issues
      summary: Unarchive issue(s) by issue keys/ID
      description: "Enables admins to unarchive up to 1000 issues in a single request\
        \ using issue ID/key, returning details of the issue(s) unarchived in the\
        \ process and the errors encountered, if any.\n\n**Note that:**\n\n *  you\
        \ can't unarchive subtasks directly, only through their parent issues\n *\
        \  you can only unarchive issues from software, service management, and business\
        \ projects\n\n**[Permissions](#permissions) required:** Jira admin or site\
        \ admin: [global permission](https://confluence.atlassian.com/x/x4dKLg)\n\n\
        **License required:** Premium or Enterprise\n\n**Signed-in users only:** This\
        \ API can't be accessed anonymously.\n\n  \n"
      operationId: unarchiveIssues
      parameters: [
        ]
      requestBody:
        description: Contains a list of issue keys or IDs to be unarchived
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueArchivalSyncRequest'
            example:
              issueIdsOrKeys:
              - PR-1
              - '1001'
              - PROJECT-2
        required: true
      responses:
        '200':
          description: Returned if there is at least one valid issue to unarchive
            in the request. It will return the count of unarchived issues, which also
            includes the count of the subtasks unarchived, and it will show the detailed
            errors for those issues which are not unarchived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueArchivalSyncResponse'
              example: '{"errors":{"issueIsSubtask":{"count":3,"issueIdsOrKeys":["ST-1","ST-2","ST-3"],"message":"Issue
                is subtask."},"issuesInArchivedProjects":{"count":2,"issueIdsOrKeys":["AR-1","AR-2"],"message":"Issue
                exists in archived project."},"issuesNotFound":{"count":3,"issueIdsOrKeys":["PR-1","PR-2","PR-3"],"message":"Issue
                not found."}},"numberOfIssuesUpdated":10}'
        '400':
          description: |-
            Returned if none of the issues in the request are eligible to be unarchived. Possible reasons:

             *  the issues weren't found
             *  the issues are subtasks
             *  the issues belong to archived projects
          content:
            application/json:
              example: '{"errorMessages":["No valid issue to archive or unarchive.
                Bad request."],"errors":{}}'
        '401':
          description: Returned if no issues were unarchived because the provided
            authentication credentials are either missing or invalid.
          content:
            application/json:
              example: '{"errorMessages":["User is not logged in."],"errors":{}}'
        '403':
          description: Returned if no issues were unarchived because the user lacks
            the required Jira admin or site admin permissions.
          content:
            application/json:
              example: '{"errorMessages":["Only admins can archive or unarchive issues.
                Access denied."],"errors":{}}'
        '412':
          description: Returned if one or more issues were successfully unarchived,
            but the operation was incomplete because the number of issue IDs or keys
            provided exceeds 1000.
          content:
            application/json:
              example: '{"errorMessages":["The number of issues to archive or unarchive
                exceeds the hard limit of 1000. Precondition failed."],"errors":{}}'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        state: Beta
      x-experimental: true
      x-atlassian-connect-scope: WRITE
  /bulk/issues/fields:
    get:
      tags:
      - Issue bulk operations
      summary: Get bulk editable fields
      description: |-
        Use this API to get a list of fields visible to the user to perform bulk edit operations. You can pass single or multiple issues in the query to get eligible editable fields. This API uses pagination to return responses, delivering 50 fields at a time.

        **[Permissions](#permissions) required:**

         *  Global bulk change [permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-global-permissions/).
         *  Browse [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) in all projects that contain the selected issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
         *  Depending on the field, any field-specific permissions required to edit it.
      operationId: getBulkEditableFields
      parameters:
      - name: issueIdsOrKeys
        in: query
        description: The IDs or keys of the issues to get editable fields from
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: searchText
        in: query
        description: (Optional)The text to search for in the editable fields
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: endingBefore
        in: query
        description: (Optional)The end cursor for use in pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startingAfter
        in: query
        description: (Optional)The start cursor for use in pagination
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkEditGetFields'
              example: '{"fields":[{"id":"assignee","isRequired":false,"name":"Assignee","searchUrl":"https://your-domain.atlassian.net/rest/api/3/user/assignable/multiProjectSearch?projectKeys=KAN&query=","type":"assignee"},{"id":"components","isRequired":false,"multiSelectFieldOptions":["ADD","REMOVE","REPLACE","REMOVE_ALL"],"name":"Components","type":"components","unavailableMessage":"{0}NOTE{1}:
                The project of the selected issue(s) does not have any components."},{"fieldOptions":[{"description":"This
                problem will block progress.","id":"1","priority":"Highest"},{"description":"Has
                the potential to affect progress.","id":"2","priority":"Lowest"},{"description":"Trivial
                problem with little or no impact on progress.","id":"3","priority":"Medium"}],"id":"priority","isRequired":false,"name":"Priority","type":"priority"}]}'
        '400':
          description: Returned if the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
        '403':
          description: Returned if the user does not have the necessary permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
        '404':
          description: Returned if no editable fields are found for the provided issue
            IDs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Issue bulk operations
      summary: Bulk edit issues
      description: |-
        Use this API to submit a bulk edit request and simultaneously edit multiple issues. There are limits applied to the number of issues and fields that can be edited. A single request can accommodate a maximum of 1000 issues (including subtasks) and 200 fields.

        **[Permissions](#permissions) required:**

         *  Global bulk change [permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-global-permissions/).
         *  Browse [project permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) in all projects that contain the selected issues.
         *  Edit [issues permission](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-permissions/) in all projects that contain the selected issues.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: submitBulkEdit
      parameters: [
        ]
      requestBody:
        description: The request body containing the issues to be edited and the new
          field values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueBulkEditPayload'
        required: true
      responses:
        '201':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedBulkOperation'
              example: '{"taskId":"10641"}'
        '400':
          description: Returned if the request is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
              example: '{"errors":[{"message":"The following editedFieldInput values
                are not listed as selectedActions : issuetype"}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationErrorResponse'
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue:jira
        - read:issue:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
  /atlassian-connect/1/migration/properties/{entityType}:
    put:
      tags:
      - App migration
      summary: Bulk update entity properties
      description: Updates the values of multiple entity properties for an object,
        up to 50 updates per request. This operation is for use by Connect apps during
        app migration.
      operationId: MigrationResource.updateEntityPropertiesValue_put
      parameters:
      - name: Atlassian-Transfer-Id
        in: header
        description: The app migration transfer ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        x-ballerina-name: atlassianTransferId
      - name: entityType
        in: path
        description: The type indicating the object that contains the entity properties
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - IssueProperty
          - CommentProperty
          - DashboardItemProperty
          - IssueTypeProperty
          - ProjectProperty
          - UserProperty
          - WorklogProperty
          - BoardProperty
          - SprintProperty
      requestBody:
        content:
          application/json:
            schema:
              maxItems: 50
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/EntityPropertyDetails'
        required: true
      responses:
        '200':
          description: Returned if the request is successful
        '400':
          description: Returned if the request is not valid.
        '403':
          description: Returned if the authorisation credentials are incorrect or
            missing.
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-connect-scope: NONE
  /users/search:
    get:
      tags:
      - Users
      summary: Get all users
      description: |-
        Returns a list of all users, including active users, inactive users and previously deleted users that have an Atlassian account.

        Privacy controls are applied to the response based on the users' preferences. This could mean, for example, that the user's email address is hidden. See the [Profile visibility overview](https://developer.atlassian.com/cloud/jira/platform/profile-visibility/) for more details.

        **[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAllUsers
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return (limited to 1000)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example: '[{"accountId":"5b10a2844c20165700ede21g","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48"},"displayName":"Mia
                Krystof","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g"},{"accountId":"5b10ac8d82e05b22cc7d4ef5","accountType":"atlassian","active":false,"avatarUrls":{"16x16":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16","24x24":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24","32x32":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32","48x48":"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48"},"displayName":"Emma
                Richards","key":"","name":"","self":"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5"}]'
        '400':
          description: Returned if the request is invalid.
        '403':
          description: Returned if the user doesn't have the necessary permission.
        '409':
          description: Returned if the request takes longer than 10 seconds or is
            interrupted.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-user
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-user
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        state: Beta
      x-atlassian-connect-scope: INACCESSIBLE
  /issuetypescreenscheme/{issueTypeScreenSchemeId}/project:
    get:
      tags:
      - Issue type screen schemes
      summary: Get issue type screen scheme projects
      description: |-
        Returns a [paginated](#pagination) list of projects associated with an issue type screen scheme.

        Only company-managed projects associated with an issue type screen scheme are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getProjectsForIssueTypeScreenScheme
      parameters:
      - name: issueTypeScreenSchemeId
        in: path
        description: The ID of the issue type screen scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: query
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanProjectDetails'
              example: '{"isLast":true,"maxResults":100,"startAt":0,"total":1,"values":[{"avatarUrls":{"16x16":"secure/projectavatar?size=xsmall&pid=10000","24x24":"secure/projectavatar?size=small&pid=10000","32x32":"secure/projectavatar?size=medium&pid=10000","48x48":"secure/projectavatar?size=large&pid=10000"},"id":"10000","key":"EX","name":"Example","projectCategory":{"description":"Project
                category description","id":"10000","name":"A project category"},"projectTypeKey":"ProjectTypeKey{key=''software''}","self":"project/EX","simplified":false}]}'
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the required permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:project:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /workflowscheme/{id}/workflow:
    get:
      tags:
      - Workflow schemes
      summary: Get issue types for workflows in workflow scheme
      description: |-
        Returns the workflow-issue type mappings for a workflow scheme.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getWorkflow
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: workflowName
        in: query
        description: The name of a workflow in the scheme. Limits the results to the
          workflow-issue type mapping for the specified workflow
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: returnDraftIfExists
        in: query
        description: Returns the mapping from the workflow scheme's draft rather than
          the workflow scheme, if set to true. If no draft exists, the mapping from
          the workflow scheme is returned
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTypesWorkflowMapping'
              example: '{"defaultMapping":false,"issueTypes":["10000","10001"],"workflow":"jira"}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if either the workflow scheme or workflow is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:issue-type:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Workflow schemes
      summary: Set issue types for workflow in workflow scheme
      description: |-
        Sets the issue types for a workflow in a workflow scheme. The workflow can also be set as the default workflow for the workflow scheme. Unmapped issues types are mapped to the default workflow.

        Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` in the request body and a draft workflow scheme is created or updated with the new workflow-issue types mappings. The draft workflow scheme can be published in Jira.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateWorkflowMapping
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: workflowName
        in: query
        description: The name of the workflow
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTypesWorkflowMapping'
            example:
              issueTypes:
              - '10000'
              updateDraftIfNeeded: true
              workflow: jira
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowScheme'
              example: '{"defaultWorkflow":"jira","description":"The description of
                the example workflow scheme.","draft":false,"id":101010,"issueTypeMappings":{"10000":"scrum
                workflow","10001":"builds workflow"},"name":"Example workflow scheme","self":"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010"}'
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if any of the following is true:

             *  The workflow scheme is not found.
             *  The workflow is not found.
             *  The workflow is not specified.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:workflow-scheme:jira
        - read:workflow-scheme:jira
        - read:workflow:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type:jira
        - read:project-category:jira
        - read:project:jira
        - read:user:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Workflow schemes
      summary: Delete issue types for workflow in workflow scheme
      description: |-
        Deletes the workflow-issue type mapping for a workflow in a workflow scheme.

        Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` and a draft workflow scheme is created or updated with the workflow-issue type mapping deleted. The draft workflow scheme can be published in Jira.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteWorkflowMapping
      parameters:
      - name: id
        in: path
        description: The ID of the workflow scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: workflowName
        in: query
        description: The name of the workflow
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: updateDraftIfNeeded
        in: query
        description: Set to true to create or update the draft of a workflow scheme
          and delete the mapping from the draft, when the workflow scheme cannot be
          edited. Defaults to `false`
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
        '400':
          description: Returned if the workflow cannot be edited and `updateDraftIfNeeded`
            is not true.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: |-
            Returned if any of the following is true:

             *  The workflow scheme is not found.
             *  The workflow is not found.
             *  The workflow is not specified.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:workflow-scheme:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /project:
    get:
      tags:
      - Projects
      summary: Get all projects
      description: |-
        Returns all projects visible to the user. Deprecated, use [ Get projects paginated](#api-rest-api-3-project-search-get) that supports search and pagination.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:** Projects are returned only where the user has *Browse Projects* or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
      operationId: getAllProjects
      parameters:
      - name: expand
        in: query
        description: |-
          Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:

           *  `description` Returns the project description.
           *  `issueTypes` Returns all issue types associated with the project.
           *  `lead` Returns information about the project lead.
           *  `projectKeys` Returns all project keys associated with the project
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: recent
        in: query
        description: Returns the user's most recently accessed projects. You may specify
          the number of results to return up to a maximum of 20. If access is anonymous,
          then the recently accessed projects are based on the current HTTP session
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: properties
        in: query
        description: A list of project properties to return for the project. This
          parameter accepts a comma-separated list
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            default: ''
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
              example: '[{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000"},"id":"10000","insight":{"lastIssueUpdateTime":1619069825000,"totalIssueCount":100},"key":"EX","name":"Example","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/EX","simplified":false,"style":"CLASSIC"},{"avatarUrls":{"16x16":"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001","24x24":"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001","32x32":"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001","48x48":"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001"},"id":"10001","insight":{"lastIssueUpdateTime":1619069825000,"totalIssueCount":100},"key":"ABC","name":"Alphabetical","projectCategory":{"description":"First
                Project Category","id":"10000","name":"FIRST","self":"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000"},"self":"https://your-domain.atlassian.net/rest/api/3/project/ABC","simplified":false,"style":"CLASSIC"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
      deprecated: true
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-type:jira
        - read:project:jira
        - read:project.property:jira
        - read:user:jira
        - read:application-role:jira
        - read:avatar:jira
        - read:group:jira
        - read:issue-type-hierarchy:jira
        - read:project-category:jira
        - read:project-version:jira
        - read:project.component:jira
        state: Beta
      x-changes:
      - announced: 2018-10-19T00:00:00Z
        details: https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-removal-of-get-filters-and-get-all-projects/
        effective: 2019-04-19T00:00:00Z
        type: removed
      x-atlassian-connect-scope: READ
    post:
      tags:
      - Projects
      summary: Create project
      description: "Creates a project based on a project type template, as shown in\
        \ the following table:\n\n| Project Type Key | Project Template Key |  \n\
        |--|--|  \n| `business` | `com.atlassian.jira-core-project-templates:jira-core-simplified-content-management`,\
        \ `com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval`,\
        \ `com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking`,\
        \ `com.atlassian.jira-core-project-templates:jira-core-simplified-process-control`,\
        \ `com.atlassian.jira-core-project-templates:jira-core-simplified-procurement`,\
        \ `com.atlassian.jira-core-project-templates:jira-core-simplified-project-management`,\
        \ `com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment`,\
        \ `com.atlassian.jira-core-project-templates:jira-core-simplified-task-tracking`\
        \ |  \n| `service_desk` | `com.atlassian.servicedesk:simplified-it-service-management`,\
        \ `com.atlassian.servicedesk:simplified-general-service-desk-it`, `com.atlassian.servicedesk:simplified-general-service-desk-business`,\
        \ `com.atlassian.servicedesk:simplified-external-service-desk`, `com.atlassian.servicedesk:simplified-hr-service-desk`,\
        \ `com.atlassian.servicedesk:simplified-facilities-service-desk`, `com.atlassian.servicedesk:simplified-legal-service-desk`,\
        \ `com.atlassian.servicedesk:simplified-analytics-service-desk`, `com.atlassian.servicedesk:simplified-marketing-service-desk`,\
        \ `com.atlassian.servicedesk:simplified-design-service-desk`, `com.atlassian.servicedesk:simplified-sales-service-desk`,\
        \ `com.atlassian.servicedesk:simplified-blank-project-business`, `com.atlassian.servicedesk:simplified-blank-project-it`,\
        \ `com.atlassian.servicedesk:simplified-finance-service-desk`, `com.atlassian.servicedesk:next-gen-it-service-desk`,\
        \ `com.atlassian.servicedesk:next-gen-hr-service-desk`, `com.atlassian.servicedesk:next-gen-legal-service-desk`,\
        \ `com.atlassian.servicedesk:next-gen-marketing-service-desk`, `com.atlassian.servicedesk:next-gen-facilities-service-desk`,\
        \ `com.atlassian.servicedesk:next-gen-general-it-service-desk`, `com.atlassian.servicedesk:next-gen-general-business-service-desk`,\
        \ `com.atlassian.servicedesk:next-gen-analytics-service-desk`, `com.atlassian.servicedesk:next-gen-finance-service-desk`,\
        \ `com.atlassian.servicedesk:next-gen-design-service-desk`, `com.atlassian.servicedesk:next-gen-sales-service-desk`\
        \ |  \n| `software` | `com.pyxis.greenhopper.jira:gh-simplified-agility-kanban`,\
        \ `com.pyxis.greenhopper.jira:gh-simplified-agility-scrum`, `com.pyxis.greenhopper.jira:gh-simplified-basic`,\
        \ `com.pyxis.greenhopper.jira:gh-simplified-kanban-classic`, `com.pyxis.greenhopper.jira:gh-simplified-scrum-classic`\
        \ |  \nThe project types are available according to the installed Jira features\
        \ as follows:\n\n *  Jira Core, the default, enables `business` projects.\n\
        \ *  Jira Service Management enables `service_desk` projects.\n *  Jira Software\
        \ enables `software` projects.\n\nTo determine which features are installed,\
        \ go to **Jira settings** > **Apps** > **Manage apps** and review the System\
        \ Apps list. To add Jira Software or Jira Service Management into a JIRA instance,\
        \ use **Jira settings** > **Apps** > **Finding new apps**. For more information,\
        \ see [ Managing add-ons](https://confluence.atlassian.com/x/S31NLg).\n\n\
        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
      operationId: createProject
      parameters: [
        ]
      requestBody:
        description: The JSON representation of the project being created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectDetails'
            example:
              assigneeType: PROJECT_LEAD
              avatarId: 10200
              categoryId: 10120
              description: Cloud migration initiative
              issueSecurityScheme: 10001
              key: EX
              leadAccountId: 5b10a0effa615349cb016cd8
              name: Example
              notificationScheme: 10021
              permissionScheme: 10011
              projectTemplateKey: com.atlassian.jira-core-project-templates:jira-core-simplified-process-control
              projectTypeKey: business
              url: http://atlassian.com
        required: true
      responses:
        '201':
          description: Returned if the project is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectIdentifiers'
              example: '{"id":10010,"key":"EX","self":"https://your-domain.atlassian.net/jira/rest/api/3/project/10042"}'
        '400':
          description: Returned if the request is not valid and the project could
            not be created.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to create projects.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:project:jira
        - read:project:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /priorityscheme/{schemeId}:
    put:
      tags:
      - Priority schemes
      summary: Update priority scheme
      description: |-
        Updates a priority scheme. This includes its details, the lists of priorities and projects in it

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updatePriorityScheme
      parameters:
      - name: schemeId
        in: path
        description: The ID of the priority scheme
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePrioritySchemeRequestBean'
            example:
              defaultPriorityId: 10001
              description: My priority scheme description
              mappings:
                in:
                  '10003': 10002
                  '10004': 10001
                out:
                  '10001': 10005
                  '10002': 10006
              name: My new priority scheme
              priorities:
                add:
                  ids:
                  - 10001
                  - 10002
                remove:
                  ids:
                  - 10003
                  - 10004
              projects:
                add:
                  ids:
                  - 10101
                  - 10102
                remove:
                  ids:
                  - 10103
                  - 10104
        required: true
      responses:
        '202':
          description: Returned if the request is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePrioritySchemeResponseBean'
              example: '{"task":{"self":"https://your-domain.atlassian.net/rest/api/3/task/1","id":"1","description":"Task
                description","status":"COMPLETE","result":"the task result, this may
                be any JSON","submittedBy":10000,"progress":100,"elapsedRuntime":156,"submitted":1501708132800,"started":1501708132900,"finished":1501708133000,"lastUpdate":1501708133000},"updated":{"description":"This
                is the default scheme used by all new and unassigned projects","id":"1","isDefault":true,"name":"Default
                Priority Scheme","priorities":{"isLast":true,"maxResults":50,"startAt":0,"total":3,"values":[{"description":"Serious
                problem that could block progress.","iconUrl":"/images/icons/priorities/high.svg","id":"1","isDefault":false,"name":"High","statusColor":"#f15C75"},{"description":"Has
                the potential to affect progress.","iconUrl":"/images/icons/priorities/medium.svg","id":"2","isDefault":true,"name":"Medium","statusColor":"#f79232"},{"description":"Minor
                problem or easily worked around.","iconUrl":"/images/icons/priorities/low.svg","id":"3","isDefault":false,"name":"Low","statusColor":"#707070"}]},"projects":{"isLast":true,"maxResults":50,"startAt":0,"total":1,"values":[{"avatarUrls":{"16x16":"secure/projectavatar?size=xsmall&pid=10000","24x24":"secure/projectavatar?size=small&pid=10000","32x32":"secure/projectavatar?size=medium&pid=10000","48x48":"secure/projectavatar?size=large&pid=10000"},"id":"10000","key":"EX","name":"Example","projectCategory":{"description":"Project
                category description","id":"10000","name":"A project category"},"projectTypeKey":"ProjectTypeKey{key=''software''}","self":"project/EX","simplified":false}]}}}'
        '400':
          description: |-
            Returned if the request isn't valid.

            **Mappings Validation Errors**

             *  ``The changes to priority schemes require mapping of priorities. Please provide a value for the 'in' mappings object.`` Priorities are being removed and/or projects are being added to the scheme, but ``in`` mappings are not provided.
             *  ``The changes to priority schemes require mapping of priorities. Please provide a value for the 'out' mappings object.`` Projects are being removed from the scheme, but ``out`` mappings are not provided.
             *  ``The priorities with IDs [ID 1, ID 2, ...] provided as keys for the 'in' mappings object do not exist. Please provide existing priority IDs.`` The listed priority ID(s) have been provided as keys for ``in`` mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site which are used by projects being added to the current scheme, but are not in use by the current scheme.
             *  ``The priorities with IDs [ID 1, ID 2, ...] provided as values for the 'in' mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.`` The listed priority ID(s) have been provided as values for ``in`` mappings but do not exist. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.
             *  ``The priorities with IDs [ID 1, ID 2, ...] provided as keys for the 'out' mappings object do not exist. Please provide existing priority IDs used by the current priority scheme.`` The listed priority ID(s) have been provided as keys for ``out`` mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the current scheme.
             *  ``The priorities with IDs [ID 1, ID 2, ...] provided as values for the 'out' mappings object do not exist. Please provide existing priority IDs used by the default scheme.`` The listed priority ID(s) have been provided as values for ``out`` mappings but are invalid. Please confirm the correct priority ID(s) have been provided, they should be priorities that exist on the Jira site and are in use by the Default Priority Scheme, but are not in use by the current scheme.
             *  ``The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the 'in' mappings object.`` The listed priority ID(s) have been provided as keys for ``in`` mappings but are not required, they can be removed from the mappings object.
             *  ``The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the 'in' mappings object, where these priorities are the keys with corresponding values.`` The listed priority ID(s) have not been provided as keys for ``in`` mappings but are required, add them to the mappings object.
             *  ``The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the current scheme. Please remove these values and their corresponding keys from the 'in' mappings object.`` The listed priority ID(s) have been provided as keys for ``in`` mappings but are not in use by the current scheme, they can be removed from the mappings object.
             *  ``The priorities with IDs [ID 1, ID 2, ...] do not require mapping. Please remove these keys and their corresponding values from the 'out' mappings object.`` The listed priority ID(s) hve been provided as keys for ``out`` mappings but are not required, they can be removed from the mappings object.
             *  ``The priorities with IDs [ID 1, ID 2, ...] require mapping. Please provide mappings in the 'out' mappings object, where these priorities are the keys with corresponding values.`` The listed priority ID(s) have not been provided as keys for ``out`` mappings but are required, add them to the mappings object.
             *  ``The priorities with IDs [ID 1, ID 2, ...] being mapped to are not in the default scheme. Please remove these values and their corresponding keys from the 'out' mappings object.`` The listed priority ID(s) have been provided as keys for ``out`` mappings but are not in use by the Default Priority Scheme, they can be removed from the mappings object.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user doesn't have the necessary permissions.
        '409':
          description: Returned if an action with this priority scheme is still in
            progress.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
    delete:
      tags:
      - Priority schemes
      summary: Delete priority scheme
      description: |-
        Deletes a priority scheme.

        This operation is only available for priority schemes without any associated projects. Any associated projects must be removed from the priority scheme before this operation can be performed.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deletePriorityScheme
      parameters:
      - name: schemeId
        in: path
        description: The priority scheme ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request isn't valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user doesn't have the necessary permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-experimental: true
      x-atlassian-connect-scope: ADMIN
  /role:
    get:
      tags:
      - Project roles
      summary: Get all project roles
      description: |-
        Gets a list of all project roles, complete with project role details and default actors.

        ### About project roles ###

        [Project roles](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-roles/) are a flexible way to to associate users and groups with projects. In Jira Cloud, the list of project roles is shared globally with all projects, but each project can have a different set of actors associated with it (unlike groups, which have the same membership throughout all Jira applications).

        Project roles are used in [permission schemes](#api-rest-api-3-permissionscheme-get), [email notification schemes](#api-rest-api-3-notificationscheme-get), [issue security levels](#api-rest-api-3-issuesecurityschemes-get), [comment visibility](#api-rest-api-3-comment-list-post), and workflow conditions.

        #### Members and actors ####

        In the Jira REST API, a member of a project role is called an *actor*. An *actor* is a group or user associated with a project role.

        Actors may be set as [default members](https://support.atlassian.com/jira-cloud-administration/docs/manage-project-roles/#Specifying-'default-members'-for-a-project-role) of the project role or set at the project level:

         *  Default actors: Users and groups that are assigned to the project role for all newly created projects. The default actors can be removed at the project level later if desired.
         *  Actors: Users and groups that are associated with a project role for a project, which may differ from the default actors. This enables you to assign a user to different roles in different projects.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getAllProjectRoles
      parameters: [
        ]
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRole'
              example: '[{"actors":[{"actorGroup":{"displayName":"jira-developers","groupId":"952d12c3-5b5b-4d04-bb32-44d383afc4b2","name":"jira-developers"},"displayName":"jira-developers","id":10240,"name":"jira-developers","type":"atlassian-group-role-actor","user":"jira-developers"},{"actorUser":{"accountId":"5b10a2844c20165700ede21g"},"displayName":"Mia
                Krystof","id":10241,"type":"atlassian-user-role-actor"}],"description":"A
                project role that represents developers in a project","id":10360,"name":"Developers","scope":{"project":{"id":"10000","key":"KEY","name":"Next
                Gen Project"},"type":"PROJECT"},"self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}]'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have administrative permissions.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project-role:jira
        - read:project:jira
        - read:avatar:jira
        - read:project-category:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    post:
      tags:
      - Project roles
      summary: Create project role
      description: |-
        Creates a new project role with no [default actors](#api-rest-api-3-resolution-get). You can use the [Add default actors to project role](#api-rest-api-3-role-id-actors-post) operation to add default actors to the project role after creating it.

        *Note that although a new project role is available to all projects upon creation, any default actors that are associated with the project role are not added to projects that existed prior to the role being created.*<

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: createProjectRole
      parameters: [
        ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateRoleRequestBean'
            example:
              description: A project role that represents developers in a project
              name: Developers
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRole'
              example: '{"description":"A project role that represents developers
                in a project","id":10360,"name":"Developers","self":"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360"}'
        '400':
          description: Returned if the request is not valid. The `name` cannot be
            empty or start or end with whitespace.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have administrative permissions.
        '409':
          description: Returned if a project role with the provided name already exists.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:user:jira
        - read:group:jira
        - read:project:jira
        - write:project-role:jira
        - read:avatar:jira
        - read:project-category:jira
        - read:project-role:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /universal_avatar/type/{type}/owner/{owningObjectId}/avatar/{id}:
    delete:
      tags:
      - Avatars
      summary: Delete avatar
      description: |-
        Deletes an avatar from a project, issue type or priority.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: deleteAvatar
      parameters:
      - name: type
        in: path
        description: The avatar type
        required: true
        style: simple
        explode: false
        schema:
          type: string
          enum:
          - project
          - issuetype
          - priority
      - name: owningObjectId
        in: path
        description: The ID of the item the avatar is associated with
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the avatar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: Returned if the request is successful
        '400':
          description: Returned if the request is invalid.
        '403':
          description: Returned if the user does not have permission to delete the
            avatar, the avatar is not deletable.
        '404':
          description: Returned if the avatar type, associated item ID, or avatar
            ID is invalid.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:avatar:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
  /field/{fieldKey}/option:
    get:
      tags:
      - Issue custom field options (apps)
      summary: Get all issue field options
      description: |-
        Returns a [paginated](#pagination) list of all the options of a select list issue field. A select list issue field is a type of [issue field](https://developer.atlassian.com/cloud/jira/platform/modules/issue-field/) that enables a user to select a value from a list of options.

        Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
      operationId: getAllIssueFieldOptions
      parameters:
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      - name: fieldKey
        in: path
        description: |-
          The field key is specified in the following format: **$(app-key)\_\_$(field-key)**. For example, *example-add-on\_\_example-issue-field*. To determine the `fieldKey` value, do one of the following:

           *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
           *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanIssueFieldOption'
              example: '{"isLast":false,"maxResults":1,"nextPage":"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option?startAt=1&maxResults=1","self":"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option?startAt=0&maxResults=1","startAt":0,"total":10,"values":[{"id":1,"value":"Team
                1","properties":{"leader":{"name":"Leader Name","email":"lname@example.com"},"members":42,"description":"The
                team''s description","founded":"2016-06-06"},"config":{"scope":{"projects":[],"projects2":[{"id":1001,"attributes":["notSelectable"]},{"id":1002,"attributes":["notSelectable"]}],"global":{}},"attributes":[]}}]}'
        '400':
          description: Returned if the field is not found or does not support options.
        '403':
          description: Returned if the request is not authenticated as a Jira administrator
            or the app that provided the field.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field.option:jira
        state: Beta
      x-atlassian-connect-scope: NONE
    post:
      tags:
      - Issue custom field options (apps)
      summary: Create issue field option
      description: |-
        Creates an option for a select list issue field.

        Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.

        Each field can have a maximum of 10000 options, and each option can have a maximum of 10000 scopes.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.
      operationId: createIssueFieldOption
      parameters:
      - name: fieldKey
        in: path
        description: |-
          The field key is specified in the following format: **$(app-key)\_\_$(field-key)**. For example, *example-add-on\_\_example-issue-field*. To determine the `fieldKey` value, do one of the following:

           *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.
           *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueFieldOptionCreateBean'
            example:
              config:
                attributes: [
                  ]
                scope:
                  global: {
                    }
                  projects: [
                    ]
                  projects2:
                  - attributes:
                    - notSelectable
                    id: 1001
                  - attributes:
                    - notSelectable
                    id: 1002
              properties:
                description: The team's description
                founded: 2016-06-06T00:00:00Z
                leader:
                  email: lname@example.com
                  name: Leader Name
                members: 42
              value: Team 1
        required: true
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueFieldOption'
              example: '{"id":1,"value":"Team 1","properties":{"leader":{"name":"Leader
                Name","email":"lname@example.com"},"members":42,"description":"The
                team''s description","founded":"2016-06-06"},"config":{"scope":{"projects":[],"projects2":[{"id":1001,"attributes":["notSelectable"]},{"id":1002,"attributes":["notSelectable"]}],"global":{}},"attributes":[]}}'
        '400':
          description: Returned if the option is invalid.
        '403':
          description: Returned if the request is not authenticated as a Jira administrator
            or the app that provided the field.
        '404':
          description: Returned if the field is not found or does not support options.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field.option:jira
        state: Beta
      x-atlassian-connect-scope: NONE
  /issue/{issueIdOrKey}/properties/{propertyKey}:
    get:
      tags:
      - Issue properties
      summary: Get issue property
      description: |-
        Returns the key and value of an issue's property.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: getIssueProperty
      parameters:
      - name: issueIdOrKey
        in: path
        description: The key or ID of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityProperty'
              example: '{"key":"issue.support","value":{"system.conversation.id":"b1bf38be-5e94-4b40-a3b8-9278735ee1e6","system.support.time":"1m"}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue or property is not found or the user
            does not have permission to see the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue.property:jira
        state: Beta
      x-atlassian-connect-scope: READ
    put:
      tags:
      - Issue properties
      summary: Set issue property
      description: |-
        Sets the value of an issue's property. Use this resource to store custom data against an issue.

        The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: setIssueProperty
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the issue property. The maximum length is 255 characters
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: The value of the property. The value has to be a valid, non-empty
          [JSON](https://tools.ietf.org/html/rfc4627) value. The maximum length of
          the property value is 32768 bytes
        content:
          application/json:
            schema: {
              }
        required: true
      responses:
        '200':
          description: Returned if the issue property is updated
          content:
            application/json:
              schema: {
                }
        '201':
          description: Returned if the issue property is created.
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is invalid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have permission to edit the issue.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - write:issue.property:jira
        state: Beta
      x-atlassian-connect-scope: WRITE
    delete:
      tags:
      - Issue properties
      summary: Delete issue property
      description: |-
        Deletes an issue's property.

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
      operationId: deleteIssueProperty
      parameters:
      - name: issueIdOrKey
        in: path
        description: The key or ID of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: propertyKey
        in: path
        description: The key of the property
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '204':
          description: Returned if the request is successful
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '404':
          description: Returned if the issue or property is not found, or the user
            does not have permission to edit the issue.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - write:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - write:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - delete:issue.property:jira
        state: Beta
      x-atlassian-connect-scope: DELETE
  /issue/{issueIdOrKey}/editmeta:
    get:
      tags:
      - Issues
      summary: Get edit issue metadata
      description: |-
        Returns the edit screen fields for an issue that are visible to and editable by the user. Use the information to populate the requests in [Edit issue](#api-rest-api-3-issue-issueIdOrKey-put).

        This endpoint will check for these conditions:

        1.  Field is available on a field screen - through screen, screen scheme, issue type screen scheme, and issue type scheme configuration. `overrideScreenSecurity=true` skips this condition.
        2.  Field is visible in the [field configuration](https://support.atlassian.com/jira-cloud-administration/docs/change-a-field-configuration/). `overrideScreenSecurity=true` skips this condition.
        3.  Field is shown on the issue: each field has different conditions here. For example: Attachment field only shows if attachments are enabled. Assignee only shows if user has permissions to assign the issue.
        4.  If a field is custom then it must have valid custom field context, applicable for its project and issue type. All system fields are assumed to have context in all projects and all issue types.
        5.  Issue has a project, issue type, and status defined.
        6.  Issue is assigned to a valid workflow, and the current status has assigned a workflow step. `overrideEditableFlag=true` skips this condition.
        7.  The current workflow step is editable. This is true by default, but [can be disabled by setting](https://support.atlassian.com/jira-cloud-administration/docs/use-workflow-properties/) the `jira.issue.editable` property to `false`. `overrideEditableFlag=true` skips this condition.
        8.  User has [Edit issues permission](https://support.atlassian.com/jira-cloud-administration/docs/permissions-for-company-managed-projects/).
        9.  Workflow permissions allow editing a field. This is true by default but [can be modified](https://support.atlassian.com/jira-cloud-administration/docs/use-workflow-properties/) using `jira.permission.*` workflow properties.

        Fields hidden using [Issue layout settings page](https://support.atlassian.com/jira-software-cloud/docs/configure-field-layout-in-the-issue-view/) remain editable.

        Connect apps having an app user with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), can return additional details using:

         *  `overrideScreenSecurity` When this flag is `true`, then this endpoint skips checking if fields are available through screens, and field configuration (conditions 1. and 2. from the list above).
         *  `overrideEditableFlag` When this flag is `true`, then this endpoint skips checking if workflow is present and if the current step is editable (conditions 6. and 7. from the list above).

        This operation can be accessed anonymously.

        **[Permissions](#permissions) required:**

         *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
         *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.

        Note: For any fields to be editable the user must have the *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the issue.
      operationId: getEditIssueMeta
      parameters:
      - name: issueIdOrKey
        in: path
        description: The ID or key of the issue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: overrideScreenSecurity
        in: query
        description: Whether hidden fields are returned. Available to Connect app
          users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
          and Forge apps acting on behalf of users with *Administer Jira* [global
          permission](https://confluence.atlassian.com/x/x4dKLg)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: overrideEditableFlag
        in: query
        description: Whether non-editable fields are returned. Available to Connect
          app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)
          and Forge apps acting on behalf of users with *Administer Jira* [global
          permission](https://confluence.atlassian.com/x/x4dKLg)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueUpdateMetadata'
              example: '{"fields":{"summary":{"allowedValues":["red","blue"],"defaultValue":"red","hasDefaultValue":false,"key":"field_key","name":"My
                Multi Select","operations":["set","add"],"required":false,"schema":{"custom":"com.atlassian.jira.plugin.system.customfieldtypes:multiselect","customId":10001,"items":"option","type":"array"}}}}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user uses an override parameter but doesn't
            have permission to do so.
        '404':
          description: Returned if the issue is not found or the user does not have
            permission to view it.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - read:jira-work
      - {
        }
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: false
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - read:jira-work
        state: Current
      - scheme: OAuth2
        scopes:
        - read:issue-meta:jira
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: READ
  /fieldconfiguration/{id}/fields:
    get:
      tags:
      - Issue field configurations
      summary: Get field configuration items
      description: |-
        Returns a [paginated](#pagination) list of all fields for a configuration.

        Only the fields from configurations used in company-managed (classic) projects are returned.

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: getFieldConfigurationItems
      parameters:
      - name: id
        in: path
        description: The ID of the field configuration
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: startAt
        in: query
        description: The index of the first item to return in a page of results (page
          offset)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: maxResults
        in: query
        description: The maximum number of items to return per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: Returned if the request is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageBeanFieldConfigurationItem'
              example: '{"isLast":true,"maxResults":50,"startAt":0,"total":2,"values":[{"description":"For
                example operating system, software platform and/or hardware specifications
                (include as appropriate for the issue).","id":"environment","isHidden":false,"isRequired":false},{"id":"description","isHidden":false,"isRequired":false}]}'
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the field configuration is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - read:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
    put:
      tags:
      - Issue field configurations
      summary: Update field configuration items
      description: |-
        Updates fields in a field configuration. The properties of the field configuration fields provided override the existing values.

        This operation can only update field configurations used in company-managed (classic) projects.

        The operation can set the renderer for text fields to the default text renderer (`text-renderer`) or wiki style renderer (`wiki-renderer`). However, the renderer cannot be updated for fields using the autocomplete renderer (`autocomplete-renderer`).

        **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      operationId: updateFieldConfigurationItems
      parameters:
      - name: id
        in: path
        description: The ID of the field configuration
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldConfigurationItemsDetails'
            example:
              fieldConfigurationItems:
              - description: The new description of this item.
                id: customfield_10012
                isHidden: false
              - id: customfield_10011
                isRequired: true
              - description: Another new description.
                id: customfield_10010
                isHidden: false
                isRequired: false
                renderer: wiki-renderer
        required: true
      responses:
        '204':
          description: Returned if the request is successful
          content:
            application/json:
              schema: {
                }
        '400':
          description: Returned if the request is not valid.
        '401':
          description: Returned if the authentication credentials are incorrect or
            missing.
        '403':
          description: Returned if the user does not have the necessary permission.
        '404':
          description: Returned if the field configuration is not found.
      deprecated: false
      security:
      - basicAuth: [
          ]
      - OAuth2:
        - manage:jira-configuration
      x-atlassian-data-security-policy:
      - app-access-rule-exempt: true
      x-atlassian-oauth2-scopes:
      - scheme: OAuth2
        scopes:
        - manage:jira-configuration
        state: Current
      - scheme: OAuth2
        scopes:
        - write:field-configuration:jira
        state: Beta
      x-atlassian-connect-scope: ADMIN
components:
  schemas:
    TransitionScreenDetails:
      required:
      - id
      type: object
      properties:
        name:
          type: string
          description: The name of the screen
        id:
          type: string
          description: The ID of the screen
      additionalProperties: false
      description: The details of a transition screen
    EventNotification:
      type: object
      properties:
        emailAddress:
          type: string
          description: The email address
        expand:
          type: string
          description: Expand options that include additional event notification details
            in the response
        field:
          description: The custom user or group field
          allOf:
          - $ref: '#/components/schemas/FieldDetails'
        projectRole:
          description: The specified project role
          allOf:
          - $ref: '#/components/schemas/ProjectRole'
        parameter:
          type: string
          description: |-
            As a group's name can change, use of `recipient` is recommended. The identifier associated with the `notificationType` value that defines the receiver of the notification, where the receiver isn't implied by `notificationType` value. So, when `notificationType` is:

             *  `User` The `parameter` is the user account ID.
             *  `Group` The `parameter` is the group name.
             *  `ProjectRole` The `parameter` is the project role ID.
             *  `UserCustomField` The `parameter` is the ID of the custom field.
             *  `GroupCustomField` The `parameter` is the ID of the custom field
        recipient:
          type: string
          description: |-
            The identifier associated with the `notificationType` value that defines the receiver of the notification, where the receiver isn't implied by the `notificationType` value. So, when `notificationType` is:

             *  `User`, `recipient` is the user account ID.
             *  `Group`, `recipient` is the group ID.
             *  `ProjectRole`, `recipient` is the project role ID.
             *  `UserCustomField`, `recipient` is the ID of the custom field.
             *  `GroupCustomField`, `recipient` is the ID of the custom field
        id:
          type: integer
          description: The ID of the notification
          format: int64
        notificationType:
          type: string
          description: Identifies the recipients of the notification
          enum:
          - CurrentAssignee
          - Reporter
          - CurrentUser
          - ProjectLead
          - ComponentLead
          - User
          - Group
          - ProjectRole
          - EmailAddress
          - AllWatchers
          - UserCustomField
          - GroupCustomField
        user:
          description: The specified user
          allOf:
          - $ref: '#/components/schemas/UserDetails'
        group:
          description: The specified group
          allOf:
          - $ref: '#/components/schemas/GroupName'
      additionalProperties: false
      description: Details about a notification associated with an event
    WorkflowProjectIssueTypeUsage:
      type: object
      properties:
        id:
          type: string
          description: The ID of the issue type
      additionalProperties: false
      description: The issue type
    UserKey:
      type: object
      properties:
        accountId:
          maxLength: 128
          type: string
          description: The account ID of the user, which uniquely identifies the user
            across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
            Returns *unknown* if the record is deleted and corrupted, for example,
            as the result of a server import
        key:
          type: string
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
      additionalProperties: false
      description: List of user account IDs
    AvailableWorkflowForgeRule:
      type: object
      properties:
        ruleType:
          type: string
          description: The rule type
          enum:
          - Condition
          - Validator
          - Function
          - Screen
        name:
          type: string
          description: The rule name
        description:
          type: string
          description: The rule description
        id:
          type: string
          description: The unique ARI of the forge rule type
        ruleKey:
          type: string
          description: The rule key
      additionalProperties: false
      description: The Forge provided ecosystem rules available
    CreatePermissionHolderRequest:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
          description: The permission holder type. This must be "Group" or "AccountId"
          enum:
          - Group
          - AccountId
        value:
          type: string
          description: The permission holder value. This must be a group name if the
            type is "Group" or an account ID if the type is "AccountId"
      additionalProperties: false
    WorkflowId:
      required:
      - draft
      - name
      type: object
      properties:
        draft:
          type: boolean
          description: Whether the workflow is in the draft state
        name:
          type: string
          description: The name of the workflow
      additionalProperties: false
      description: Properties that identify a workflow
    WorkflowCondition:
      type: object
      additionalProperties: false
      description: The workflow transition rule conditions tree
      discriminator:
        propertyName: nodeType
        mapping:
          compound: '#/components/schemas/WorkflowCompoundCondition'
          simple: '#/components/schemas/WorkflowSimpleCondition'
      oneOf:
      - $ref: '#/components/schemas/WorkflowSimpleCondition'
      - $ref: '#/components/schemas/WorkflowCompoundCondition'
    UpdatePrioritiesInSchemeRequestBean:
      type: object
      properties:
        add:
          description: Priorities to add to a scheme
          allOf:
          - $ref: '#/components/schemas/PrioritySchemeChangesWithoutMappings'
        remove:
          description: Priorities to remove from a scheme
          allOf:
          - $ref: '#/components/schemas/PrioritySchemeChangesWithoutMappings'
      additionalProperties: true
      description: Update priorities in a scheme
      writeOnly: true
    RemoteObject:
      required:
      - title
      - url
      type: object
      properties:
        icon:
          description: Details of the icon for the item. If no icon is defined, the
            default link icon is used in Jira.
          allOf:
          - $ref: '#/components/schemas/Icon'
        status:
          description: The status of the item.
          allOf:
          - $ref: '#/components/schemas/Status'
        summary:
          type: string
          description: The summary details of the item.
        title:
          type: string
          description: The title of the item.
        url:
          type: string
          description: The URL of the item.
      additionalProperties: true
      description: The linked item
    CustomFieldContextDefaultValueForgeStringField:
      required:
      - contextId
      - type
      type: object
      properties:
        contextId:
          type: string
          description: The ID of the context
        text:
          type: string
          description: The default text. The maximum length is 254 characters
        type:
          type: string
      description: The default text for a Forge string custom field
    IssueFieldOption:
      required:
      - id
      - value
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the option. This is only unique within
            the select field's set of options
          format: int64
        config:
          $ref: '#/components/schemas/IssueFieldOptionConfiguration'
        value:
          type: string
          description: The option's name, which is displayed in Jira
        properties:
          type: object
          additionalProperties: {
            }
          description: The properties of the object, as arbitrary key-value pairs.
            These properties can be searched using JQL, if the extractions (see [Issue
            Field Option Property Index](https://developer.atlassian.com/cloud/jira/platform/modules/issue-field-option-property-index/))
            are defined in the descriptor for the issue field module
      additionalProperties: false
      description: Details of the options for a select list issue field
    Status:
      type: object
      properties:
        icon:
          description: Details of the icon representing the status. If not provided,
            no status icon displays in Jira.
          allOf:
          - $ref: '#/components/schemas/Icon'
        resolved:
          type: boolean
          description: Whether the item is resolved. If set to "true", the link to
            the issue is displayed in a strikethrough font, otherwise the link displays
            in normal font.
      additionalProperties: true
      description: The status of the item
    CustomFieldConfigurations:
      required:
      - configurations
      type: object
      properties:
        configurations:
          maxItems: 1000
          minItems: 1
          uniqueItems: true
          type: array
          description: The list of custom field configuration details
          items:
            $ref: '#/components/schemas/ContextualConfiguration'
      additionalProperties: false
      description: Details of configurations for a custom field
      writeOnly: true
    JiraExpressionEvaluateRequestBean:
      required:
      - expression
      type: object
      properties:
        expression:
          type: string
          description: The Jira expression to evaluate
          example: '{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link
            => link.linkedIssue.id) }'
        context:
          description: The context in which the Jira expression is evaluated
          allOf:
          - $ref: '#/components/schemas/JiraExpressionEvaluateContextBean'
      additionalProperties: false
      description: The request to evaluate a Jira expression. This bean will be replacing
        `JiraExpressionEvaluateRequest` as part of new `evaluate` endpoint
    ResolutionJsonBean:
      type: object
      properties:
        default:
          type: boolean
        name:
          type: string
        description:
          type: string
        self:
          type: string
        iconUrl:
          type: string
        id:
          type: string
      additionalProperties: false
    IssuesAndJQLQueries:
      required:
      - issueIds
      - jqls
      type: object
      properties:
        issueIds:
          uniqueItems: true
          type: array
          description: A list of issue IDs
          items:
            type: integer
            description: A list of issue IDs.
            format: int64
        jqls:
          type: array
          description: A list of JQL queries
          items:
            type: string
            description: A list of JQL queries.
      additionalProperties: false
      description: List of issues and JQL queries
    JqlFunctionPrecomputationUpdateRequestBean:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/JqlFunctionPrecomputationUpdateBean'
      additionalProperties: false
      description: List of pairs (id and value) for precomputation updates
      writeOnly: true
    JiraVersionField:
      type: object
      properties:
        versionId:
          type: string
      additionalProperties: false
    SimpleListWrapperGroupName:
      type: object
      properties:
        pagingCallback:
          $ref: '#/components/schemas/ListWrapperCallbackGroupName'
        size:
          type: integer
          format: int32
          xml:
            attribute: true
        max-results:
          type: integer
          format: int32
          xml:
            name: max-results
            attribute: true
          x-ballerina-name: maxResults
        callback:
          $ref: '#/components/schemas/ListWrapperCallbackGroupName'
        items:
          type: array
          items:
            $ref: '#/components/schemas/GroupName'
      additionalProperties: false
      xml:
        name: list
    TaskProgressBeanJsonNode:
      required:
      - elapsedRuntime
      - id
      - lastUpdate
      - progress
      - self
      - status
      - submitted
      - submittedBy
      type: object
      properties:
        submittedBy:
          type: integer
          description: The ID of the user who submitted the task
          format: int64
        description:
          type: string
          description: The description of the task
        finished:
          type: integer
          description: A timestamp recording when the task was finished
          format: int64
        started:
          type: integer
          description: A timestamp recording when the task was started
          format: int64
        message:
          type: string
          description: Information about the progress of the task
        result:
          description: The result of the task execution
          allOf:
          - $ref: '#/components/schemas/JsonNode'
        submitted:
          type: integer
          description: A timestamp recording when the task was submitted
          format: int64
        lastUpdate:
          type: integer
          description: A timestamp recording when the task progress was last updated
          format: int64
        progress:
          type: integer
          description: The progress of the task, as a percentage complete
          format: int64
        self:
          type: string
          description: The URL of the task
          format: uri
        id:
          type: string
          description: The ID of the task
        elapsedRuntime:
          type: integer
          description: The execution time of the task, in milliseconds
          format: int64
        status:
          type: string
          description: The status of the task
          enum:
          - ENQUEUED
          - RUNNING
          - COMPLETE
          - FAILED
          - CANCEL_REQUESTED
          - CANCELLED
          - DEAD
      additionalProperties: false
      description: Details about a task
    AvailableWorkflowTriggerTypes:
      type: object
      properties:
        name:
          type: string
          description: The name of the trigger rule
        description:
          type: string
          description: The description of the trigger rule
        type:
          type: string
          description: The type identifier of trigger rule
      additionalProperties: false
      description: The list of available trigger types
    PageOfCreateMetaIssueTypeWithField:
      type: object
      properties:
        fields:
          type: array
          description: The collection of FieldCreateMetaBeans.
          readOnly: true
          items:
            $ref: '#/components/schemas/FieldCreateMetadata'
        maxResults:
          type: integer
          description: The maximum number of items to return per page.
          format: int32
          readOnly: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/FieldCreateMetadata'
        startAt:
          type: integer
          description: The index of the first item returned.
          format: int64
          readOnly: true
        total:
          type: integer
          description: The total number of items in all pages.
          format: int64
          readOnly: true
      additionalProperties: true
      description: A page of CreateMetaIssueType with Field
    PageBeanFieldConfigurationItem:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/FieldConfigurationItem'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    SimpleListWrapperApplicationRole:
      type: object
      properties:
        pagingCallback:
          $ref: '#/components/schemas/ListWrapperCallbackApplicationRole'
        size:
          type: integer
          format: int32
          xml:
            attribute: true
        max-results:
          type: integer
          format: int32
          xml:
            name: max-results
            attribute: true
          x-ballerina-name: maxResults
        callback:
          $ref: '#/components/schemas/ListWrapperCallbackApplicationRole'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationRole'
      additionalProperties: false
      xml:
        name: list
    ArchivedIssuesFilterRequest:
      type: object
      properties:
        archivedBy:
          type: array
          description: List archived issues archived by a specified account ID.
          items:
            type: string
        archivedDateRange:
          $ref: '#/components/schemas/DateRangeFilterRequest'
        issueTypes:
          type: array
          description: List archived issues with a specified issue type ID.
          items:
            type: string
        projects:
          type: array
          description: List archived issues with a specified project key.
          items:
            type: string
        reporters:
          type: array
          description: List archived issues where the reporter is a specified account
            ID.
          items:
            type: string
      additionalProperties: true
      description: Details of a filter for exporting archived issues
    SuggestedMappingsForProjectsRequestBean:
      type: object
      properties:
        add:
          type: array
          description: The ids of projects being added to the scheme
          writeOnly: true
          items:
            type: integer
            format: int64
            writeOnly: true
      additionalProperties: false
      description: Details of changes to a priority scheme's projects that require
        suggested priority mappings
      writeOnly: true
    ProjectIssueSecurityLevels:
      required:
      - levels
      type: object
      properties:
        levels:
          type: array
          description: Issue level security items list
          readOnly: true
          items:
            $ref: '#/components/schemas/SecurityLevel'
      additionalProperties: false
      description: List of issue level security items in a project
    PermittedProjects:
      type: object
      properties:
        projects:
          type: array
          description: A list of projects
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectIdentifierBean'
      additionalProperties: false
      description: A list of projects in which a user is granted permissions
    JiraExpressionComplexity:
      required:
      - expensiveOperations
      type: object
      properties:
        variables:
          type: object
          additionalProperties:
            type: string
            description: Variables used in the formula, mapped to the parts of the
              expression they refer to.
          description: Variables used in the formula, mapped to the parts of the expression
            they refer to
        expensiveOperations:
          type: string
          description: |-
            Information that can be used to determine how many [expensive operations](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#expensive-operations) the evaluation of the expression will perform. This information may be a formula or number. For example:

             *  `issues.map(i => i.comments)` performs as many expensive operations as there are issues on the issues list. So this parameter returns `N`, where `N` is the size of issue list.
             *  `new Issue(10010).comments` gets comments for one issue, so its complexity is `2` (`1` to retrieve issue 10010 from the database plus `1` to get its comments)
      additionalProperties: false
      description: Details about the complexity of the analysed Jira expression
    WebhookDetails:
      required:
      - events
      - jqlFilter
      type: object
      properties:
        jqlFilter:
          type: string
          description: |-
            The JQL filter that specifies which issues the webhook is sent for. Only a subset of JQL can be used. The supported elements are:

             *  Fields: `issueKey`, `project`, `issuetype`, `status`, `assignee`, `reporter`, `issue.property`, and `cf[id]`. For custom fields (`cf[id]`), only the epic label custom field is supported.".
             *  Operators: `=`, `!=`, `IN`, and `NOT IN`
        fieldIdsFilter:
          type: array
          description: A list of field IDs. When the issue changelog contains any
            of the fields, the webhook `jira:issue_updated` is sent. If this parameter
            is not present, the app is notified about all field updates
          items:
            type: string
            description: A list of field IDs. When the issue changelog contains any
              of the fields, the webhook <code>jira:issue_updated</code> is sent.
              If this parameter is not present, the app is notified about all field
              updates.
        issuePropertyKeysFilter:
          type: array
          description: A list of issue property keys. A change of those issue properties
            triggers the `issue_property_set` or `issue_property_deleted` webhooks.
            If this parameter is not present, the app is notified about all issue
            property updates
          items:
            type: string
            description: A list of issue property keys. A change of those issue properties
              triggers the <code>issue_property_set</code> or <code>issue_property_deleted</code>
              webhooks. If this parameter is not present, the app is notified about
              all issue property updates.
        events:
          type: array
          description: The Jira events that trigger the webhook
          items:
            type: string
            enum:
            - jira:issue_created
            - jira:issue_updated
            - jira:issue_deleted
            - comment_created
            - comment_updated
            - comment_deleted
            - issue_property_set
            - issue_property_deleted
      additionalProperties: false
      description: A list of webhooks
    PermissionScheme:
      required:
      - name
      type: object
      properties:
        description:
          type: string
          description: A description for the permission scheme.
        expand:
          type: string
          description: The expand options available for the permission scheme.
          readOnly: true
        id:
          type: integer
          description: The ID of the permission scheme.
          format: int64
          readOnly: true
        name:
          type: string
          description: The name of the permission scheme. Must be unique.
        permissions:
          type: array
          description: The permission scheme to create or update. See [About permission
            schemes and grants](../api-group-permission-schemes/#about-permission-schemes-and-grants)
            for more information.
          items:
            $ref: '#/components/schemas/PermissionGrant'
        scope:
          description: The scope of the permission scheme.
          allOf:
          - $ref: '#/components/schemas/Scope'
        self:
          type: string
          description: The URL of the permission scheme.
          format: uri
          readOnly: true
      additionalProperties: true
      description: Details of a permission scheme
    PageBeanContext:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Context'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    AssociateFieldConfigurationsWithIssueTypesRequest:
      required:
      - mappings
      type: object
      properties:
        mappings:
          uniqueItems: true
          type: array
          description: Field configuration to issue type mappings
          writeOnly: true
          items:
            $ref: '#/components/schemas/FieldConfigurationToIssueTypeMapping'
      additionalProperties: false
      description: Details of a field configuration to issue type mappings
    CreatePlanRequest:
      required:
      - issueSources
      - name
      - scheduling
      type: object
      properties:
        crossProjectReleases:
          uniqueItems: true
          type: array
          description: The cross-project releases to include in the plan
          items:
            $ref: '#/components/schemas/CreateCrossProjectReleaseRequest'
        customFields:
          uniqueItems: true
          type: array
          description: The custom fields for the plan
          items:
            $ref: '#/components/schemas/CreateCustomFieldRequest'
        issueSources:
          uniqueItems: true
          type: array
          description: The issue sources to include in the plan
          items:
            $ref: '#/components/schemas/CreateIssueSourceRequest'
        permissions:
          uniqueItems: true
          type: array
          description: The permissions for the plan
          items:
            $ref: '#/components/schemas/CreatePermissionRequest'
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: The plan name
        scheduling:
          description: The scheduling settings for the plan
          allOf:
          - $ref: '#/components/schemas/CreateSchedulingRequest'
        leadAccountId:
          type: string
          description: The account ID of the plan lead
        exclusionRules:
          description: The exclusion rules for the plan
          allOf:
          - $ref: '#/components/schemas/CreateExclusionRulesRequest'
      additionalProperties: false
    GetPlanOnlyTeamResponse:
      required:
      - id
      - name
      - planningStyle
      type: object
      properties:
        planningStyle:
          type: string
          description: The planning style for the plan-only team. This is "Scrum"
            or "Kanban"
          enum:
          - Scrum
          - Kanban
        memberAccountIds:
          type: array
          description: The account IDs of the plan-only team members
          items:
            type: string
        issueSourceId:
          type: integer
          description: The ID of the issue source for the plan-only team
          format: int64
        name:
          type: string
          description: The plan-only team name
        sprintLength:
          type: integer
          description: The sprint length for the plan-only team
          format: int64
        id:
          type: integer
          description: The plan-only team ID
          format: int64
        capacity:
          type: number
          description: The capacity for the plan-only team
          format: double
      additionalProperties: false
    PageBeanWebhook:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Webhook'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    Notification:
      type: object
      properties:
        htmlBody:
          type: string
          description: The HTML body of the email notification for the issue.
        restrict:
          description: Restricts the notifications to users with the specified permissions.
          allOf:
          - $ref: '#/components/schemas/NotificationRecipientsRestrictions'
        subject:
          type: string
          description: The subject of the email notification for the issue. If this
            is not specified, then the subject is set to the issue key and summary.
        textBody:
          type: string
          description: The plain text body of the email notification for the issue.
        to:
          description: The recipients of the email notification for the issue.
          allOf:
          - $ref: '#/components/schemas/NotificationRecipients'
      additionalProperties: true
      description: Details about a notification
    JiraDateTimeField:
      required:
      - dateTime
      - fieldId
      type: object
      properties:
        dateTime:
          $ref: '#/components/schemas/JiraDateTimeInput'
        fieldId:
          type: string
      additionalProperties: false
    IssueLinkType:
      type: object
      properties:
        inward:
          type: string
          description: |-
            The description of the issue link type inward link and is used as follows:

             *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
             *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only
        name:
          type: string
          description: |-
            The name of the issue link type and is used as follows:

             *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `id` isn't provided. Otherwise, read only.
             *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only
        self:
          type: string
          description: The URL of the issue link type. Read only
          format: uri
          readOnly: true
        id:
          type: string
          description: |-
            The ID of the issue link type and is used as follows:

             *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is the type of issue link. Required on create when `name` isn't provided. Otherwise, read only.
             *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is read only
        outward:
          type: string
          description: |-
            The description of the issue link type outward link and is used as follows:

             *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it is read only.
             *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it is required on create and optional on update. Otherwise, read only
      additionalProperties: false
      description: |-
        This object is used as follows:

         *  In the [ issueLink](#api-rest-api-3-issueLink-post) resource it defines and reports on the type of link between the issues. Find a list of issue link types with [Get issue link types](#api-rest-api-3-issueLinkType-get).
         *  In the [ issueLinkType](#api-rest-api-3-issueLinkType-post) resource it defines and reports on issue link types
    IssueTypeWithStatus:
      required:
      - id
      - name
      - self
      - statuses
      - subtask
      type: object
      properties:
        name:
          type: string
          description: The name of the issue type
          readOnly: true
        self:
          type: string
          description: The URL of the issue type's status details
          readOnly: true
        statuses:
          type: array
          description: List of status details for the issue type
          readOnly: true
          items:
            $ref: '#/components/schemas/StatusDetails'
        id:
          type: string
          description: The ID of the issue type
          readOnly: true
        subtask:
          type: boolean
          description: Whether this issue type represents subtasks
          readOnly: true
      additionalProperties: false
      description: Status details for an issue type
    Worklog:
      type: object
      properties:
        author:
          description: Details of the user who created the worklog.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserDetails'
        comment:
          description: A comment about the worklog in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/).
            Optional when creating or updating a worklog.
        created:
          type: string
          description: The datetime on which the worklog was created.
          format: date-time
          readOnly: true
        id:
          type: string
          description: The ID of the worklog record.
          readOnly: true
        issueId:
          type: string
          description: The ID of the issue this worklog is for.
          readOnly: true
        properties:
          type: array
          description: Details of properties for the worklog. Optional when creating
            or updating a worklog.
          items:
            $ref: '#/components/schemas/EntityProperty'
        self:
          type: string
          description: The URL of the worklog item.
          format: uri
          readOnly: true
        started:
          type: string
          description: The datetime on which the worklog effort was started. Required
            when creating a worklog. Optional when updating a worklog.
          format: date-time
        timeSpent:
          type: string
          description: The time spent working on the issue as days (\#d), hours (\#h),
            or minutes (\#m or \#). Required when creating a worklog if `timeSpentSeconds`
            isn't provided. Optional when updating a worklog. Cannot be provided if
            `timeSpentSecond` is provided.
        timeSpentSeconds:
          type: integer
          description: The time in seconds spent working on the issue. Required when
            creating a worklog if `timeSpent` isn't provided. Optional when updating
            a worklog. Cannot be provided if `timeSpent` is provided.
          format: int64
        updateAuthor:
          description: Details of the user who last updated the worklog.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserDetails'
        updated:
          type: string
          description: The datetime on which the worklog was last updated.
          format: date-time
          readOnly: true
        visibility:
          description: Details about any restrictions in the visibility of the worklog.
            Optional when creating or updating a worklog.
          allOf:
          - $ref: '#/components/schemas/Visibility'
      additionalProperties: true
      description: Details of a worklog
      xml:
        name: worklog
    JqlQueryUnitaryOperand:
      type: object
      description: An operand that can be part of a list operand
      anyOf:
      - $ref: '#/components/schemas/ValueOperand'
      - $ref: '#/components/schemas/FunctionOperand'
      - $ref: '#/components/schemas/KeywordOperand'
    FieldConfigurationIssueTypeItem:
      required:
      - fieldConfigurationId
      - fieldConfigurationSchemeId
      - issueTypeId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type or *default*. When set to *default*
            this field configuration issue type item applies to all issue types without
            a field configuration
        fieldConfigurationSchemeId:
          type: string
          description: The ID of the field configuration scheme
        fieldConfigurationId:
          type: string
          description: The ID of the field configuration
      additionalProperties: false
      description: The field configuration for an issue type
    SimplifiedHierarchyLevel:
      type: object
      properties:
        externalUuid:
          type: string
          description: 'The external UUID of the hierarchy level. This property is
            deprecated, see [Change notice: Removing hierarchy level IDs from next-gen
            APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/)'
          format: uuid
        projectConfigurationId:
          type: integer
          description: 'The ID of the project configuration. This property is deprecated,
            see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/)'
          format: int64
        aboveLevelId:
          type: integer
          description: 'The ID of the level above this one in the hierarchy. This
            property is deprecated, see [Change notice: Removing hierarchy level IDs
            from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/)'
          format: int64
        level:
          type: integer
          description: The level of this item in the hierarchy
          format: int32
        issueTypeIds:
          type: array
          description: The issue types available in this hierarchy level
          items:
            type: integer
            format: int64
        name:
          type: string
          description: The name of this hierarchy level
        id:
          type: integer
          description: 'The ID of the hierarchy level. This property is deprecated,
            see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/)'
          format: int64
        hierarchyLevelNumber:
          type: integer
          format: int32
        belowLevelId:
          type: integer
          description: 'The ID of the level below this one in the hierarchy. This
            property is deprecated, see [Change notice: Removing hierarchy level IDs
            from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/)'
          format: int64
      additionalProperties: false
    WorkflowTransitionRule:
      required:
      - type
      type: object
      properties:
        configuration:
          description: EXPERIMENTAL. The configuration of the transition rule
        type:
          type: string
          description: The type of the transition rule
      additionalProperties: false
      description: A workflow transition rule
    MappingsByWorkflow:
      required:
      - newWorkflowId
      - oldWorkflowId
      - statusMappings
      type: object
      properties:
        newWorkflowId:
          type: string
          description: The ID of the new workflow
        statusMappings:
          type: array
          description: The list of status mappings
          items:
            $ref: '#/components/schemas/WorkflowAssociationStatusMapping'
        oldWorkflowId:
          type: string
          description: The ID of the old workflow
      additionalProperties: false
      description: The status mappings by workflows. Status mappings are required
        when the new workflow for an issue type doesn't contain all statuses that
        the old workflow has. Status mappings can be provided by a combination of
        `statusMappingsByWorkflows` and `statusMappingsByIssueTypeOverride`
    BulkTransitionSubmitInput:
      required:
      - selectedIssueIdsOrKeys
      - transitionId
      type: object
      properties:
        selectedIssueIdsOrKeys:
          type: array
          description: List of all the issue IDs or keys that are to be bulk transitioned
          writeOnly: true
          items:
            type: string
            writeOnly: true
        transitionId:
          type: string
          description: The ID of the transition that is to be performed on the issues
          writeOnly: true
      additionalProperties: false
      writeOnly: true
    CreateWorkflowTransitionDetails:
      required:
      - name
      - to
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the transition. The maximum length is 60 characters
        description:
          type: string
          description: The description of the transition. The maximum length is 1000
            characters
        screen:
          description: The screen of the transition
          allOf:
          - $ref: '#/components/schemas/CreateWorkflowTransitionScreenDetails'
        from:
          type: array
          description: The statuses the transition can start from
          items:
            type: string
        rules:
          description: The rules of the transition
          allOf:
          - $ref: '#/components/schemas/CreateWorkflowTransitionRulesDetails'
        to:
          type: string
          description: The status the transition goes to
        type:
          type: string
          description: The type of the transition
          enum:
          - global
          - initial
          - directed
        properties:
          type: object
          additionalProperties:
            type: string
          description: The properties of the transition
      additionalProperties: false
      description: The details of a workflow transition
      writeOnly: true
    PermissionSchemes:
      type: object
      properties:
        permissionSchemes:
          type: array
          description: Permission schemes list
          readOnly: true
          items:
            $ref: '#/components/schemas/PermissionScheme'
      additionalProperties: false
      description: List of all permission schemes
    PageBeanScreen:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Screen'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    ProjectRole:
      type: object
      properties:
        actors:
          type: array
          description: The list of users who act in this role
          readOnly: true
          items:
            $ref: '#/components/schemas/RoleActor'
        default:
          type: boolean
          description: Whether this role is the default role for the project
          readOnly: true
        roleConfigurable:
          type: boolean
          description: Whether the roles are configurable for this project
          readOnly: true
        currentUserRole:
          type: boolean
          description: Whether the calling user is part of this role
        scope:
          description: The scope of the role. Indicated for roles associated with
            [next-gen projects](https://confluence.atlassian.com/x/loMyO)
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the project role
        admin:
          type: boolean
          description: Whether this role is the admin role for the project
          readOnly: true
        description:
          type: string
          description: The description of the project role
          readOnly: true
        self:
          type: string
          description: The URL the project role details
          format: uri
          readOnly: true
        id:
          type: integer
          description: The ID of the project role
          format: int64
          readOnly: true
        translatedName:
          type: string
          description: The translated name of the project role
      additionalProperties: false
      description: Details about the roles in a project
    IssueTypeUpdateBean:
      type: object
      properties:
        avatarId:
          type: integer
          description: |-
            The ID of an issue type avatar. This can be obtained be obtained from the following endpoints:

             *  [System issue type avatar IDs only](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-avatars/#api-rest-api-3-avatar-type-system-get)
             *  [System and custom issue type avatar IDs](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-avatars/#api-rest-api-3-universal-avatar-type-type-owner-entityid-get)
          format: int64
        name:
          type: string
          description: The unique name for the issue type. The maximum length is 60
            characters
        description:
          type: string
          description: The description of the issue type
      additionalProperties: false
    WorkflowTransition:
      required:
      - id
      - name
      type: object
      properties:
        name:
          type: string
          description: The transition name
        id:
          type: integer
          description: The transition ID
          format: int32
      additionalProperties: false
      description: A workflow transition
    PropertyKey:
      type: object
      properties:
        self:
          type: string
          description: The URL of the property
          readOnly: true
        key:
          type: string
          description: The key of the property
          readOnly: true
      additionalProperties: false
      description: Property key details
    IncludedFields:
      type: object
      properties:
        excluded:
          uniqueItems: true
          type: array
          items:
            type: string
        actuallyIncluded:
          uniqueItems: true
          type: array
          items:
            type: string
        included:
          uniqueItems: true
          type: array
          items:
            type: string
      additionalProperties: false
    CustomFieldContextDefaultValueForgeUserField:
      required:
      - accountId
      - contextId
      - type
      - userFilter
      type: object
      properties:
        accountId:
          type: string
          description: The ID of the default user
        contextId:
          type: string
          description: The ID of the context
        userFilter:
          $ref: '#/components/schemas/UserFilter'
        type:
          type: string
      description: Defaults for a Forge user custom field
    CustomFieldContextDefaultValueMultipleGroupPicker:
      required:
      - contextId
      - groupIds
      - type
      type: object
      properties:
        groupIds:
          uniqueItems: true
          type: array
          description: The IDs of the default groups
          items:
            type: string
            description: The IDs of the default groups.
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
      description: The default value for a multiple group picker custom field
    PageOfChangelogs:
      type: object
      properties:
        total:
          type: integer
          description: The number of results on the page
          format: int32
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of results that could be on the page
          format: int32
          readOnly: true
        histories:
          type: array
          description: The list of changelogs
          readOnly: true
          items:
            $ref: '#/components/schemas/Changelog'
        startAt:
          type: integer
          description: The index of the first item returned on the page
          format: int32
          readOnly: true
      additionalProperties: false
      description: A page of changelogs
    TargetStatus:
      required:
      - statuses
      type: object
      properties:
        statuses:
          type: object
          additionalProperties:
            type: array
            writeOnly: true
            items:
              type: string
              writeOnly: true
          description: An object with the key as the ID of the target status and value
            with the list of the IDs of the current source statuses
          writeOnly: true
      additionalProperties: false
      description: Status mapping for statuses in source workflow to respective target
        status in target workflow
      nullable: true
      writeOnly: true
    WorkflowCreateValidateRequest:
      required:
      - payload
      type: object
      properties:
        validationOptions:
          $ref: '#/components/schemas/ValidationOptionsForCreate'
        payload:
          $ref: '#/components/schemas/WorkflowCreateRequest'
      additionalProperties: false
    FieldReferenceData:
      type: object
      properties:
        cfid:
          type: string
          description: If the item is a custom field, the ID of the custom field
        auto:
          type: string
          description: Whether the field provide auto-complete suggestions
          enum:
          - 'true'
          - 'false'
        types:
          type: array
          description: The data types of items in the field
          items:
            type: string
        operators:
          type: array
          description: The valid search operators for the field
          items:
            type: string
        displayName:
          type: string
          description: |-
            The display name contains the following:

             *  for system fields, the field name. For example, `Summary`.
             *  for collapsed custom fields, the field name followed by a hyphen and then the field name and field type. For example, `Component - Component[Dropdown]`.
             *  for other custom fields, the field name followed by a hyphen and then the custom field ID. For example, `Component - cf[10061]`
        orderable:
          type: string
          description: Whether the field can be used in a query's `ORDER BY` clause
          enum:
          - 'true'
          - 'false'
        deprecated:
          type: string
          description: Whether this field has been deprecated
          enum:
          - 'true'
          - 'false'
        value:
          type: string
          description: The field identifier
        deprecatedSearcherKey:
          type: string
          description: The searcher key of the field, only passed when the field is
            deprecated
        searchable:
          type: string
          description: Whether the content of this field can be searched
          enum:
          - 'true'
          - 'false'
      additionalProperties: false
      description: Details of a field that can be used in advanced searches
    ListOperand:
      required:
      - values
      type: object
      properties:
        encodedOperand:
          type: string
          description: Encoded operand, which can be used directly in a JQL query
        values:
          minLength: 1
          type: array
          description: The list of operand values
          items:
            $ref: '#/components/schemas/JqlQueryUnitaryOperand'
      description: An operand that is a list of values
    WebhookRegistrationDetails:
      required:
      - url
      - webhooks
      type: object
      properties:
        webhooks:
          type: array
          description: A list of webhooks
          items:
            $ref: '#/components/schemas/WebhookDetails'
        url:
          type: string
          description: The URL that specifies where to send the webhooks. This URL
            must use the same base URL as the Connect app. Only a single URL per app
            is allowed to be registered
      additionalProperties: false
      description: Details of webhooks to register
    SecurityLevel:
      type: object
      properties:
        isDefault:
          type: boolean
          description: Whether the issue level security item is the default
          readOnly: true
        issueSecuritySchemeId:
          type: string
          description: The ID of the issue level security scheme
          readOnly: true
        name:
          type: string
          description: The name of the issue level security item
          readOnly: true
        description:
          type: string
          description: The description of the issue level security item
          readOnly: true
        self:
          type: string
          description: The URL of the issue level security item
          readOnly: true
        id:
          type: string
          description: The ID of the issue level security item
          readOnly: true
      additionalProperties: false
      description: Details of an issue level security item
    CustomFieldContextUpdateDetails:
      type: object
      properties:
        name:
          type: string
          description: The name of the custom field context. The name must be unique.
            The maximum length is 255 characters
          writeOnly: true
        description:
          type: string
          description: The description of the custom field context. The maximum length
            is 255 characters
          writeOnly: true
      additionalProperties: false
      description: Details of a custom field context
    JiraTimeTrackingField:
      required:
      - timeRemaining
      type: object
      properties:
        timeRemaining:
          type: string
      additionalProperties: false
    StatusCreate:
      required:
      - name
      - statusCategory
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: The name of the status
        description:
          type: string
          description: The description of the status
        statusCategory:
          type: string
          description: The category of the status
          enum:
          - TODO
          - IN_PROGRESS
          - DONE
      additionalProperties: false
      description: Details of the status being created
    DeprecatedWorkflow:
      type: object
      properties:
        default:
          type: boolean
        lastModifiedDate:
          type: string
          description: The datetime the workflow was last modified
          readOnly: true
        lastModifiedUserAccountId:
          type: string
          description: The account ID of the user that last modified the workflow
          readOnly: true
        scope:
          description: The scope where this workflow applies
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the workflow
          readOnly: true
        description:
          type: string
          description: The description of the workflow
          readOnly: true
        lastModifiedUser:
          type: string
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
          readOnly: true
        steps:
          type: integer
          description: The number of steps included in the workflow
          format: int32
          readOnly: true
      additionalProperties: false
      description: Details about a workflow
    BulkEditGetFields:
      type: object
      properties:
        startingAfter:
          type: string
          description: The start cursor for use in pagination
          readOnly: true
        endingBefore:
          type: string
          description: The end cursor for use in pagination
          readOnly: true
        fields:
          type: array
          description: List of all the fields
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueBulkEditField'
      additionalProperties: false
      description: Bulk Edit Get Fields Response
    CustomFieldContextDefaultValueSingleGroupPicker:
      required:
      - contextId
      - groupId
      - type
      type: object
      properties:
        groupId:
          type: string
          description: The ID of the the default group
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
      description: The default value for a group picker custom field
    IssueBulkOperationsFieldOption:
      type: object
      additionalProperties: false
    PageBeanFieldConfigurationSchemeProjects:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/FieldConfigurationSchemeProjects'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    ApplicationProperty:
      type: object
      properties:
        allowedValues:
          type: array
          description: The allowed values, if applicable
          items:
            type: string
        defaultValue:
          type: string
          description: The default value of the application property
        name:
          type: string
          description: The name of the application property
        id:
          type: string
          description: The ID of the application property. The ID and key are the
            same
        type:
          type: string
          description: The data type of the application property
        value:
          type: string
          description: The new value
        key:
          type: string
          description: The key of the application property. The ID and key are the
            same
        desc:
          type: string
          description: The description of the application property
        example:
          type: string
      additionalProperties: false
      description: Details of an application property
    PublishedWorkflowId:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the workflow
        entityId:
          type: string
          description: The entity ID of the workflow
      additionalProperties: false
      description: Properties that identify a published workflow
    CreateCustomFieldRequest:
      required:
      - customFieldId
      type: object
      properties:
        filter:
          type: boolean
          description: Allows filtering issues based on their values for the custom
            field
        customFieldId:
          type: integer
          description: The custom field ID
          format: int64
      additionalProperties: false
    BulkChangelogRequestBean:
      required:
      - issueIdsOrKeys
      type: object
      properties:
        maxResults:
          maximum: 10000
          minimum: 1
          type: integer
          description: The maximum number of items to return per page
          format: int32
          default: 1000
        nextPageToken:
          type: string
          description: The cursor for pagination
        issueIdsOrKeys:
          maxItems: 1000
          minItems: 1
          type: array
          description: List of issue IDs/keys to fetch changelogs for
          items:
            type: string
            description: List of issue IDs/keys to fetch changelogs for
        fieldIds:
          maxItems: 10
          minItems: 0
          uniqueItems: true
          type: array
          description: List of field IDs to filter changelogs
          items:
            type: string
            description: List of field IDs to filter changelogs
      additionalProperties: false
      description: Request bean for bulk changelog retrieval
    ContainerForWebhookIDs:
      required:
      - webhookIds
      type: object
      properties:
        webhookIds:
          type: array
          description: A list of webhook IDs
          items:
            type: integer
            description: A list of webhook IDs.
            format: int64
      additionalProperties: false
      description: Container for a list of webhook IDs
    CustomFieldContextDefaultValueMultipleOption:
      required:
      - contextId
      - optionIds
      - type
      type: object
      properties:
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
        optionIds:
          type: array
          description: The list of IDs of the default options
          items:
            type: string
            description: The list of IDs of the default options.
      description: The default value for a multi-select custom field
    Icon:
      type: object
      properties:
        link:
          type: string
          description: The URL of the tooltip, used only for a status icon. If not
            set, the status icon in Jira is not clickable.
        title:
          type: string
          description: |-
            The title of the icon. This is used as follows:

             *  For a status icon it is used as a tooltip on the icon. If not set, the status icon doesn't display a tooltip in Jira.
             *  For the remote object icon it is used in conjunction with the application name to display a tooltip for the link's icon. The tooltip takes the format "\[application name\] icon title". Blank itemsare excluded from the tooltip title. If both items are blank, the icon tooltop displays as "Web Link".
        url16x16:
          type: string
          description: The URL of an icon that displays at 16x16 pixel in Jira.
      additionalProperties: true
      description: |-
        An icon. If no icon is defined:

         *  for a status icon, no status icon displays in Jira.
         *  for the remote object icon, the default link icon displays in Jira
    SearchRequestBean:
      type: object
      properties:
        expand:
          type: array
          description: |-
            Use [expand](#expansion) to include additional information about issues in the response. Note that, unlike the majority of instances where `expand` is specified, `expand` is defined as a list of values. The expand options are:

             *  `renderedFields` Returns field values rendered in HTML format.
             *  `names` Returns the display name of each field.
             *  `schema` Returns the schema describing a field type.
             *  `transitions` Returns all possible transitions for the issue.
             *  `operations` Returns all possible operations for the issue.
             *  `editmeta` Returns information about how each field can be edited.
             *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
             *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version
          items:
            type: string
        jql:
          type: string
          description: A [JQL](https://confluence.atlassian.com/x/egORLQ) expression
        maxResults:
          type: integer
          description: The maximum number of items to return per page
          format: int32
          default: 50
        validateQuery:
          type: string
          description: |-
            Determines how to validate the JQL query and treat the validation results. Supported values:

             *  `strict` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).
             *  `warn` Returns all errors as warnings.
             *  `none` No validation is performed.
             *  `true` *Deprecated* A legacy synonym for `strict`.
             *  `false` *Deprecated* A legacy synonym for `warn`.

            The default is `strict`.

            Note: If the JQL is not correctly formed a 400 response code is returned, regardless of the `validateQuery` value
          enum:
          - strict
          - warn
          - none
          - 'true'
          - 'false'
        fieldsByKeys:
          type: boolean
          description: Reference fields by their key (rather than ID). The default
            is `false`
        fields:
          type: array
          description: |-
            A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:

             *  `*all` Returns all fields.
             *  `*navigable` Returns navigable fields.
             *  Any issue field, prefixed with a minus to exclude.

            The default is `*navigable`.

            Examples:

             *  `summary,comment` Returns the summary and comments fields only.
             *  `-description` Returns all navigable (default) fields except description.
             *  `*all,-comment` Returns all fields except comments.

            Multiple `fields` parameters can be included in a request.

            Note: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields
          items:
            type: string
        properties:
          type: array
          description: A list of up to 5 issue properties to include in the results.
            This parameter accepts a comma-separated list
          items:
            type: string
        startAt:
          type: integer
          description: The index of the first item to return in the page of results
            (page offset). The base index is `0`
          format: int32
      additionalProperties: false
    AddFieldBean:
      required:
      - fieldId
      type: object
      properties:
        fieldId:
          type: string
          description: The ID of the field to add
      additionalProperties: false
    FieldConfigurationItem:
      required:
      - id
      type: object
      properties:
        isRequired:
          type: boolean
          description: Whether the field is required in the field configuration
        renderer:
          type: string
          description: The renderer type for the field within the field configuration
        description:
          type: string
          description: The description of the field within the field configuration
        id:
          type: string
          description: The ID of the field within the field configuration
        isHidden:
          type: boolean
          description: Whether the field is hidden in the field configuration
      additionalProperties: false
      description: A field within a field configuration
    IssueFilterForBulkPropertySet:
      type: object
      properties:
        hasProperty:
          type: boolean
          description: Whether the bulk operation occurs only when the property is
            present on or absent from an issue
        currentValue:
          description: The value of properties to perform the bulk operation on
        entityIds:
          uniqueItems: true
          type: array
          description: List of issues to perform the bulk operation on
          items:
            type: integer
            format: int64
      additionalProperties: false
      description: Bulk operation filter details
    ChangedWorklogs:
      type: object
      properties:
        lastPage:
          type: boolean
        nextPage:
          type: string
          description: The URL of the next list of changed worklogs
          format: uri
          readOnly: true
        values:
          type: array
          description: Changed worklog list
          readOnly: true
          items:
            $ref: '#/components/schemas/ChangedWorklog'
        self:
          type: string
          description: The URL of this changed worklogs list
          format: uri
          readOnly: true
        until:
          type: integer
          description: The datetime of the last worklog item in the list
          format: int64
          readOnly: true
        since:
          type: integer
          description: The datetime of the first worklog item in the list
          format: int64
          readOnly: true
      additionalProperties: false
      description: List of changed worklogs
    WebhooksExpirationDate:
      required:
      - expirationDate
      type: object
      properties:
        expirationDate:
          type: integer
          description: The expiration date of all the refreshed webhooks
          format: int64
          readOnly: true
      additionalProperties: false
      description: The date the refreshed webhooks expire
    ContainerOfWorkflowSchemeAssociations:
      required:
      - values
      type: object
      properties:
        values:
          type: array
          description: A list of workflow schemes together with projects they are
            associated with
          items:
            $ref: '#/components/schemas/WorkflowSchemeAssociations'
      additionalProperties: false
      description: A container for a list of workflow schemes together with the projects
        they are associated with
    JiraUrlField:
      required:
      - fieldId
      - url
      type: object
      properties:
        url:
          type: string
        fieldId:
          type: string
      additionalProperties: false
    ServerInformation:
      type: object
      properties:
        healthChecks:
          type: array
          description: Jira instance health check results. Deprecated and no longer
            returned
          items:
            $ref: '#/components/schemas/HealthCheckResult'
        buildDate:
          type: string
          description: The timestamp when the Jira version was built
          format: date-time
        serverTimeZone:
          type: string
          description: The default timezone of the Jira server. In a format known
            as Olson Time Zones, IANA Time Zones or TZ Database Time Zones
        buildNumber:
          type: integer
          description: The build number of the Jira version
          format: int32
        version:
          type: string
          description: The version of Jira
        displayUrl:
          type: string
          description: The display URL of the Jira instance
        baseUrl:
          type: string
          description: The base URL of the Jira instance
        deploymentType:
          type: string
          description: The type of server deployment. This is always returned as *Cloud*
        scmInfo:
          type: string
          description: The unique identifier of the Jira version
        displayUrlServicedeskHelpCenter:
          type: string
          description: The display URL of the Servicedesk Help Center
        serverTime:
          type: string
          description: The time in Jira when this request was responded to
          format: date-time
        serverTitle:
          type: string
          description: The name of the Jira instance
        versionNumbers:
          type: array
          description: The major, minor, and revision version numbers of the Jira
            version
          items:
            type: integer
            format: int32
        displayUrlConfluence:
          type: string
          description: The display URL of Confluence
      additionalProperties: false
      description: Details about the Jira instance
    CustomFieldOption:
      type: object
      properties:
        self:
          type: string
          description: The URL of these custom field option details
          format: uri
          readOnly: true
        value:
          type: string
          description: The value of the custom field option
          readOnly: true
      additionalProperties: false
      description: Details of a custom option for a field
      xml:
        name: customFieldOption
    JiraRichTextInput:
      type: object
      properties:
        adfValue:
          type: object
          additionalProperties: {
            }
      additionalProperties: false
    ProjectIssueTypeMapping:
      required:
      - issueTypeId
      - projectId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type
          writeOnly: true
        projectId:
          type: string
          description: The ID of the project
          writeOnly: true
      additionalProperties: false
      description: The project and issue type mapping
      writeOnly: true
    WorkflowTransitionLinks:
      type: object
      properties:
        fromPort:
          type: integer
          description: The port that the transition starts from
          format: int32
          nullable: true
        toPort:
          type: integer
          description: The port that the transition goes to
          format: int32
          nullable: true
        fromStatusReference:
          type: string
          description: The status that the transition starts from
          nullable: true
      additionalProperties: false
      description: The statuses the transition can start from, and the mapping of
        ports between the statuses
      nullable: true
    PageOfDashboards:
      type: object
      properties:
        next:
          type: string
          description: The URL of the next page of results, if any
          readOnly: true
        total:
          type: integer
          description: The number of results on the page
          format: int32
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of results that could be on the page
          format: int32
          readOnly: true
        prev:
          type: string
          description: The URL of the previous page of results, if any
          readOnly: true
        dashboards:
          type: array
          description: List of dashboards
          readOnly: true
          items:
            $ref: '#/components/schemas/Dashboard'
        startAt:
          type: integer
          description: The index of the first item returned on the page
          format: int32
          readOnly: true
      additionalProperties: false
      description: A page containing dashboard details
    DashboardGadgetPosition:
      required:
      - The column position of the gadget.
      - The row position of the gadget.
      type: object
      properties:
        The column position of the gadget.:
          type: integer
          format: int32
          x-ballerina-name: theColumnPositionOfTheGadget
        The row position of the gadget.:
          type: integer
          format: int32
          x-ballerina-name: theRowPositionOfTheGadget
      additionalProperties: false
      description: Details of a gadget position
      writeOnly: true
    WorkflowProjectIssueTypeUsagePage:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token for the next page of issue type usages
        values:
          type: array
          description: The list of issue types
          items:
            $ref: '#/components/schemas/WorkflowProjectIssueTypeUsage'
      additionalProperties: false
      description: A page of issue types
    FieldCreateMetadata:
      required:
      - fieldId
      - key
      - name
      - operations
      - required
      - schema
      type: object
      properties:
        allowedValues:
          type: array
          description: The list of values allowed in the field
          readOnly: true
          items:
            readOnly: true
        hasDefaultValue:
          type: boolean
          description: Whether the field has a default value
          readOnly: true
        schema:
          description: The data type of the field
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/JsonTypeBean'
        operations:
          type: array
          description: The list of operations that can be performed on the field
          readOnly: true
          items:
            type: string
            readOnly: true
        configuration:
          type: object
          additionalProperties:
            readOnly: true
          description: The configuration properties
          readOnly: true
        defaultValue:
          description: The default value of the field
          readOnly: true
        name:
          type: string
          description: The name of the field
          readOnly: true
        autoCompleteUrl:
          type: string
          description: The URL that can be used to automatically complete the field
          readOnly: true
        key:
          type: string
          description: The key of the field
          readOnly: true
        required:
          type: boolean
          description: Whether the field is required
          readOnly: true
        fieldId:
          type: string
          description: The field id
          readOnly: true
      additionalProperties: false
      description: The metadata describing an issue field for createmeta
      xml:
        name: availableField
    CreateWorkflowTransitionRulesDetails:
      type: object
      properties:
        postFunctions:
          type: array
          description: |-
            The workflow post functions.

            **Note:** The default post functions are always added to the *initial* transition, as in:

                "postFunctions": [
                    {
                        "type": "IssueCreateFunction"
                    },
                    {
                        "type": "IssueReindexFunction"
                    },
                    {
                        "type": "FireIssueEventFunction",
                        "configuration": {
                            "event": {
                                "id": "1",
                                "name": "issue_created"
                            }
                        }
                    }
                ]

            **Note:** The default post functions are always added to the *global* and *directed* transitions, as in:

                "postFunctions": [
                    {
                        "type": "UpdateIssueStatusFunction"
                    },
                    {
                        "type": "CreateCommentFunction"
                    },
                    {
                        "type": "GenerateChangeHistoryFunction"
                    },
                    {
                        "type": "IssueReindexFunction"
                    },
                    {
                        "type": "FireIssueEventFunction",
                        "configuration": {
                            "event": {
                                "id": "13",
                                "name": "issue_generic"
                            }
                        }
                    }
                ]
          items:
            $ref: '#/components/schemas/CreateWorkflowTransitionRule'
        validators:
          type: array
          description: |-
            The workflow validators.

            **Note:** The default permission validator is always added to the *initial* transition, as in:

                "validators": [
                    {
                        "type": "PermissionValidator",
                        "configuration": {
                            "permissionKey": "CREATE_ISSUES"
                        }
                    }
                ]
          items:
            $ref: '#/components/schemas/CreateWorkflowTransitionRule'
        conditions:
          description: The workflow conditions
          allOf:
          - $ref: '#/components/schemas/CreateWorkflowCondition'
      additionalProperties: false
      description: The details of a workflow transition rules
      writeOnly: true
    RemoteIssueLinkIdentifies:
      type: object
      properties:
        self:
          type: string
          description: The URL of the remote issue link
          readOnly: true
          xml:
            attribute: true
        id:
          type: integer
          description: The ID of the remote issue link, such as the ID of the item
            on the remote system
          format: int64
          readOnly: true
          xml:
            attribute: true
      additionalProperties: false
      description: Details of the identifiers for a created or updated remote issue
        link
    Avatar:
      required:
      - id
      type: object
      properties:
        fileName:
          type: string
          description: The file name of the avatar icon. Returned for system avatars.
          readOnly: true
        id:
          type: string
          description: The ID of the avatar.
        isDeletable:
          type: boolean
          description: Whether the avatar can be deleted.
          readOnly: true
        isSelected:
          type: boolean
          description: Whether the avatar is used in Jira. For example, shown as a
            project's avatar.
          readOnly: true
        isSystemAvatar:
          type: boolean
          description: Whether the avatar is a system avatar.
          readOnly: true
        owner:
          type: string
          description: The owner of the avatar. For a system avatar the owner is null
            (and nothing is returned). For non-system avatars this is the appropriate
            identifier, such as the ID for a project or the account ID for a user.
          readOnly: true
        urls:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          description: The list of avatar icon URLs.
          readOnly: true
      additionalProperties: true
      description: Details of an avatar
    SearchAutoCompleteFilter:
      type: object
      properties:
        projectIds:
          type: array
          description: List of project IDs used to filter the visible field details
            returned
          items:
            type: integer
            format: int64
        includeCollapsedFields:
          type: boolean
          description: Include collapsed fields for fields that have non-unique names
          default: false
      additionalProperties: false
      description: Details of how to filter and list search auto complete information
    StatusUpdateRequest:
      required:
      - statuses
      type: object
      properties:
        statuses:
          type: array
          description: The list of statuses that will be updated
          items:
            $ref: '#/components/schemas/StatusUpdate'
      additionalProperties: false
      description: The list of statuses that will be updated
    StatusMetadata:
      type: object
      properties:
        name:
          type: string
          description: The name of the status
        id:
          type: string
          description: The ID of the status
        category:
          type: string
          description: The category of the status
          enum:
          - TODO
          - IN_PROGRESS
          - DONE
      additionalProperties: false
      description: The details of the statuses in the associated workflows
    NotificationSchemeEventPayload:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/NotificationSchemeEventIDPayload'
        notifications:
          type: array
          description: The configuration for notification recipents
          items:
            $ref: '#/components/schemas/NotificationSchemeNotificationDetailsPayload'
      additionalProperties: false
      description: The payload for creating a notification scheme event. Defines which
        notifications should be sent for a specific event
    PageBean2JqlFunctionPrecomputationBean:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/JqlFunctionPrecomputationBean'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    FieldLayoutConfiguration:
      type: object
      properties:
        field:
          type: boolean
          description: Whether to show the field
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        required:
          type: boolean
          description: Whether the field is required
      additionalProperties: false
      description: Defines the payload for the field layout configuration. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-field-configurations/\#api-rest-api-3-fieldconfiguration-post
    PageBeanIssueTypeSchemeMapping:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeSchemeMapping'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    StatusScope:
      required:
      - type
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectId'
        type:
          type: string
          description: The scope of the status. `GLOBAL` for company-managed projects
            and `PROJECT` for team-managed projects
          enum:
          - PROJECT
          - GLOBAL
      additionalProperties: false
      description: The scope of the status
    CreatedIssues:
      type: object
      properties:
        issues:
          type: array
          description: Details of the issues created
          readOnly: true
          items:
            $ref: '#/components/schemas/CreatedIssue'
        errors:
          type: array
          description: Error details for failed issue creation requests
          readOnly: true
          items:
            $ref: '#/components/schemas/BulkOperationErrorResult'
      additionalProperties: false
      description: Details about the issues created and the errors for requests that
        failed
    BulkOperationErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
      additionalProperties: false
    TransitionPayload:
      type: object
      properties:
        validators:
          type: array
          description: The validators that are performed when the transition is made
          items:
            $ref: '#/components/schemas/RulePayload'
        description:
          type: string
          description: The description of the transition
        triggers:
          type: array
          description: The triggers that are performed when the transition is made
          items:
            $ref: '#/components/schemas/RulePayload'
        type:
          type: string
          description: The type of the transition
          enum:
          - global
          - initial
          - directed
        customIssueEventId:
          type: string
          description: Mechanism in Jira for triggering certain actions, like notifications,
            automations, etc. Unless a custom notification scheme is configure, it's
            better not to provide any value here
        transitionScreen:
          $ref: '#/components/schemas/RulePayload'
        name:
          type: string
          description: The name of the transition
        from:
          type: array
          description: The statuses that the transition can be made from
          items:
            $ref: '#/components/schemas/FromLayoutPayload'
        id:
          type: integer
          description: The id of the transition
          format: int32
        to:
          $ref: '#/components/schemas/ToLayoutPayload'
        conditions:
          $ref: '#/components/schemas/ConditionGroupPayload'
        actions:
          type: array
          description: The actions that are performed when the transition is made
          items:
            $ref: '#/components/schemas/RulePayload'
        properties:
          type: object
          additionalProperties:
            type: string
            description: The properties of the transition
          description: The properties of the transition
      additionalProperties: false
      description: The payload for creating a transition in a workflow. Can be DIRECTED,
        GLOBAL, SELF-LOOPED, GLOBAL LOOPED
    CreateSchedulingRequest:
      required:
      - estimation
      type: object
      properties:
        estimation:
          type: string
          description: The estimation unit for the plan. This must be "StoryPoints",
            "Days" or "Hours"
          enum:
          - StoryPoints
          - Days
          - Hours
        inferredDates:
          type: string
          description: The inferred dates for the plan. This must be "None", "SprintDates"
            or "ReleaseDates"
          enum:
          - None
          - SprintDates
          - ReleaseDates
        endDate:
          description: The end date field for the plan
          allOf:
          - $ref: '#/components/schemas/CreateDateFieldRequest'
        startDate:
          description: The start date field for the plan
          allOf:
          - $ref: '#/components/schemas/CreateDateFieldRequest'
        dependencies:
          type: string
          description: The dependencies for the plan. This must be "Sequential" or
            "Concurrent"
          enum:
          - Sequential
          - Concurrent
      additionalProperties: false
    License:
      required:
      - applications
      type: object
      properties:
        applications:
          type: array
          description: The applications under this license
          readOnly: true
          items:
            $ref: '#/components/schemas/LicensedApplication'
      additionalProperties: false
      description: Details about a license for the Jira instance
    CreateWorkflowStatusDetails:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the status
        properties:
          type: object
          additionalProperties:
            type: string
          description: The properties of the status
      additionalProperties: false
      description: The details of a transition status
      writeOnly: true
    JsonNode:
      maxProperties: 10
      minProperties: 1
      type: object
      properties:
        valueAsDouble:
          type: number
          format: double
        numberType:
          type: string
          enum:
          - INT
          - LONG
          - BIG_INTEGER
          - FLOAT
          - DOUBLE
          - BIG_DECIMAL
        fieldNames:
          type: object
        decimalValue:
          type: number
        valueAsBoolean:
          type: boolean
        valueNode:
          type: boolean
        long:
          type: boolean
        longValue:
          type: integer
          format: int64
        valueAsInt:
          type: integer
          format: int32
        missingNode:
          type: boolean
        number:
          type: boolean
        valueAsText:
          type: string
        array:
          type: boolean
        containerNode:
          type: boolean
        numberValue:
          type: number
        bigDecimal:
          type: boolean
        valueAsLong:
          type: integer
          format: int64
        integralNumber:
          type: boolean
        textValue:
          type: string
        double:
          type: boolean
        intValue:
          type: integer
          format: int32
        bigInteger:
          type: boolean
        doubleValue:
          type: number
          format: double
        floatingPointNumber:
          type: boolean
        int:
          type: boolean
        textual:
          type: boolean
        pojo:
          type: boolean
        bigIntegerValue:
          type: integer
        boolean:
          type: boolean
        'null':
          type: boolean
        binary:
          type: boolean
        elements:
          type: object
        booleanValue:
          type: boolean
        fields:
          type: object
        binaryValue:
          type: array
          items:
            type: string
            format: byte
        object:
          type: boolean
      additionalProperties: false
    AvailableDashboardGadget:
      required:
      - title
      type: object
      properties:
        title:
          type: string
          description: The title of the gadget
          readOnly: true
        uri:
          type: string
          description: The URI of the gadget type
          readOnly: true
        moduleKey:
          type: string
          description: The module key of the gadget type
          readOnly: true
      additionalProperties: false
      description: The details of the available dashboard gadget
    CreatedIssue:
      type: object
      properties:
        self:
          type: string
          description: The URL of the created issue or subtask
          readOnly: true
        watchers:
          description: The response code and messages related to any requested watchers
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/NestedResponse'
        id:
          type: string
          description: The ID of the created issue or subtask
          readOnly: true
        key:
          type: string
          description: The key of the created issue or subtask
          readOnly: true
        transition:
          description: The response code and messages related to any requested transition
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/NestedResponse'
      additionalProperties: false
      description: Details about a created issue or subtask
    ConnectModules:
      required:
      - modules
      type: object
      properties:
        modules:
          type: array
          description: |-
            A list of app modules in the same format as the `modules` property in the
            [app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/)
          items:
            $ref: '#/components/schemas/ConnectModule'
      example:
        jiraEntityProperties:
        - keyConfigurations:
          - extractions:
            - objectName: extension
              type: text
              alias: attachmentExtension
            propertyKey: attachment
          entityType: issue
          name:
            value: Attachment Index Document
          key: dynamic-attachment-entity-property
        jiraIssueFields:
        - description:
            value: A dynamically added single-select field
          type: single_select
          extractions:
          - path: category
            type: text
            name: categoryName
          name:
            value: Dynamic single select
          key: dynamic-select-field
    GetDateFieldResponse:
      required:
      - type
      type: object
      properties:
        dateCustomFieldId:
          type: integer
          description: A date custom field ID. This is returned if the type is "DateCustomField"
          format: int64
        type:
          type: string
          description: The date field type. This is "DueDate", "TargetStartDate",
            "TargetEndDate" or "DateCustomField"
          enum:
          - DueDate
          - TargetStartDate
          - TargetEndDate
          - DateCustomField
      additionalProperties: false
    SecuritySchemeLevelMemberBean:
      required:
      - type
      type: object
      properties:
        parameter:
          type: string
          description: The value corresponding to the specified member type
          writeOnly: true
        type:
          type: string
          description: The issue security level member type, e.g `reporter`, `group`,
            `user`, `projectrole`, `applicationRole`
          writeOnly: true
      additionalProperties: false
      writeOnly: true
    CustomFieldContextDefaultValueUpdate:
      type: object
      properties:
        defaultValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldContextDefaultValue'
      additionalProperties: false
      description: Default values to update
    WorkflowCapabilityPayload:
      type: object
      properties:
        statuses:
          type: array
          description: The statuses for the workflow
          items:
            $ref: '#/components/schemas/StatusPayload'
        workflows:
          type: array
          description: The transitions for the workflow
          items:
            $ref: '#/components/schemas/WorkflowPayload'
        workflowScheme:
          $ref: '#/components/schemas/WorkflowSchemePayload'
      additionalProperties: false
      description: The payload for creating a workflows. See https://www.atlassian.com/software/jira/guides/workflows/overview\#what-is-a-jira-workflow
      nullable: true
    UpdatePrioritySchemeResponseBean:
      type: object
      properties:
        priorityScheme:
          $ref: '#/components/schemas/PrioritySchemeWithPaginatedPrioritiesAndProjects'
        task:
          description: The in-progress issue migration task.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/TaskProgressBeanJsonNode'
      additionalProperties: true
      description: Details of the updated priority scheme
    LegacyJackson1ListProjectRoleDetails:
      type: array
      items:
        $ref: '#/components/schemas/ProjectRoleDetails'
    ExpandPrioritySchemePage:
      type: object
      properties:
        maxResults:
          type: integer
          format: int32
        startAt:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
      additionalProperties: true
    IssueBulkTransitionPayload:
      required:
      - bulkTransitionInputs
      type: object
      properties:
        sendBulkNotification:
          type: boolean
          description: |-
            A boolean value that indicates whether to send a bulk change notification when the issues are being transitioned.

            If `true`, dispatches a bulk notification email to users about the updates
          nullable: true
          writeOnly: true
          default: true
        bulkTransitionInputs:
          type: array
          description: |-
            List of objects and each object has two properties:

             *  Issues that will be bulk transitioned.
             *  TransitionId that corresponds to a specific transition of issues that share the same workflow
          writeOnly: true
          items:
            $ref: '#/components/schemas/BulkTransitionSubmitInput'
      additionalProperties: false
      description: Issue Bulk Transition Payload
    PageBeanFilterDetails:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/FilterDetails'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    JqlFunctionPrecomputationGetByIdRequest:
      type: object
      properties:
        precomputationIDs:
          type: array
          writeOnly: true
          items:
            type: string
            writeOnly: true
      additionalProperties: false
      description: Request to fetch precomputations by ID
      writeOnly: true
    AuditRecords:
      type: object
      properties:
        total:
          type: integer
          description: The total number of audit items returned
          format: int64
          readOnly: true
        offset:
          type: integer
          description: The number of audit items skipped before the first item in
            this list
          format: int32
          readOnly: true
        records:
          type: array
          description: The list of audit items
          readOnly: true
          items:
            $ref: '#/components/schemas/AuditRecordBean'
        limit:
          type: integer
          description: The requested or default limit on the number of audit items
            to be returned
          format: int32
          readOnly: true
      additionalProperties: false
      description: Container for a list of audit records
    PermissionGrants:
      type: object
      properties:
        expand:
          type: string
          description: Expand options that include additional permission grant details
            in the response
          readOnly: true
        permissions:
          type: array
          description: Permission grants list
          readOnly: true
          items:
            $ref: '#/components/schemas/PermissionGrant'
      additionalProperties: false
      description: List of permission grants
    ProjectIssueCreateMetadata:
      type: object
      properties:
        expand:
          type: string
          description: Expand options that include additional project issue create
            metadata details in the response
          readOnly: true
          xml:
            attribute: true
        issuetypes:
          type: array
          description: List of the issue types supported by the project
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeIssueCreateMetadata'
        avatarUrls:
          description: List of the project's avatars, returning the avatar size and
            associated URL
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/AvatarUrlsBean'
        name:
          type: string
          description: The name of the project
          readOnly: true
        self:
          type: string
          description: The URL of the project
          readOnly: true
        id:
          type: string
          description: The ID of the project
          readOnly: true
        key:
          type: string
          description: The key of the project
          readOnly: true
      additionalProperties: false
      description: Details of the issue creation metadata for a project
    PageBeanChangelog:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Changelog'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    FieldLayoutSchemePayload:
      type: object
      properties:
        defaultFieldLayout:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        name:
          type: string
          description: The name of the field layout scheme
          example: My Field Layout Scheme
        description:
          type: string
          description: The description of the field layout scheme
          example: This is a field layout scheme
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        explicitMappings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
          description: There is a default configuration "fieldlayout" that is applied
            to all issue types using this scheme that don't have an explicit mapping
            users can create (or re-use existing) configurations for other issue types
            and map them to this scheme
      additionalProperties: false
      description: Defines the payload for the field layout schemes. See "Field Configuration
        Scheme" - https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-field-configurations/\#api-rest-api-3-fieldconfigurationscheme-post
        https://support.atlassian.com/jira-cloud-administration/docs/configure-a-field-configuration-scheme/
      nullable: true
    ServiceRegistry:
      type: object
      properties:
        organizationId:
          type: string
          description: organization ID
        name:
          type: string
          description: service name
        serviceTier:
          $ref: '#/components/schemas/ServiceRegistryTier'
        description:
          type: string
          description: service description
          nullable: true
        id:
          type: string
          description: service ID
          format: uuid
        revision:
          type: string
          description: service revision
    JiraSingleVersionPickerField:
      required:
      - fieldId
      - version
      type: object
      properties:
        version:
          $ref: '#/components/schemas/JiraVersionField'
        fieldId:
          type: string
      additionalProperties: false
    NotificationSchemeEventIDPayload:
      type: object
      properties:
        id:
          type: string
          description: The event ID to use for reference in the payload
          example: '1'
      additionalProperties: false
      description: The event ID to use for reference in the payload
    UserBeanAvatarUrls:
      type: object
      properties:
        48x48:
          type: string
          description: The URL of the user's 48x48 pixel avatar
          format: uri
        24x24:
          type: string
          description: The URL of the user's 24x24 pixel avatar
          format: uri
        16x16:
          type: string
          description: The URL of the user's 16x16 pixel avatar
          format: uri
        32x32:
          type: string
          description: The URL of the user's 32x32 pixel avatar
          format: uri
      additionalProperties: false
    CustomFieldContextDefaultValueForgeMultiStringField:
      required:
      - type
      type: object
      properties:
        values:
          type: array
          description: List of string values. The maximum length for a value is 254
            characters
          items:
            type: string
            description: List of string values. The maximum length for a value is
              254 characters.
        type:
          type: string
      description: The default text for a Forge collection of strings custom field
    SecuritySchemeWithProjects:
      required:
      - id
      - name
      - self
      type: object
      properties:
        defaultLevel:
          type: integer
          description: The default level ID of the issue security scheme.
          format: int64
          readOnly: true
        description:
          type: string
          description: The description of the issue security scheme.
          readOnly: true
        id:
          type: integer
          description: The ID of the issue security scheme.
          format: int64
          readOnly: true
        name:
          type: string
          description: The name of the issue security scheme.
          readOnly: true
        projectIds:
          uniqueItems: true
          type: array
          description: The list of project IDs associated with the issue security
            scheme.
          readOnly: true
          items:
            type: integer
            format: int64
            readOnly: true
        self:
          type: string
          description: The URL of the issue security scheme.
          readOnly: true
      additionalProperties: true
      description: Details about an issue security scheme
    AttachmentArchiveEntry:
      type: object
      properties:
        entryIndex:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        name:
          type: string
        mediaType:
          type: string
        abbreviatedName:
          type: string
      additionalProperties: false
    PageBeanNotificationScheme:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/NotificationScheme'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    ProjectIdentifierBean:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the project
          format: int64
          readOnly: true
        key:
          type: string
          description: The key of the project
          readOnly: true
      additionalProperties: false
      description: The identifiers for a project
    FailedWebhook:
      required:
      - failureTime
      - id
      - url
      type: object
      properties:
        failureTime:
          type: integer
          description: The time the webhook was added to the list of failed webhooks
            (that is, the time of the last failed retry)
          format: int64
        id:
          type: string
          description: The webhook ID, as sent in the `X-Atlassian-Webhook-Identifier`
            header with the webhook
        body:
          type: string
          description: The webhook body
        url:
          type: string
          description: The original webhook destination
      additionalProperties: false
      description: Details about a failed webhook
    JqlQueryClauseOperand:
      type: object
      description: Details of an operand in a JQL clause
      anyOf:
      - $ref: '#/components/schemas/ListOperand'
      - $ref: '#/components/schemas/ValueOperand'
      - $ref: '#/components/schemas/FunctionOperand'
      - $ref: '#/components/schemas/KeywordOperand'
    IssueTypeScreenSchemeDetails:
      required:
      - issueTypeMappings
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the issue type screen scheme. The name must be
            unique. The maximum length is 255 characters
          writeOnly: true
        description:
          type: string
          description: The description of the issue type screen scheme. The maximum
            length is 255 characters
          writeOnly: true
        issueTypeMappings:
          type: array
          description: The IDs of the screen schemes for the issue type IDs and *default*.
            A *default* entry is required to create an issue type screen scheme, it
            defines the mapping for all issue types without a screen scheme
          writeOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeScreenSchemeMapping'
      additionalProperties: false
      description: The details of an issue type screen scheme
    PrioritySchemeId:
      type: object
      properties:
        task:
          description: The in-progress issue migration task
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/TaskProgressBeanJsonNode'
        id:
          type: string
          description: The ID of the priority scheme
          readOnly: true
      additionalProperties: false
      description: The ID of a priority scheme
    WorkflowSchemeProjectAssociation:
      required:
      - projectId
      type: object
      properties:
        workflowSchemeId:
          type: string
          description: The ID of the workflow scheme. If the workflow scheme ID is
            `null`, the operation assigns the default workflow scheme
        projectId:
          type: string
          description: The ID of the project
      additionalProperties: false
      description: An associated workflow scheme and project
    StatusLayoutUpdate:
      required:
      - properties
      - statusReference
      type: object
      properties:
        approvalConfiguration:
          $ref: '#/components/schemas/ApprovalConfiguration'
        layout:
          $ref: '#/components/schemas/WorkflowLayout'
        properties:
          type: object
          additionalProperties:
            type: string
            description: The properties for this status layout.
          description: The properties for this status layout.
        statusReference:
          type: string
          description: A unique ID which the status will use to refer to this layout
            configuration.
      additionalProperties: true
      description: The statuses associated with this workflow
    TimeTrackingProvider:
      required:
      - key
      type: object
      properties:
        name:
          type: string
          description: The name of the time tracking provider. For example, *JIRA
            provided time tracking*
        key:
          type: string
          description: The key for the time tracking provider. For example, *JIRA*
        url:
          type: string
          description: The URL of the configuration page for the time tracking provider
            app. For example, */example/config/url*. This property is only returned
            if the `adminPageKey` property is set in the module descriptor of the
            time tracking provider app
          readOnly: true
      additionalProperties: false
      description: Details about the time tracking provider
    JiraGroupInput:
      required:
      - groupName
      type: object
      properties:
        groupName:
          type: string
      additionalProperties: false
    PrioritySchemeChangesWithoutMappings:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          description: Affected entity ids
          writeOnly: true
          items:
            type: integer
            format: int64
            writeOnly: true
      additionalProperties: false
      writeOnly: true
    PageBeanDashboard:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Dashboard'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    GetTeamResponseForPage:
      required:
      - id
      - type
      type: object
      properties:
        name:
          type: string
          description: The team name. This is returned if the type is "PlanOnly"
        id:
          type: string
          description: The team ID
        type:
          type: string
          description: The team type. This is "PlanOnly" or "Atlassian"
          enum:
          - PlanOnly
          - Atlassian
      additionalProperties: false
    ScreenSchemeDetails:
      required:
      - name
      - screens
      type: object
      properties:
        screens:
          description: The IDs of the screens for the screen types of the screen scheme.
            Only screens used in classic projects are accepted
          allOf:
          - $ref: '#/components/schemas/ScreenTypes'
        name:
          type: string
          description: The name of the screen scheme. The name must be unique. The
            maximum length is 255 characters
          writeOnly: true
        description:
          type: string
          description: The description of the screen scheme. The maximum length is
            255 characters
          writeOnly: true
      additionalProperties: false
      description: Details of a screen scheme
    GlobalScopeBean:
      type: object
      properties:
        attributes:
          uniqueItems: true
          type: array
          description: Defines the behavior of the option in the global context.If
            notSelectable is set, the option cannot be set as the field's value. This
            is useful for archiving an option that has previously been selected but
            shouldn't be used anymore.If defaultValue is set, the option is selected
            by default
          items:
            type: string
            enum:
            - notSelectable
            - defaultValue
      additionalProperties: false
    StringList:
      type: object
      additionalProperties: false
    WorkflowSchemeUsagePage:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Token for the next page of issue type usages
        values:
          type: array
          description: The list of workflow schemes
          items:
            $ref: '#/components/schemas/WorkflowSchemeUsage'
      additionalProperties: false
      description: A page of workflow schemes
    HealthCheckResult:
      type: object
      properties:
        name:
          type: string
          description: The name of the Jira health check item
        description:
          type: string
          description: The description of the Jira health check item
        passed:
          type: boolean
          description: Whether the Jira health check item passed or failed
      additionalProperties: false
      description: Jira instance health check results. Deprecated and no longer returned
    StatusWorkflowUsageDTO:
      type: object
      properties:
        statusId:
          type: string
          description: The status ID
        workflows:
          $ref: '#/components/schemas/StatusWorkflowUsagePage'
      additionalProperties: false
      description: Workflows using the status
    ReorderIssuePriorities:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          description: The list of issue IDs to be reordered. Cannot contain duplicates
            nor after ID
          writeOnly: true
          items:
            type: string
            writeOnly: true
        after:
          type: string
          description: The ID of the priority. Required if `position` isn't provided
          writeOnly: true
        position:
          type: string
          description: The position for issue priorities to be moved to. Required
            if `after` isn't provided
          writeOnly: true
      additionalProperties: false
      description: Change the order of issue priorities
    SecuritySchemeMembersRequest:
      required:
      - securitySchemeLevelMembers
      type: object
      properties:
        members:
          type: array
          description: The list of level members which should be added to the issue
            security scheme level
          writeOnly: true
          items:
            $ref: '#/components/schemas/SecuritySchemeLevelMemberBean'
      additionalProperties: false
      description: Details of issue security scheme level new members
    UpdateScreenTypes:
      type: object
      properties:
        default:
          type: string
          description: The ID of the default screen. When specified, must include
            a screen ID as a default screen is required
          writeOnly: true
        view:
          type: string
          description: The ID of the view screen. To remove the screen association,
            pass a null
          writeOnly: true
        edit:
          type: string
          description: The ID of the edit screen. To remove the screen association,
            pass a null
          writeOnly: true
        create:
          type: string
          description: The ID of the create screen. To remove the screen association,
            pass a null
          writeOnly: true
      additionalProperties: false
      description: The IDs of the screens for the screen types of the screen scheme
      writeOnly: true
    WorkflowStatus:
      required:
      - id
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the status in the workflow
        id:
          type: string
          description: The ID of the issue status
        properties:
          type: object
          additionalProperties:
            description: Additional properties that modify the behavior of issues
              in this status. Supports the properties <code>jira.issue.editable</code>
              and <code>issueEditable</code> (deprecated) that indicate whether issues
              are editable.
          description: Additional properties that modify the behavior of issues in
            this status. Supports the properties `jira.issue.editable` and `issueEditable`
            (deprecated) that indicate whether issues are editable
      additionalProperties: false
      description: Details of a workflow status
    BulkPermissionGrants:
      required:
      - globalPermissions
      - projectPermissions
      type: object
      properties:
        globalPermissions:
          uniqueItems: true
          type: array
          description: List of permissions granted to the user
          items:
            type: string
        projectPermissions:
          uniqueItems: true
          type: array
          description: List of project permissions and the projects and issues those
            permissions provide access to
          items:
            $ref: '#/components/schemas/BulkProjectPermissionGrants'
      additionalProperties: false
      description: Details of global and project permissions granted to the user
    PageBean2ComponentJsonBean:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/ComponentJsonBean'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    PageBeanFieldConfigurationDetails:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/FieldConfigurationDetails'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    Transition:
      required:
      - description
      - from
      - id
      - name
      - to
      - type
      type: object
      properties:
        name:
          type: string
          description: The name of the transition
        description:
          type: string
          description: The description of the transition
        screen:
          $ref: '#/components/schemas/TransitionScreenDetails'
        from:
          type: array
          description: The statuses the transition can start from
          items:
            type: string
            description: The statuses the transition can start from.
        rules:
          $ref: '#/components/schemas/WorkflowRules'
        id:
          type: string
          description: The ID of the transition
        to:
          type: string
          description: The status the transition goes to
        type:
          type: string
          description: The type of the transition
          enum:
          - global
          - initial
          - directed
        properties:
          type: object
          additionalProperties:
            description: The properties of the transition.
          description: The properties of the transition
      additionalProperties: false
      description: Details of a workflow transition
    UpdatedProjectCategory:
      type: object
      properties:
        name:
          type: string
          description: The description of the project category
          readOnly: true
        description:
          type: string
          description: The name of the project category
          readOnly: true
        self:
          type: string
          description: The URL of the project category
          readOnly: true
        id:
          type: string
          description: The ID of the project category
          readOnly: true
      additionalProperties: false
      description: A project category
    FieldConfigurationToIssueTypeMapping:
      required:
      - fieldConfigurationId
      - issueTypeId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type or *default*. When set to *default*
            this field configuration issue type item applies to all issue types without
            a field configuration. An issue type can be included only once in a request
          writeOnly: true
        fieldConfigurationId:
          type: string
          description: The ID of the field configuration
          writeOnly: true
      additionalProperties: false
      description: The field configuration to issue type mapping
      writeOnly: true
    ErrorMessage:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    ContainerForRegisteredWebhooks:
      type: object
      properties:
        webhookRegistrationResult:
          type: array
          description: A list of registered webhooks
          items:
            $ref: '#/components/schemas/RegisteredWebhook'
      additionalProperties: false
      description: Container for a list of registered webhooks. Webhook details are
        returned in the same order as the request
    ConvertedJQLQueries:
      type: object
      properties:
        queriesWithUnknownUsers:
          type: array
          description: List of queries containing user information that could not
            be mapped to an existing user
          items:
            $ref: '#/components/schemas/JQLQueryWithUnknownUsers'
        queryStrings:
          type: array
          description: The list of converted query strings with account IDs in place
            of user identifiers
          items:
            type: string
      additionalProperties: false
      description: The converted JQL queries
    UpdateUserToGroupBean:
      type: object
      properties:
        accountId:
          maxLength: 128
          type: string
          description: The account ID of the user, which uniquely identifies the user
            across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
        name:
          type: string
          description: This property is no longer available. See the [deprecation
            notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details.
      additionalProperties: true
    JQLPersonalDataMigrationRequest:
      type: object
      properties:
        queryStrings:
          type: array
          description: A list of queries with user identifiers. Maximum of 100 queries
          items:
            type: string
      additionalProperties: false
      description: The JQL queries to be converted
    JexpEvaluateCtxJqlIssues:
      type: object
      properties:
        maxResults:
          type: integer
          description: The maximum number of issues to return from the JQL query.
            max results value considered may be lower than the number specific here
          format: int32
        nextPageToken:
          type: string
          description: The token for a page to fetch that is not the first page. The
            first page has a `nextPageToken` of `null`. Use the `nextPageToken` to
            fetch the next page of issues
        query:
          type: string
          description: The JQL query, required to be bounded. Additionally, `orderBy`
            clause can contain a maximum of 7 fields
      additionalProperties: false
      description: The JQL specifying the issues available in the evaluated Jira expression
        under the `issues` context variable. Not all issues returned by the JQL query
        are loaded, only those described by the `nextPageToken` and `maxResults` properties.
        This bean will be replacing JexpJqlIssues bean as part of new `evaluate` endpoint
    PageBeanFieldConfigurationScheme:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/FieldConfigurationScheme'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    StatusesPerWorkflow:
      type: object
      properties:
        statuses:
          uniqueItems: true
          type: array
          description: The status IDs associated with the workflow
          items:
            type: string
            description: The status IDs associated with the workflow.
        initialStatusId:
          type: string
          description: The ID of the initial status for the workflow
        workflowId:
          type: string
          description: The ID of the workflow
      additionalProperties: false
      description: The statuses associated with each workflow
    AddNotificationsDetails:
      required:
      - notificationSchemeEvents
      type: object
      properties:
        notificationSchemeEvents:
          type: array
          description: The list of notifications which should be added to the notification
            scheme.
          writeOnly: true
          items:
            $ref: '#/components/schemas/NotificationSchemeEventDetails'
      additionalProperties: true
      description: Details of notifications which should be added to the notification
        scheme
    AttachmentSettings:
      type: object
      properties:
        uploadLimit:
          type: integer
          description: The maximum size of attachments permitted, in bytes
          format: int64
          readOnly: true
        enabled:
          type: boolean
          description: Whether the ability to add attachments is enabled
          readOnly: true
      additionalProperties: false
      description: Details of the instance's attachment settings
    CustomFieldContextDefaultValueForgeMultiUserField:
      required:
      - accountIds
      - contextId
      - type
      type: object
      properties:
        accountIds:
          type: array
          description: The IDs of the default users
          items:
            type: string
            description: The IDs of the default users.
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
      description: Defaults for a Forge collection of users custom field
    IssueTypeScheme:
      required:
      - id
      - name
      type: object
      properties:
        isDefault:
          type: boolean
          description: Whether the issue type scheme is the default
        defaultIssueTypeId:
          type: string
          description: The ID of the default issue type of the issue type scheme
        name:
          type: string
          description: The name of the issue type scheme
        description:
          type: string
          description: The description of the issue type scheme
        id:
          type: string
          description: The ID of the issue type scheme
      additionalProperties: false
      description: Details of an issue type scheme
    SimpleLink:
      type: object
      properties:
        weight:
          type: integer
          format: int32
        href:
          type: string
        id:
          type: string
        label:
          type: string
        styleClass:
          type: string
        title:
          type: string
        iconClass:
          type: string
      additionalProperties: false
      description: Details about the operations available in this version
      xml:
        name: link
    PageBeanIssueTypeScheme:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeScheme'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    ScreenScheme:
      type: object
      properties:
        issueTypeScreenSchemes:
          description: Details of the issue type screen schemes associated with the
            screen scheme
          allOf:
          - $ref: '#/components/schemas/PageBeanIssueTypeScreenScheme'
        screens:
          description: The IDs of the screens for the screen types of the screen scheme
          allOf:
          - $ref: '#/components/schemas/ScreenTypes'
        name:
          type: string
          description: The name of the screen scheme
        description:
          type: string
          description: The description of the screen scheme
        id:
          type: integer
          description: The ID of the screen scheme
          format: int64
      additionalProperties: false
      description: A screen scheme
    FoundUsersAndGroups:
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/FoundGroups'
        users:
          $ref: '#/components/schemas/FoundUsers'
      additionalProperties: false
      description: List of users and groups found in a search
    CustomTemplatesProjectDetails:
      type: object
      properties:
        enableComponents:
          type: boolean
          description: Whether components are enabled for the project. Only used by
            company-managed project
          example: false
          default: false
        avatarId:
          type: integer
          description: The ID of the project's avatar. Use the \[Get project avatars\](\#api-rest-api-3-project-projectIdOrKey-avatar-get)
            operation to list the available avatars in a project
          format: int64
          example: 10200
        accessLevel:
          type: string
          description: The access level of the project. Only used by team-managed
            project
          example: private
          enum:
          - open
          - limited
          - private
          - free
        name:
          type: string
          description: Name of the project
          example: Project Foo Bar
        description:
          type: string
          description: Brief description of the project
          example: This is a project for Foo Bar
        language:
          type: string
          description: The default language for the project
          example: en
        additionalProperties:
          type: object
          additionalProperties:
            type: string
            description: Additional properties of the project
          description: Additional properties of the project
        assigneeType:
          type: string
          description: The default assignee when creating issues in the project
          example: PROJECT_LEAD
          enum:
          - PROJECT_DEFAULT
          - COMPONENT_LEAD
          - PROJECT_LEAD
          - UNASSIGNED
        leadAccountId:
          type: string
          description: The account ID of the project lead. Either `lead` or `leadAccountId`
            must be set when creating a project. Cannot be provided with `lead`
          example: '1234567890'
        categoryId:
          type: integer
          description: The ID of the project's category. A complete list of category
            IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get)
            operation
          format: int64
        key:
          type: string
          description: Project keys must be unique and start with an uppercase letter
            followed by one or more uppercase alphanumeric characters. The maximum
            length is 10 characters
          example: PRJ
        url:
          type: string
          description: A link to information about this project, such as project documentation
          example: https://www.example.com
      additionalProperties: false
      description: Project Details
    IssueBulkTransitionForWorkflow:
      type: object
      properties:
        isTransitionsFiltered:
          type: boolean
          description: Indicates whether all the transitions of this workflow are
            available in the transitions list or not
          readOnly: true
        transitions:
          type: array
          description: "List of transitions available for issues from the request\
            \ which are associated with this workflow.\n\n **This list includes only\
            \ those transitions that are common across the issues in this workflow\
            \ and do not involve any additional field updates.** "
          readOnly: true
          items:
            $ref: '#/components/schemas/SimplifiedIssueTransition'
        issues:
          type: array
          description: List of issue keys from the request which are associated with
            this workflow
          readOnly: true
          items:
            type: string
            readOnly: true
      additionalProperties: false
    WorkflowSchemeUpdateRequiredMappingsResponse:
      type: object
      properties:
        statuses:
          uniqueItems: true
          type: array
          description: The details of the statuses in the associated workflows
          items:
            $ref: '#/components/schemas/StatusMetadata'
        statusMappingsByWorkflows:
          uniqueItems: true
          type: array
          description: The list of required status mappings by workflow
          items:
            $ref: '#/components/schemas/RequiredMappingByWorkflows'
        statusMappingsByIssueTypes:
          uniqueItems: true
          type: array
          description: The list of required status mappings by issue type
          items:
            $ref: '#/components/schemas/RequiredMappingByIssueType'
        statusesPerWorkflow:
          uniqueItems: true
          type: array
          description: The statuses associated with each workflow
          items:
            $ref: '#/components/schemas/StatusesPerWorkflow'
      additionalProperties: false
    NotificationRecipients:
      type: object
      properties:
        assignee:
          type: boolean
          description: Whether the notification should be sent to the issue's assignees.
        groupIds:
          type: array
          description: List of groupIds to receive the notification.
          items:
            type: string
        groups:
          type: array
          description: List of groups to receive the notification.
          items:
            $ref: '#/components/schemas/GroupName'
        reporter:
          type: boolean
          description: Whether the notification should be sent to the issue's reporter.
        users:
          type: array
          description: List of users to receive the notification.
          items:
            $ref: '#/components/schemas/UserDetails'
        voters:
          type: boolean
          description: Whether the notification should be sent to the issue's voters.
        watchers:
          type: boolean
          description: Whether the notification should be sent to the issue's watchers.
      additionalProperties: true
      description: Details of the users and groups to receive the notification
    SearchAndReconcileRequestBean:
      type: object
      properties:
        expand:
          type: string
          description: |-
            Use [expand](#expansion) to include additional information about issues in the response. Note that, unlike the majority of instances where `expand` is specified, `expand` is defined as a comma-delimited string of values. The expand options are:

             *  `renderedFields` Returns field values rendered in HTML format.
             *  `names` Returns the display name of each field.
             *  `schema` Returns the schema describing a field type.
             *  `transitions` Returns all possible transitions for the issue.
             *  `operations` Returns all possible operations for the issue.
             *  `editmeta` Returns information about how each field can be edited.
             *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
             *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version.

            Examples: `"names,changelog"` Returns the display name of each field as well as a list of recent updates to an issue
        jql:
          type: string
          description: |-
            A [JQL](https://confluence.atlassian.com/x/egORLQ) expression. For performance reasons, this parameter requires a bounded query. A bounded query is a query with a search restriction.

             *  Example of an unbounded query: `order by key desc`.
             *  Example of a bounded query: `assignee = currentUser() order by key`.

            Additionally, `orderBy` clause can contain a maximum of 7 fields
        maxResults:
          type: integer
          description: The maximum number of items to return per page. To manage page
            size, API may return fewer items per page where a large number of fields
            are requested. The greatest number of items returned per page is achieved
            when requesting `id` or `key` only. It returns max 5000 issues
          format: int32
          default: 50
        nextPageToken:
          type: string
          description: The token for a page to fetch that is not the first page. The
            first page has a `nextPageToken` of `null`. Use the `nextPageToken` to
            fetch the next page of issues
        fieldsByKeys:
          type: boolean
          description: Reference fields by their key (rather than ID). The default
            is `false`
        fields:
          type: array
          description: |-
            A list of fields to return for each issue. Use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:

             *  `*all` Returns all fields.
             *  `*navigable` Returns navigable fields.
             *  `id` Returns only issue IDs.
             *  Any issue field, prefixed with a dash to exclude.

            The default is `id`.

            Examples:

             *  `summary,comment` Returns the summary and comments fields only.
             *  `*all,-comment` Returns all fields except comments.

            Multiple `fields` parameters can be included in a request.

            Note: By default, this resource returns IDs only. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields
          items:
            type: string
        reconcileIssues:
          type: array
          description: Strong consistency issue ids to be reconciled with search results.
            Accepts max 50 ids
          items:
            type: integer
            format: int64
        properties:
          type: array
          description: A list of up to 5 issue properties to include in the results.
            This parameter accepts a comma-separated list
          items:
            type: string
      additionalProperties: false
    CustomContextVariable:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: Type of custom context variable.
      additionalProperties: false
      discriminator:
        propertyName: type
        mapping:
          issue: '#/components/schemas/IssueContextVariable'
          json: '#/components/schemas/JsonContextVariable'
          user: '#/components/schemas/UserContextVariable'
      oneOf:
      - $ref: '#/components/schemas/UserContextVariable'
      - $ref: '#/components/schemas/IssueContextVariable'
      - $ref: '#/components/schemas/JsonContextVariable'
    SecurityLevelPayload:
      type: object
      properties:
        isDefault:
          type: boolean
          description: Whether the security level is default for the security scheme
          enum:
          - true
          - false
        securityLevelMembers:
          type: array
          description: The members of the security level
          items:
            $ref: '#/components/schemas/SecurityLevelMemberPayload'
        name:
          type: string
          description: The name of the security level
          example: New Security Level
        description:
          type: string
          description: The description of the security level
          example: Newly created issue security level
      additionalProperties: false
      description: The payload for creating a security level. See https://support.atlassian.com/jira-cloud-administration/docs/configure-issue-security-schemes/
    SingleRedactionRequest:
      required:
      - contentItem
      - externalId
      - reason
      - redactionPosition
      type: object
      properties:
        reason:
          type: string
          description: The reason why the content is being redacted
          example: PII data
        redactionPosition:
          $ref: '#/components/schemas/RedactionPosition'
        contentItem:
          $ref: '#/components/schemas/ContentItem'
        externalId:
          type: string
          description: Unique id for the redaction request; ID format should be of
            UUID
          format: uuid
          example: 51101de6-d001-429d-a095-b2b96dd57fcb
      additionalProperties: false
    ProjectIssueTypes:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectId'
        issueTypes:
          uniqueItems: true
          type: array
          description: IDs of the issue types
          nullable: true
          items:
            type: string
            description: IDs of the issue types
            nullable: true
      additionalProperties: false
      description: |-
        Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

        Use the optional `workflows.usages` expand to get additional information about the projects and issue types associated with the requested workflows
      nullable: true
    GetPermissionResponse:
      required:
      - holder
      - type
      type: object
      properties:
        holder:
          description: The permission holder
          allOf:
          - $ref: '#/components/schemas/GetPermissionHolderResponse'
        type:
          type: string
          description: The permission type. This is "View" or "Edit"
          enum:
          - View
          - Edit
      additionalProperties: false
    IdBean:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: The ID of the permission scheme to associate with the project.
            Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get)
            resource to get a list of permission scheme IDs
          format: int64
      additionalProperties: false
    CardLayoutField:
      type: object
      properties:
        mode:
          type: string
          enum:
          - PLAN
          - WORK
        id:
          type: integer
          format: int64
        position:
          type: integer
          format: int32
        fieldId:
          type: string
      additionalProperties: false
      description: Card layout settings of the board
    IssueTypeSchemeMapping:
      required:
      - issueTypeId
      - issueTypeSchemeId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type
        issueTypeSchemeId:
          type: string
          description: The ID of the issue type scheme
      additionalProperties: false
      description: Issue type scheme item
    PageBeanUserDetails:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/UserDetails'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    FunctionOperand:
      required:
      - arguments
      - function
      type: object
      properties:
        encodedOperand:
          type: string
          description: Encoded operand, which can be used directly in a JQL query
        function:
          type: string
          description: The name of the function
        arguments:
          type: array
          description: The list of function arguments
          items:
            type: string
      description: An operand that is a function. See [Advanced searching - functions
        reference](https://confluence.atlassian.com/x/dwiiLQ) for more information
        about JQL functions
    PaginatedResponseFieldCreateMetadata:
      type: object
      properties:
        total:
          type: integer
          format: int64
        maxResults:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/FieldCreateMetadata'
        startAt:
          type: integer
          format: int64
      additionalProperties: false
    WorkflowRuleConfiguration:
      required:
      - ruleKey
      type: object
      properties:
        id:
          type: string
          description: The ID of the rule
          nullable: true
        parameters:
          type: object
          additionalProperties:
            type: string
            description: The parameters related to the rule.
          description: The parameters related to the rule
        ruleKey:
          type: string
          description: The rule key of the rule
      additionalProperties: false
      description: The configuration of the rule
      nullable: true
    PageBeanProject:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Project'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    IssueTypeWorkflowMapping:
      type: object
      properties:
        issueType:
          type: string
          description: The ID of the issue type. Not required if updating the issue
            type-workflow mapping
        updateDraftIfNeeded:
          type: boolean
          description: Set to true to create or update the draft of a workflow scheme
            and update the mapping in the draft, when the workflow scheme cannot be
            edited. Defaults to `false`. Only applicable when updating the workflow-issue
            types mapping
        workflow:
          type: string
          description: The name of the workflow
      additionalProperties: false
      description: Details about the mapping between an issue type and a workflow
    IssueTypeSchemePayload:
      type: object
      properties:
        defaultIssueTypeId:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        issueTypeIds:
          type: array
          description: The issue type IDs for the issue type scheme
          example: pcri:issueType:id:10001
          items:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        name:
          type: string
          description: The name of the issue type scheme
        description:
          type: string
          description: The description of the issue type scheme
          nullable: true
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for creating issue type schemes
    UserBean:
      type: object
      properties:
        accountId:
          maxLength: 128
          type: string
          description: The account ID of the user, which uniquely identifies the user
            across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        avatarUrls:
          description: The avatars of the user
          allOf:
          - $ref: '#/components/schemas/UserBeanAvatarUrls'
        displayName:
          type: string
          description: The display name of the user. Depending on the user’s privacy
            setting, this may return an alternative value
        name:
          type: string
          description: "This property is deprecated in favor of `accountId` because\
            \ of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)\
            \ for details.  \nThe username of the user"
        active:
          type: boolean
          description: Whether the user is active
        self:
          type: string
          description: The URL of the user
          format: uri
        key:
          type: string
          description: "This property is deprecated in favor of `accountId` because\
            \ of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)\
            \ for details.  \nThe key of the user"
      additionalProperties: false
    WorkflowsWithTransitionRulesDetails:
      required:
      - workflows
      type: object
      properties:
        workflows:
          type: array
          description: The list of workflows with transition rules to delete
          items:
            $ref: '#/components/schemas/WorkflowTransitionRulesDetails'
      additionalProperties: false
      description: Details of workflows and their transition rules to delete
    ProjectDataPolicy:
      type: object
      properties:
        anyContentBlocked:
          type: boolean
          description: Whether the project contains any content inaccessible to the
            requesting application
          readOnly: true
      additionalProperties: false
      description: Details about data policy
    AssociationContextObject:
      required:
      - type
      type: object
      properties:
        identifier:
          type: object
        type:
          type: string
      additionalProperties: false
      description: Field association for example PROJECT\_ID
      writeOnly: true
      discriminator:
        propertyName: type
    SharePermission:
      required:
      - type
      type: object
      properties:
        role:
          description: "The project role that the filter is shared with.  \nFor a\
            \ request, specify the `id` for the role. You must also specify the `project`\
            \ object and `id` for the project that the role is in"
          allOf:
          - $ref: '#/components/schemas/ProjectRole'
        project:
          description: "The project that the filter is shared with. This is similar\
            \ to the project object returned by [Get project](#api-rest-api-3-project-projectIdOrKey-get)\
            \ but it contains a subset of the properties, which are: `self`, `id`,\
            \ `key`, `assigneeType`, `name`, `roles`, `avatarUrls`, `projectType`,\
            \ `simplified`.  \nFor a request, specify the `id` for the project"
          allOf:
          - $ref: '#/components/schemas/Project'
        id:
          type: integer
          description: The unique identifier of the share permission
          format: int64
          readOnly: true
        type:
          type: string
          description: |-
            The type of share permission:

             *  `user` Shared with a user.
             *  `group` Shared with a group. If set in a request, then specify `sharePermission.group` as well.
             *  `project` Shared with a project. If set in a request, then specify `sharePermission.project` as well.
             *  `projectRole` Share with a project role in a project. This value is not returned in responses. It is used in requests, where it needs to be specify with `projectId` and `projectRoleId`.
             *  `global` Shared globally. If set in a request, no other `sharePermission` properties need to be specified.
             *  `loggedin` Shared with all logged-in users. Note: This value is set in a request by specifying `authenticated` as the `type`.
             *  `project-unknown` Shared with a project that the user does not have access to. Cannot be set in a request
          enum:
          - user
          - group
          - project
          - projectRole
          - global
          - loggedin
          - authenticated
          - project-unknown
        user:
          description: The user account ID that the filter is shared with. For a request,
            specify the `accountId` property for the user
          allOf:
          - $ref: '#/components/schemas/UserBean'
        group:
          description: The group that the filter is shared with. For a request, specify
            the `groupId` or `name` property for the group. As a group's name can
            change, use of `groupId` is recommended
          allOf:
          - $ref: '#/components/schemas/GroupName'
      additionalProperties: false
      description: Details of a share permission for the filter
    PageBeanScreenWithTab:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/ScreenWithTab'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    FoundUsers:
      type: object
      properties:
        total:
          type: integer
          description: The total number of users found in the search
          format: int32
        header:
          type: string
          description: Header text indicating the number of users in the response
            and the total number of users found in the search
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserPickerUser'
      additionalProperties: false
      description: The list of users found in a search, including header text (Showing
        X of Y matching users) and total of matched users
    UserNavPropertyJsonBean:
      type: object
      properties:
        value:
          type: string
        key:
          type: string
      additionalProperties: false
    BulkProjectPermissionGrants:
      required:
      - issues
      - permission
      - projects
      type: object
      properties:
        projects:
          uniqueItems: true
          type: array
          description: IDs of the projects the user has the permission for
          items:
            type: integer
            format: int64
        permission:
          type: string
          description: A project permission,
        issues:
          uniqueItems: true
          type: array
          description: IDs of the issues the user has the permission for
          items:
            type: integer
            format: int64
      additionalProperties: false
      description: List of project permissions and the projects and issues those permissions
        grant access to
    GetPlanResponseForPage:
      required:
      - id
      - name
      - scenarioId
      - status
      type: object
      properties:
        issueSources:
          uniqueItems: true
          type: array
          description: The issue sources included in the plan
          items:
            $ref: '#/components/schemas/GetIssueSourceResponse'
        name:
          type: string
          description: The plan name
        id:
          type: string
          description: The plan ID
        scenarioId:
          type: string
          description: Default scenario ID
        status:
          type: string
          description: The plan status. This is "Active", "Trashed" or "Archived"
          enum:
          - Active
          - Trashed
          - Archived
      additionalProperties: false
    PermissionDetails:
      required:
      - editPermissions
      - sharePermissions
      type: object
      properties:
        editPermissions:
          type: array
          description: The edit permissions for the shareable entities
          items:
            $ref: '#/components/schemas/SharePermission'
        sharePermissions:
          type: array
          description: The share permissions for the shareable entities
          items:
            $ref: '#/components/schemas/SharePermission'
      additionalProperties: false
      description: Details for permissions of shareable entities
    GroupLabel:
      type: object
      properties:
        text:
          type: string
          description: The group label name
        title:
          type: string
          description: The title of the group label
        type:
          type: string
          description: The type of the group label
          enum:
          - ADMIN
          - SINGLE
          - MULTIPLE
      additionalProperties: false
      description: A group label
      xml:
        name: grouplabel
    JqlQueryField:
      required:
      - name
      type: object
      properties:
        encodedName:
          type: string
          description: The encoded name of the field, which can be used directly in
            a JQL query
        name:
          type: string
          description: The name of the field
        property:
          type: array
          description: When the field refers to a value in an entity property, details
            of the entity property value
          items:
            $ref: '#/components/schemas/JqlQueryFieldEntityProperty'
      additionalProperties: false
      description: A field used in a JQL query. See [Advanced searching - fields reference](https://confluence.atlassian.com/x/dAiiLQ)
        for more information about fields in JQL queries
    GetSchedulingResponse:
      required:
      - dependencies
      - endDate
      - estimation
      - inferredDates
      - startDate
      type: object
      properties:
        estimation:
          type: string
          description: The estimation unit for the plan. This is "StoryPoints", "Days"
            or "Hours"
          enum:
          - StoryPoints
          - Days
          - Hours
        inferredDates:
          type: string
          description: The inferred dates for the plan. This is "None", "SprintDates"
            or "ReleaseDates"
          enum:
          - None
          - SprintDates
          - ReleaseDates
        endDate:
          description: The end date field for the plan
          allOf:
          - $ref: '#/components/schemas/GetDateFieldResponse'
        startDate:
          description: The start date field for the plan
          allOf:
          - $ref: '#/components/schemas/GetDateFieldResponse'
        dependencies:
          type: string
          description: The dependencies for the plan. This is "Sequential" or "Concurrent"
          enum:
          - Sequential
          - Concurrent
      additionalProperties: false
    BoardsPayload:
      type: object
      properties:
        boards:
          type: array
          description: The boards to be associated with the project
          items:
            $ref: '#/components/schemas/BoardPayload'
      additionalProperties: false
      nullable: true
    GetCrossProjectReleaseResponse:
      type: object
      properties:
        releaseIds:
          uniqueItems: true
          type: array
          description: The IDs of the releases included in the cross-project release
          items:
            type: integer
            format: int64
        name:
          type: string
          description: The cross-project release name
      additionalProperties: false
    WorkflowProjectIssueTypeUsageDTO:
      type: object
      properties:
        projectId:
          type: string
          description: The ID of the project
        workflowId:
          type: string
          description: The ID of the workflow
        issueTypes:
          $ref: '#/components/schemas/WorkflowProjectIssueTypeUsagePage'
      additionalProperties: false
      description: Issue types associated with the workflow for a project
    IssuePickerSuggestionsIssueType:
      type: object
      properties:
        msg:
          type: string
          description: If no issue suggestions are found, returns a message indicating
            no suggestions were found,
          readOnly: true
        sub:
          type: string
          description: If issue suggestions are found, returns a message indicating
            the number of issues suggestions found and returned
          readOnly: true
        id:
          type: string
          description: The ID of the type of issues suggested for use in auto-completion
          readOnly: true
        label:
          type: string
          description: The label of the type of issues suggested for use in auto-completion
          readOnly: true
        issues:
          type: array
          description: A list of issues suggested for use in auto-completion
          readOnly: true
          items:
            $ref: '#/components/schemas/SuggestedIssue'
      additionalProperties: false
      description: A type of issue suggested for use in auto-completion
    SecurityLevelMember:
      required:
      - holder
      - id
      - issueSecurityLevelId
      - issueSecuritySchemeId
      type: object
      properties:
        holder:
          description: The user or group being granted the permission. It consists
            of a `type` and a type-dependent `parameter`. See [Holder object](../api-group-permission-schemes/#holder-object)
            in *Get all permission schemes* for more information.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/PermissionHolder'
        id:
          type: string
          description: The ID of the issue security level member.
          readOnly: true
        issueSecurityLevelId:
          type: string
          description: The ID of the issue security level.
          readOnly: true
        issueSecuritySchemeId:
          type: string
          description: The ID of the issue security scheme.
          readOnly: true
        managed:
          type: boolean
          writeOnly: true
      additionalProperties: true
      description: Issue security level member
    JiraExpressionForAnalysis:
      required:
      - expressions
      type: object
      properties:
        contextVariables:
          type: object
          additionalProperties:
            type: string
            description: Context variables and their types. The type checker assumes
              that <a href="https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#context-variables">common
              context variables</a>, such as <code>issue</code> or <code>project</code>,
              are available in context and sets their type. Use this property to override
              the default types or provide details of new variables.
          description: Context variables and their types. The type checker assumes
            that [common context variables](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#context-variables),
            such as `issue` or `project`, are available in context and sets their
            type. Use this property to override the default types or provide details
            of new variables
        expressions:
          type: array
          description: The list of Jira expressions to analyse
          example: issues.map(issue => issue.properties['property_key'])
          items:
            type: string
            description: The list of Jira expressions to analyse.
            example: issues.map(issue => issue.properties['property_key'])
      additionalProperties: false
      description: Details of Jira expressions for analysis
    PageBeanSecuritySchemeWithProjects:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/SecuritySchemeWithProjects'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    SuggestedMappingsRequestBean:
      type: object
      properties:
        priorities:
          description: The priority changes in the scheme
          allOf:
          - $ref: '#/components/schemas/SuggestedMappingsForPrioritiesRequestBean'
        projects:
          description: The project changes in the scheme
          allOf:
          - $ref: '#/components/schemas/SuggestedMappingsForProjectsRequestBean'
        maxResults:
          type: integer
          description: The maximum number of results that could be on the page
          format: int32
          writeOnly: true
        schemeId:
          type: integer
          description: The id of the priority scheme
          format: int64
          writeOnly: true
        startAt:
          type: integer
          description: The index of the first item returned on the page
          format: int64
          writeOnly: true
      additionalProperties: false
      description: Details of changes to a priority scheme that require suggested
        priority mappings
    MultipartFile:
      type: object
      properties:
        size:
          type: integer
          format: int64
        resource:
          $ref: '#/components/schemas/Resource'
        bytes:
          type: array
          items:
            type: string
            format: byte
        name:
          type: string
        inputStream:
          type: object
        contentType:
          type: string
        originalFilename:
          type: string
        empty:
          type: boolean
      additionalProperties: false
    JiraComponentField:
      required:
      - componentId
      type: object
      properties:
        componentId:
          type: integer
          format: int64
      additionalProperties: false
    JiraExpressionEvaluateContextBean:
      type: object
      properties:
        issue:
          description: The issue that is available under the `issue` variable when
            evaluating the expression
          allOf:
          - $ref: '#/components/schemas/IdOrKeyBean'
        custom:
          type: array
          description: |-
            Custom context variables and their types. These variable types are available for use in a custom context:

             *  `user`: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user) specified as an Atlassian account ID.
             *  `issue`: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue) specified by ID or key. All the fields of the issue object are available in the Jira expression.
             *  `json`: A JSON object containing custom content.
             *  `list`: A JSON list of `user`, `issue`, or `json` variable types
          items:
            $ref: '#/components/schemas/CustomContextVariable'
        sprint:
          type: integer
          description: The ID of the sprint that is available under the `sprint` variable
            when evaluating the expression
          format: int64
        project:
          description: The project that is available under the `project` variable
            when evaluating the expression
          allOf:
          - $ref: '#/components/schemas/IdOrKeyBean'
        serviceDesk:
          type: integer
          description: The ID of the service desk that is available under the `serviceDesk`
            variable when evaluating the expression
          format: int64
        issues:
          description: The collection of issues that is available under the `issues`
            variable when evaluating the expression
          allOf:
          - $ref: '#/components/schemas/JexpEvaluateCtxIssues'
        board:
          type: integer
          description: The ID of the board that is available under the `board` variable
            when evaluating the expression
          format: int64
        customerRequest:
          type: integer
          description: The ID of the customer request that is available under the
            `customerRequest` variable when evaluating the expression. This is the
            same as the ID of the underlying Jira issue, but the customer request
            context variable will have a different type
          format: int64
      additionalProperties: false
    WorkflowTransitionRulesDetails:
      required:
      - workflowId
      - workflowRuleIds
      type: object
      properties:
        workflowRuleIds:
          uniqueItems: true
          type: array
          description: The list of connect workflow rule IDs
          items:
            type: string
            description: The list of connect workflow rule IDs.
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
      additionalProperties: false
      description: Details about a workflow configuration update request
    WorkflowCreateRequest:
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/WorkflowScope'
        statuses:
          maximum: 1000
          type: array
          description: The statuses to associate with the workflows
          items:
            $ref: '#/components/schemas/WorkflowStatusUpdate'
        workflows:
          maximum: 20
          type: array
          description: The details of the workflows to create
          items:
            $ref: '#/components/schemas/WorkflowCreate'
      additionalProperties: false
      description: The create workflows payload
    BulkTransitionGetAvailableTransitions:
      type: object
      properties:
        startingAfter:
          type: string
          description: The start cursor for use in pagination
          readOnly: true
        endingBefore:
          type: string
          description: The end cursor for use in pagination
          readOnly: true
        availableTransitions:
          type: array
          description: List of available transitions for bulk transition operation
            for requested issues grouped by workflow
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueBulkTransitionForWorkflow'
      additionalProperties: false
      description: Bulk Transition Get Available Transitions Response
    IssueLink:
      required:
      - inwardIssue
      - outwardIssue
      - type
      type: object
      properties:
        outwardIssue:
          description: Provides details about the linked issue. If presenting this
            link in a user interface, use the `outward` field of the issue link type
            to label the link
          allOf:
          - $ref: '#/components/schemas/LinkedIssue'
        self:
          type: string
          description: The URL of the issue link
          format: uri
          readOnly: true
        id:
          type: string
          description: The ID of the issue link
          readOnly: true
        inwardIssue:
          description: Provides details about the linked issue. If presenting this
            link in a user interface, use the `inward` field of the issue link type
            to label the link
          allOf:
          - $ref: '#/components/schemas/LinkedIssue'
        type:
          description: The type of link between the issues
          allOf:
          - $ref: '#/components/schemas/IssueLinkType'
      additionalProperties: false
      description: Details of a link between issues
      xml:
        name: issueLinks
    SimpleErrorCollection:
      type: object
      properties:
        errorMessages:
          type: array
          description: The list of error messages produced by this operation. For
            example, "input parameter 'key' must be provided"
          items:
            type: string
        errors:
          type: object
          additionalProperties:
            type: string
          description: 'The list of errors by parameter returned by the operation.
            For example,"projectKey": "Project keys must start with an uppercase letter,
            followed by one or more uppercase alphanumeric characters."'
        httpStatusCode:
          type: integer
          format: int32
      additionalProperties: false
    JqlQueriesToSanitize:
      required:
      - queries
      type: object
      properties:
        queries:
          type: array
          description: The list of JQL queries to sanitize. Must contain unique values.
            Maximum of 20 queries
          items:
            $ref: '#/components/schemas/JqlQueryToSanitize'
      additionalProperties: false
      description: The list of JQL queries to sanitize for the given account IDs
      writeOnly: true
    AvailableWorkflowSystemRule:
      required:
      - description
      - incompatibleRuleKeys
      - isAvailableForInitialTransition
      - isVisible
      - name
      - ruleKey
      - ruleType
      type: object
      properties:
        isAvailableForInitialTransition:
          type: boolean
          description: Whether the rule can be added added to an initial transition
        ruleType:
          type: string
          description: The rule type
          enum:
          - Condition
          - Validator
          - Function
          - Screen
        name:
          type: string
          description: The rule name
        description:
          type: string
          description: The rule description
        isVisible:
          type: boolean
          description: Whether the rule is visible
        ruleKey:
          type: string
          description: The rule key
        incompatibleRuleKeys:
          type: array
          description: List of rules that conflict with this one
          items:
            type: string
            description: List of rules that conflict with this one.
      additionalProperties: false
      description: The Atlassian provided system rules available
    FieldIdIdentifierAllOf2:
      type: object
      properties:
        identifier:
          type: string
    FoundGroups:
      type: object
      properties:
        total:
          type: integer
          description: The total number of groups found in the search
          format: int32
        groups:
          type: array
          items:
            $ref: '#/components/schemas/FoundGroup'
        header:
          type: string
          description: Header text indicating the number of groups in the response
            and the total number of groups found in the search
      additionalProperties: false
      description: The list of groups found in a search, including header text (Showing
        X of Y matching groups) and total of matched groups
      xml:
        name: groupsuggestions
    JiraColorField:
      required:
      - color
      - fieldId
      type: object
      properties:
        color:
          $ref: '#/components/schemas/JiraColorInput'
        fieldId:
          type: string
      additionalProperties: false
    PageBeanIssueTypeScreenSchemesProjects:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeScreenSchemesProjects'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    Project:
      type: object
      properties:
        components:
          type: array
          description: List of the components contained in the project
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectComponent'
        roles:
          type: object
          additionalProperties:
            type: string
            format: uri
            readOnly: true
          description: The name and self URL for each role defined in the project.
            For more information, see [Create project role](#api-rest-api-3-role-post)
          readOnly: true
        description:
          type: string
          description: A brief description of the project
          readOnly: true
        isPrivate:
          type: boolean
          description: Whether the project is private from the user's perspective.
            This means the user can't see the project or any associated issues
          readOnly: true
        uuid:
          type: string
          description: Unique ID for next-gen projects
          format: uuid
          readOnly: true
        deletedBy:
          description: The user who marked the project as deleted
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        issueTypes:
          type: array
          description: List of the issue types available in the project
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeDetails'
        archived:
          type: boolean
          description: Whether the project is archived
          readOnly: true
        permissions:
          description: User permissions on the project
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ProjectPermissions'
        projectCategory:
          description: The category the project belongs to
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ProjectCategory'
        assigneeType:
          type: string
          description: The default assignee when creating issues for this project
          readOnly: true
          enum:
          - PROJECT_LEAD
          - UNASSIGNED
        id:
          type: string
          description: The ID of the project
        archivedBy:
          description: The user who archived the project
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        projectTypeKey:
          type: string
          description: The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes)
            of the project
          readOnly: true
          enum:
          - software
          - service_desk
          - business
        email:
          type: string
          description: An email address associated with the project
        key:
          type: string
          description: The key of the project
          readOnly: true
        archivedDate:
          type: string
          description: The date when the project was archived
          format: date-time
          readOnly: true
        retentionTillDate:
          type: string
          description: The date when the project is deleted permanently
          format: date-time
          readOnly: true
        avatarUrls:
          description: The URLs of the project's avatars
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/AvatarUrlsBean'
        landingPageInfo:
          description: The project landing page info
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ProjectLandingPageInfo'
        favourite:
          type: boolean
          description: Whether the project is selected as a favorite
        lead:
          description: The username of the project lead
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        url:
          type: string
          description: A link to information about this project, such as project documentation
          readOnly: true
        insight:
          description: Insights about the project
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ProjectInsight'
        expand:
          type: string
          description: Expand options that include additional project details in the
            response
          readOnly: true
          xml:
            attribute: true
        deleted:
          type: boolean
          description: Whether the project is marked as deleted
          readOnly: true
        simplified:
          type: boolean
          description: Whether the project is simplified
          readOnly: true
        deletedDate:
          type: string
          description: The date when the project was marked as deleted
          format: date-time
          readOnly: true
        versions:
          type: array
          description: The versions defined in the project. For more information,
            see [Create version](#api-rest-api-3-version-post)
          readOnly: true
          items:
            $ref: '#/components/schemas/Version'
        issueTypeHierarchy:
          description: The issue type hierarchy for the project
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Hierarchy'
        name:
          type: string
          description: The name of the project
          readOnly: true
        self:
          type: string
          description: The URL of the project details
          format: uri
          readOnly: true
        style:
          type: string
          description: The type of the project
          readOnly: true
          enum:
          - classic
          - next-gen
        properties:
          type: object
          additionalProperties:
            readOnly: true
          description: Map of project properties
          readOnly: true
      additionalProperties: false
      description: Details about a project
      xml:
        name: project
    ProjectAvatars:
      type: object
      properties:
        system:
          type: array
          description: List of avatars included with Jira. These avatars cannot be
            deleted
          readOnly: true
          items:
            $ref: '#/components/schemas/Avatar'
        custom:
          type: array
          description: List of avatars added to Jira. These avatars may be deleted
          readOnly: true
          items:
            $ref: '#/components/schemas/Avatar'
      additionalProperties: false
      description: List of project avatars
    LinkIssueRequestJsonBean:
      required:
      - inwardIssue
      - outwardIssue
      - type
      type: object
      properties:
        outwardIssue:
          $ref: '#/components/schemas/LinkedIssue'
        comment:
          $ref: '#/components/schemas/Comment'
        inwardIssue:
          $ref: '#/components/schemas/LinkedIssue'
        type:
          $ref: '#/components/schemas/IssueLinkType'
      additionalProperties: false
    RolePayload:
      type: object
      properties:
        onConflict:
          type: string
          description: The strategy to use when there is a conflict with an existing
            project role. FAIL - Fail execution, this always needs to be unique; USE
            - Use the existing entity and ignore new entity parameters
          enum:
          - FAIL
          - USE
          - NEW
          default: USE
        name:
          type: string
          description: The name of the role
        description:
          type: string
          description: The description of the role
        defaultActors:
          type: array
          description: The default actors for the role. By adding default actors,
            the role will be added to any future projects created
          example: '[pcri:user:id:1234]'
          items:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        type:
          type: string
          description: The type of the role. Only used by project-scoped project
          example: EDITABLE
          enum:
          - HIDDEN
          - VIEWABLE
          - EDITABLE
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload used to create a project role. It is optional for CMP
        projects, as a default role actor will be provided. TMP will add new role
        actors to the table
    PageBeanUser:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/User'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    AddSecuritySchemeLevelsRequestBean:
      type: object
      properties:
        levels:
          type: array
          description: The list of scheme levels which should be added to the security
            scheme
          writeOnly: true
          items:
            $ref: '#/components/schemas/SecuritySchemeLevelBean'
      additionalProperties: false
    SetDefaultLevelsRequest:
      required:
      - defaultValues
      type: object
      properties:
        defaultValues:
          maxLength: 1000
          type: array
          description: List of objects with issue security scheme ID and new default
            level ID.
          writeOnly: true
          items:
            $ref: '#/components/schemas/DefaultLevelValue'
      additionalProperties: true
      description: Details of new default levels
    Group:
      type: object
      properties:
        expand:
          type: string
          description: Expand options that include additional group details in the
            response
          readOnly: true
          xml:
            attribute: true
        groupId:
          type: string
          description: The ID of the group, which uniquely identifies the group across
            all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*
          nullable: true
        name:
          type: string
          description: The name of group
        self:
          type: string
          description: The URL for these group details
          format: uri
          readOnly: true
        users:
          description: A paginated list of the users that are members of the group.
            A maximum of 50 users is returned in the list, to access additional users
            append `[start-index:end-index]` to the expand request. For example, to
            access the next 50 users, use`?expand=users[51:100]`
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/PagedListUserDetailsApplicationUser'
      additionalProperties: false
    ServiceRegistryTier:
      type: object
      properties:
        level:
          type: integer
          description: tier level
        nameKey:
          type: string
          description: name key of the tier
          example: service-registry.tier1.name
        name:
          type: string
          description: tier name
          nullable: true
        description:
          type: string
          description: tier description
          nullable: true
        id:
          type: string
          description: tier ID
          format: uuid
    BoardColumnPayload:
      type: object
      properties:
        maximumIssueConstraint:
          type: integer
          description: The maximum issue constraint for the column
          format: int64
        name:
          type: string
          description: The name of the column
          example: TODO
        statusIds:
          type: array
          description: The status IDs for the column
          example: pcri:status:ref:done
          items:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        minimumIssueConstraint:
          type: integer
          description: The minimum issue constraint for the column
          format: int64
      additionalProperties: false
      description: The payload for creating a board column
    MandatoryFieldValueForADF:
      required:
      - type
      - value
      type: object
      properties:
        retain:
          type: boolean
          description: If `true`, will try to retain original non-null issue field
            values on move
          nullable: true
          writeOnly: true
          default: true
        type:
          type: string
          description: Will treat as `MandatoryFieldValueForADF` if type is `adf`
          writeOnly: true
          enum:
          - adf
          - raw
          default: raw
        value:
          type: object
          description: 'Value for each field. Accepts Atlassian Document Format (ADF)
            for rich text fields like `description`, `environments`. For ADF format
            details, refer to: [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure)'
          writeOnly: true
      description: An object notation input
    IssueTypeSchemeDetails:
      required:
      - issueTypeIds
      - name
      type: object
      properties:
        defaultIssueTypeId:
          type: string
          description: The ID of the default issue type of the issue type scheme.
            This ID must be included in `issueTypeIds`
          writeOnly: true
        issueTypeIds:
          type: array
          description: The list of issue types IDs of the issue type scheme. At least
            one standard issue type ID is required
          writeOnly: true
          items:
            type: string
            writeOnly: true
        name:
          type: string
          description: The name of the issue type scheme. The name must be unique.
            The maximum length is 255 characters
          writeOnly: true
        description:
          type: string
          description: The description of the issue type scheme. The maximum length
            is 4000 characters
          writeOnly: true
      additionalProperties: false
      description: Details of an issue type scheme and its associated issue types
    ChangeDetails:
      type: object
      properties:
        field:
          type: string
          description: The name of the field changed
          readOnly: true
        from:
          type: string
          description: The details of the original value
          readOnly: true
        toString:
          type: string
          description: The details of the new value as a string
          readOnly: true
        fromString:
          type: string
          description: The details of the original value as a string
          readOnly: true
        to:
          type: string
          description: The details of the new value
          readOnly: true
        fieldtype:
          type: string
          description: The type of the field changed
          readOnly: true
        fieldId:
          type: string
          description: The ID of the field changed
          readOnly: true
      additionalProperties: false
      description: A change item
    FieldLayoutPayload:
      type: object
      properties:
        configuration:
          type: array
          description: The field layout configuration. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-field-configurations/\#api-rest-api-3-fieldconfiguration-post
          items:
            $ref: '#/components/schemas/FieldLayoutConfiguration'
        name:
          type: string
          description: The name of the field layout
          example: My Field Layout
        description:
          type: string
          description: The description of the field layout
          example: This is a field layout
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: Defines the payload for the field layouts. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-field-configurations/\#api-group-issue-field-configurations"
        + fieldlayout is what users would see as "Field Configuration" in Jira's UI
        - https://support.atlassian.com/jira-cloud-administration/docs/manage-issue-field-configurations/
      nullable: true
    ConditionGroupUpdate:
      required:
      - operation
      type: object
      properties:
        conditionGroups:
          type: array
          description: The nested conditions of the condition group
          items:
            $ref: '#/components/schemas/ConditionGroupUpdate'
        conditions:
          type: array
          description: The rules for this condition
          items:
            $ref: '#/components/schemas/WorkflowRuleConfiguration'
        operation:
          type: string
          description: Determines how the conditions in the group are evaluated. Accepts
            either `ANY` or `ALL`. If `ANY` is used, at least one condition in the
            group must be true for the group to evaluate to true. If `ALL` is used,
            all conditions in the group must be true for the group to evaluate to
            true
          enum:
          - ANY
          - ALL
      additionalProperties: false
      description: The conditions group associated with the transition
      nullable: true
    JqlQueryOrderByClauseElement:
      required:
      - field
      type: object
      properties:
        field:
          $ref: '#/components/schemas/JqlQueryField'
        direction:
          type: string
          description: The direction in which to order the results
          enum:
          - asc
          - desc
      additionalProperties: false
      description: An element of the order-by JQL clause
    WorkflowSchemePayload:
      type: object
      properties:
        defaultWorkflow:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        name:
          type: string
          description: The name of the workflow scheme
        description:
          type: string
          description: The description of the workflow scheme
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        explicitMappings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
          description: Association between issuetypes and workflows
      additionalProperties: false
      description: The payload for creating a workflow scheme. See https://www.atlassian.com/software/jira/guides/workflows/overview\#what-is-a-jira-workflow-scheme
    BulkCustomFieldOptionUpdateRequest:
      type: object
      properties:
        options:
          type: array
          description: Details of the options to update
          items:
            $ref: '#/components/schemas/CustomFieldOptionUpdate'
      additionalProperties: false
      description: Details of the options to update for a custom field
      writeOnly: true
    ConfigurationsListParameters:
      required:
      - fieldIdsOrKeys
      type: object
      properties:
        fieldIdsOrKeys:
          minItems: 1
          type: array
          description: List of IDs or keys of the custom fields. It can be a mix of
            IDs and keys in the same query
          items:
            type: string
      additionalProperties: false
      description: List of custom fields identifiers which will be used to filter
        configurations
      writeOnly: true
    PermissionGrantDTO:
      type: object
      properties:
        permissionKeys:
          uniqueItems: true
          type: array
          items:
            type: string
        groupCustomFields:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        projectRoles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        specialGrants:
          uniqueItems: true
          type: array
          items:
            type: string
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        userCustomFields:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        users:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        applicationAccess:
          uniqueItems: true
          type: array
          items:
            type: string
      additionalProperties: false
      description: List of permission grants
    JiraStatus:
      type: object
      properties:
        workflowUsages:
          uniqueItems: true
          type: array
          description: |-
            Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

            The workflows that use this status. Only available if the `workflowUsages` expand is requested
          nullable: true
          items:
            $ref: '#/components/schemas/WorkflowUsages'
        scope:
          $ref: '#/components/schemas/StatusScope'
        name:
          type: string
          description: The name of the status
        description:
          type: string
          description: The description of the status
        id:
          type: string
          description: The ID of the status
        usages:
          uniqueItems: true
          type: array
          description: |-
            Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

            Projects and issue types where the status is used. Only available if the `usages` expand is requested
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectIssueTypes'
        statusCategory:
          type: string
          description: The category of the status
          enum:
          - TODO
          - IN_PROGRESS
          - DONE
      additionalProperties: false
      description: Details of a status
    StatusWorkflowUsageWorkflow:
      type: object
      properties:
        id:
          type: string
          description: The workflow ID
      additionalProperties: false
      description: The worflow
    PageBeanFieldConfigurationIssueTypeItem:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/FieldConfigurationIssueTypeItem'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    PageBeanCustomFieldContextProjectMapping:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/CustomFieldContextProjectMapping'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    IssueTypeScreenSchemeItem:
      required:
      - issueTypeId
      - issueTypeScreenSchemeId
      - screenSchemeId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type or *default*. Only issue types used
            in classic projects are accepted. When creating an issue screen scheme,
            an entry for *default* must be provided and defines the mapping for all
            issue types without a screen scheme. Otherwise, a *default* entry can't
            be provided
        issueTypeScreenSchemeId:
          type: string
          description: The ID of the issue type screen scheme
        screenSchemeId:
          type: string
          description: The ID of the screen scheme
      additionalProperties: false
      description: The screen scheme for an issue type
    JiraMultipleSelectUserPickerField:
      required:
      - fieldId
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/JiraUserField'
        fieldId:
          type: string
      additionalProperties: false
    CustomFieldContextDefaultValueURL:
      required:
      - contextId
      - type
      - url
      type: object
      properties:
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
        url:
          type: string
          description: The default URL
      description: The default value for a URL custom field
    JqlFunctionPrecomputationBean:
      type: object
      properties:
        field:
          type: string
          description: The field the function was executed against
          readOnly: true
        functionName:
          type: string
          description: The name of the function
          readOnly: true
        created:
          type: string
          description: The timestamp of the precomputation creation
          format: date-time
          readOnly: true
        arguments:
          type: array
          description: The list of arguments function was invoked with
          readOnly: true
          items:
            type: string
            readOnly: true
        id:
          type: string
          description: The id of the precomputation
          readOnly: true
        used:
          type: string
          description: The timestamp of the precomputation last usage
          format: date-time
          readOnly: true
        error:
          type: string
          description: The error message to be displayed to the user
          readOnly: true
        functionKey:
          type: string
          description: The function key
          readOnly: true
        updated:
          type: string
          description: The timestamp of the precomputation last update
          format: date-time
          readOnly: true
        value:
          type: string
          description: The JQL fragment stored as the precomputation
          readOnly: true
        operator:
          type: string
          description: The operator in context of which function was executed
          readOnly: true
      additionalProperties: false
      description: Jql function precomputation
    LegacyJackson1ListAttachment:
      type: array
      items:
        $ref: '#/components/schemas/Attachment'
    JqlQueryClause:
      type: object
      additionalProperties: false
      description: A JQL query clause
      anyOf:
      - $ref: '#/components/schemas/CompoundClause'
      - $ref: '#/components/schemas/FieldValueClause'
      - $ref: '#/components/schemas/FieldWasClause'
      - $ref: '#/components/schemas/FieldChangedClause'
    IssueTypeDetails:
      type: object
      properties:
        avatarId:
          type: integer
          description: The ID of the issue type's avatar
          format: int64
          readOnly: true
        hierarchyLevel:
          type: integer
          description: Hierarchy level of the issue type
          format: int32
          readOnly: true
        scope:
          description: Details of the next-gen projects the issue type is available
            in
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the issue type
          readOnly: true
        description:
          type: string
          description: The description of the issue type
          readOnly: true
        self:
          type: string
          description: The URL of these issue type details
          readOnly: true
        entityId:
          type: string
          description: Unique ID for next-gen projects
          format: uuid
          readOnly: true
        iconUrl:
          type: string
          description: The URL of the issue type's avatar
          readOnly: true
        id:
          type: string
          description: The ID of the issue type
          readOnly: true
        subtask:
          type: boolean
          description: Whether this issue type is used to create subtasks
          readOnly: true
      additionalProperties: false
      description: Details about an issue type
    PaginatedResponseIssueTypeIssueCreateMetadata:
      type: object
      properties:
        total:
          type: integer
          format: int64
        maxResults:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/IssueTypeIssueCreateMetadata'
        startAt:
          type: integer
          format: int64
      additionalProperties: false
    ProjectPayload:
      type: object
      properties:
        issueSecuritySchemeId:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        notificationSchemeId:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        permissionSchemeId:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        issueTypeScreenSchemeId:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        fieldLayoutSchemeId:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        workflowSchemeId:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        issueTypeSchemeId:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        projectTypeKey:
          type: string
          description: The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes),
            which defines the application-specific feature set. If you don't specify
            the project template you have to specify the project type
          example: software
          enum:
          - software
          - business
          - service_desk
          - product_discovery
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for creating a project
    CreateCrossProjectReleaseRequest:
      required:
      - name
      type: object
      properties:
        releaseIds:
          uniqueItems: true
          type: array
          description: The IDs of the releases to include in the cross-project release
          items:
            type: integer
            format: int64
        name:
          type: string
          description: The cross-project release name
      additionalProperties: false
    JexpJqlIssues:
      type: object
      properties:
        maxResults:
          type: integer
          description: The maximum number of issues to return from the JQL query.
            Inspect `meta.issues.jql.maxResults` in the response to ensure the maximum
            value has not been exceeded
          format: int32
        query:
          type: string
          description: The JQL query
        startAt:
          type: integer
          description: The index of the first issue to return from the JQL query
          format: int64
        validation:
          type: string
          description: Determines how to validate the JQL query and treat the validation
            results
          enum:
          - strict
          - warn
          - none
          default: strict
      additionalProperties: false
      description: The JQL specifying the issues available in the evaluated Jira expression
        under the `issues` context variable. Not all issues returned by the JQL query
        are loaded, only those described by the `startAt` and `maxResults` properties.
        To determine whether it is necessary to iterate to ensure all the issues returned
        by the JQL query are evaluated, inspect `meta.issues.jql.count` in the response
    UiModificationContextDetails:
      type: object
      properties:
        isAvailable:
          type: boolean
          description: Whether a context is available. For example, when a project
            is deleted the context becomes unavailable
          readOnly: true
        issueTypeId:
          type: string
          description: The issue type ID of the context. Null is treated as a wildcard,
            meaning the UI modification will be applied to all issue types. Each UI
            modification context can have a maximum of one wildcard
        viewType:
          type: string
          description: The view type of the context. Only `GIC`(Global Issue Create),
            `IssueView` and `IssueTransition` are supported. Null is treated as a
            wildcard, meaning the UI modification will be applied to all view types.
            Each UI modification context can have a maximum of one wildcard
          enum:
          - GIC
          - IssueView
          - IssueTransition
        id:
          type: string
          description: The ID of the UI modification context
          readOnly: true
        projectId:
          type: string
          description: The project ID of the context. Null is treated as a wildcard,
            meaning the UI modification will be applied to all projects. Each UI modification
            context can have a maximum of one wildcard
      additionalProperties: false
      description: The details of a UI modification's context, which define where
        to activate the UI modification
      writeOnly: true
    Webhook:
      required:
      - events
      - id
      - jqlFilter
      - url
      type: object
      properties:
        jqlFilter:
          type: string
          description: The JQL filter that specifies which issues the webhook is sent
            for
        fieldIdsFilter:
          type: array
          description: A list of field IDs. When the issue changelog contains any
            of the fields, the webhook `jira:issue_updated` is sent. If this parameter
            is not present, the app is notified about all field updates
          items:
            type: string
            description: A list of field IDs. When the issue changelog contains any
              of the fields, the webhook <code>jira:issue_updated</code> is sent.
              If this parameter is not present, the app is notified about all field
              updates.
        id:
          type: integer
          description: The ID of the webhook
          format: int64
        issuePropertyKeysFilter:
          type: array
          description: A list of issue property keys. A change of those issue properties
            triggers the `issue_property_set` or `issue_property_deleted` webhooks.
            If this parameter is not present, the app is notified about all issue
            property updates
          items:
            type: string
            description: A list of issue property keys. A change of those issue properties
              triggers the <code>issue_property_set</code> or <code>issue_property_deleted</code>
              webhooks. If this parameter is not present, the app is notified about
              all issue property updates.
        events:
          type: array
          description: The Jira events that trigger the webhook
          items:
            type: string
            enum:
            - jira:issue_created
            - jira:issue_updated
            - jira:issue_deleted
            - comment_created
            - comment_updated
            - comment_deleted
            - issue_property_set
            - issue_property_deleted
        url:
          type: string
          description: The URL that specifies where the webhooks are sent
        expirationDate:
          type: integer
          description: The date after which the webhook is no longer sent. Use [Extend
            webhook life](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-webhooks/#api-rest-api-3-webhook-refresh-put)
            to extend the date
          format: int64
          readOnly: true
      additionalProperties: false
      description: A webhook
    IssueCreateMetadata:
      type: object
      properties:
        expand:
          type: string
          description: Expand options that include additional project details in the
            response
          readOnly: true
          xml:
            attribute: true
        projects:
          type: array
          description: List of projects and their issue creation metadata
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectIssueCreateMetadata'
      additionalProperties: false
      description: The wrapper for the issue creation metadata for a list of projects
    MoveFieldBean:
      type: object
      properties:
        after:
          type: string
          description: The ID of the screen tab field after which to place the moved
            screen tab field. Required if `position` isn't provided
          format: uri
        position:
          type: string
          description: The named position to which the screen tab field should be
            moved. Required if `after` isn't provided
          enum:
          - Earlier
          - Later
          - First
          - Last
      additionalProperties: false
    UserPermission:
      type: object
      properties:
        deprecatedKey:
          type: boolean
          description: Indicate whether the permission key is deprecated. Note that
            deprecated keys cannot be used in the `permissions parameter of Get my
            permissions. Deprecated keys are not returned by Get all permissions.`
        description:
          type: string
          description: The description of the permission.
        havePermission:
          type: boolean
          description: Whether the permission is available to the user in the queried
            context.
        id:
          type: string
          description: The ID of the permission. Either `id` or `key` must be specified.
            Use [Get all permissions](#api-rest-api-3-permissions-get) to get the
            list of permissions.
        key:
          type: string
          description: The key of the permission. Either `id` or `key` must be specified.
            Use [Get all permissions](#api-rest-api-3-permissions-get) to get the
            list of permissions.
        name:
          type: string
          description: The name of the permission.
        type:
          type: string
          description: The type of the permission.
          enum:
          - GLOBAL
          - PROJECT
      additionalProperties: true
      description: Details of a permission and its availability to a user
    GroupName:
      type: object
      properties:
        groupId:
          type: string
          description: The ID of the group, which uniquely identifies the group across
            all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*
          nullable: true
        name:
          type: string
          description: The name of group
        self:
          type: string
          description: The URL for these group details
          format: uri
          readOnly: true
      additionalProperties: false
      description: Details about a group
    StreamingResponseBody:
      type: object
      additionalProperties: false
    NotificationSchemeId:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of a notification scheme.
          readOnly: true
      additionalProperties: true
      description: The ID of a notification scheme
    IssueList:
      required:
      - issueIds
      type: object
      properties:
        issueIds:
          type: array
          description: The list of issue IDs
          items:
            type: string
      additionalProperties: false
      description: A list of issue IDs
    OrderOfCustomFieldOptions:
      required:
      - customFieldOptionIds
      type: object
      properties:
        after:
          type: string
          description: The ID of the custom field option or cascading option to place
            the moved options after. Required if `position` isn't provided
          writeOnly: true
        position:
          type: string
          description: The position the custom field options should be moved to. Required
            if `after` isn't provided
          writeOnly: true
          enum:
          - First
          - Last
        customFieldOptionIds:
          type: array
          description: A list of IDs of custom field options to move. The order of
            the custom field option IDs in the list is the order they are given after
            the move. The list must contain custom field options or cascading options,
            but not both
          writeOnly: true
          items:
            type: string
            writeOnly: true
      additionalProperties: false
      description: An ordered list of custom field option IDs and information on where
        to move them
    WorkflowUsages:
      type: object
      properties:
        workflowName:
          type: string
          description: Workflow name
        workflowId:
          type: string
          description: Workflow ID
      additionalProperties: false
      description: |-
        Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

        The workflows that use this status. Only available if the `workflowUsages` expand is requested
      nullable: true
    Dashboard:
      type: object
      properties:
        owner:
          description: The owner of the dashboard
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserBean'
        automaticRefreshMs:
          type: integer
          description: The automatic refresh interval for the dashboard in milliseconds
          format: int32
          readOnly: true
        description:
          type: string
        isWritable:
          type: boolean
          description: Whether the current user has permission to edit the dashboard
          readOnly: true
        view:
          type: string
          description: The URL of the dashboard
          readOnly: true
        editPermissions:
          type: array
          description: The details of any edit share permissions for the dashboard
          readOnly: true
          items:
            $ref: '#/components/schemas/SharePermission'
        popularity:
          type: integer
          description: The number of users who have this dashboard as a favorite
          format: int64
          readOnly: true
        name:
          type: string
          description: The name of the dashboard
          readOnly: true
        rank:
          type: integer
          description: The rank of this dashboard
          format: int32
          readOnly: true
        self:
          type: string
          description: The URL of these dashboard details
          format: uri
          readOnly: true
        systemDashboard:
          type: boolean
          description: Whether the current dashboard is system dashboard
          readOnly: true
        id:
          type: string
          description: The ID of the dashboard
          readOnly: true
        sharePermissions:
          type: array
          description: The details of any view share permissions for the dashboard
          readOnly: true
          items:
            $ref: '#/components/schemas/SharePermission'
        isFavourite:
          type: boolean
          description: Whether the dashboard is selected as a favorite by the user
          readOnly: true
      additionalProperties: false
      description: Details of a dashboard
    IssueTypeIdsToRemove:
      required:
      - issueTypeIds
      type: object
      properties:
        issueTypeIds:
          type: array
          description: The list of issue type IDs. Must contain unique values not
            longer than 255 characters and not be empty. Maximum of 100 IDs
          items:
            type: string
      additionalProperties: false
      description: The list of issue type IDs to be removed from the field configuration
        scheme
    SecuritySchemes:
      type: object
      properties:
        issueSecuritySchemes:
          type: array
          description: List of security schemes
          readOnly: true
          items:
            $ref: '#/components/schemas/SecurityScheme'
      additionalProperties: false
      description: List of security schemes
    LicenseMetric:
      type: object
      properties:
        value:
          type: string
          description: The calculated value of a licence metric linked to the key.
            An example licence metric is the approximate number of user accounts
        key:
          type: string
          description: The key of a specific license metric
      additionalProperties: false
      description: A metric that provides insight into the active licence details
    StatusCreateRequest:
      required:
      - scope
      - statuses
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/StatusScope'
        statuses:
          type: array
          description: Details of the statuses being created
          items:
            $ref: '#/components/schemas/StatusCreate'
      additionalProperties: false
      description: Details of the statuses being created and their scope
    UpdateNotificationSchemeDetails:
      type: object
      properties:
        description:
          maxLength: 4000
          type: string
          description: The description of the notification scheme.
          writeOnly: true
        name:
          maxLength: 255
          type: string
          description: The name of the notification scheme. Must be unique.
          writeOnly: true
      additionalProperties: true
      description: Details of a notification scheme
    CustomFieldContextDefaultValueForgeGroupField:
      required:
      - contextId
      - groupId
      - type
      type: object
      properties:
        groupId:
          type: string
          description: The ID of the the default group
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
      description: The default value for a Forge group custom field
    AutoCompleteSuggestions:
      type: object
      properties:
        results:
          type: array
          description: The list of suggested item
          items:
            $ref: '#/components/schemas/AutoCompleteSuggestion'
      additionalProperties: false
      description: The results from a JQL query
    IssueTypeToContextMapping:
      required:
      - contextId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type
        contextId:
          type: string
          description: The ID of the context
        isAnyIssueType:
          type: boolean
          description: Whether the context is mapped to any issue type
      additionalProperties: false
      description: Mapping of an issue type to a context
    Permissions:
      type: object
      properties:
        permissions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/UserPermission'
          description: List of permissions
          readOnly: true
      additionalProperties: false
      description: Details about permissions
    FieldConfigurationSchemeProjectAssociation:
      required:
      - projectId
      type: object
      properties:
        fieldConfigurationSchemeId:
          type: string
          description: The ID of the field configuration scheme. If the field configuration
            scheme ID is `null`, the operation assigns the default field configuration
            scheme
          writeOnly: true
        projectId:
          type: string
          description: The ID of the project
          writeOnly: true
      additionalProperties: false
      description: Associated field configuration scheme and project
    OldToNewSecurityLevelMappingsBean:
      required:
      - newLevelId
      - oldLevelId
      type: object
      properties:
        newLevelId:
          type: string
          description: The new issue security level ID. Providing null will clear
            the assigned old level from issues
          writeOnly: true
        oldLevelId:
          type: string
          description: The old issue security level ID. Providing null will remap
            all issues without any assigned levels
          writeOnly: true
      additionalProperties: false
      writeOnly: true
    SimpleApplicationPropertyBean:
      type: object
      properties:
        id:
          type: string
          description: The ID of the application property
        value:
          type: string
          description: The new value
      additionalProperties: false
      xml:
        name: applicationProperty
    WorkflowTransitions:
      type: object
      properties:
        validators:
          type: array
          description: The validators of the transition
          items:
            $ref: '#/components/schemas/WorkflowRuleConfiguration'
        description:
          type: string
          description: The description of the transition
        triggers:
          type: array
          description: The triggers of the transition
          items:
            $ref: '#/components/schemas/WorkflowTrigger'
        type:
          type: string
          description: The transition type
          enum:
          - INITIAL
          - GLOBAL
          - DIRECTED
        customIssueEventId:
          type: string
          description: The custom event ID of the transition
          nullable: true
        toStatusReference:
          type: string
          description: The status the transition goes to
        transitionScreen:
          $ref: '#/components/schemas/WorkflowRuleConfiguration'
        name:
          type: string
          description: The name of the transition
        links:
          type: array
          description: The statuses the transition can start from, and the mapping
            of ports between the statuses
          items:
            $ref: '#/components/schemas/WorkflowTransitionLinks'
        id:
          type: string
          description: The ID of the transition
        conditions:
          $ref: '#/components/schemas/ConditionGroupConfiguration'
        actions:
          type: array
          description: The post-functions of the transition
          items:
            $ref: '#/components/schemas/WorkflowRuleConfiguration'
        properties:
          type: object
          additionalProperties:
            type: string
            description: The properties of the transition.
          description: The properties of the transition
      additionalProperties: false
      description: The transitions of the workflow
    CustomFieldCreatedContextOptionsList:
      type: object
      properties:
        options:
          type: array
          description: The created custom field options
          items:
            $ref: '#/components/schemas/CustomFieldContextOption'
      additionalProperties: false
      description: A list of custom field options for a context
    WorkflowRules:
      type: object
      properties:
        conditionsTree:
          $ref: '#/components/schemas/WorkflowCondition'
        postFunctions:
          type: array
          description: The workflow post functions
          items:
            $ref: '#/components/schemas/WorkflowTransitionRule'
        validators:
          type: array
          description: The workflow validators
          items:
            $ref: '#/components/schemas/WorkflowTransitionRule'
      additionalProperties: false
      description: A collection of transition rules
    UpdatePrioritySchemeRequestBean:
      type: object
      properties:
        mappings:
          description: "Instructions to migrate the priorities of issues.\n\n`in`\
            \ mappings are used to migrate the priorities of issues to priorities\
            \ used within the priority scheme.\n\n`out` mappings are used to migrate\
            \ the priorities of issues to priorities not used within the priority\
            \ scheme.\n\n *  When **priorities** are **added** to the priority scheme,\
            \ no mapping needs to be provided as the new priorities are not used by\
            \ any issues.\n *  When **priorities** are **removed** from the priority\
            \ scheme, issues that are using those priorities must be migrated to new\
            \ priorities used by the priority scheme.\n    \n     *  An `in` mapping\
            \ must be provided for each of these priorities.\n *  When **projects**\
            \ are **added** to the priority scheme, the priorities of issues in those\
            \ projects might need to be migrated to new priorities used by the priority\
            \ scheme. This can occur when the current scheme does not use all the\
            \ priorities in the project(s)' priority scheme(s).\n    \n     *  An\
            \ `in` mapping must be provided for each of these priorities.\n *  When\
            \ **projects** are **removed** from the priority scheme, the priorities\
            \ of issues in those projects might need to be migrated to new priorities\
            \ within the **Default Priority Scheme** that are not used by the priority\
            \ scheme. This can occur when the **Default Priority Scheme** does not\
            \ use all the priorities within the current scheme.\n    \n     *  An\
            \ `out` mapping must be provided for each of these priorities.\n\nFor\
            \ more information on `in` and `out` mappings, see the child properties\
            \ documentation for the `PriorityMapping` object below"
          allOf:
          - $ref: '#/components/schemas/PriorityMapping'
        priorities:
          description: The priorities in the scheme
          allOf:
          - $ref: '#/components/schemas/UpdatePrioritiesInSchemeRequestBean'
        projects:
          description: The projects in the scheme
          allOf:
          - $ref: '#/components/schemas/UpdateProjectsInSchemeRequestBean'
        defaultPriorityId:
          type: integer
          description: The default priority of the scheme
          format: int64
          writeOnly: true
        name:
          maxLength: 255
          type: string
          description: The name of the priority scheme. Must be unique
          writeOnly: true
        description:
          maxLength: 4000
          type: string
          description: The description of the priority scheme
          writeOnly: true
      additionalProperties: false
      description: Details of a priority scheme
    StatusProjectUsagePage:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Page token for the next page of issue type usages
        values:
          type: array
          description: The list of projects
          items:
            $ref: '#/components/schemas/StatusProjectUsage'
      additionalProperties: false
      description: A page of projects
    StatusUpdate:
      required:
      - id
      - name
      - statusCategory
      type: object
      properties:
        description:
          type: string
          description: The description of the status.
        id:
          type: string
          description: The ID of the status.
        name:
          type: string
          description: The name of the status.
        statusCategory:
          type: string
          description: The category of the status.
          enum:
          - TODO
          - IN_PROGRESS
          - DONE
      additionalProperties: true
      description: Details of the status being updated
    AvailableWorkflowConnectRule:
      type: object
      properties:
        editUrl:
          type: string
          description: The URL edit path segment defined in the Connect module
        ruleType:
          type: string
          description: The rule type
          enum:
          - Condition
          - Validator
          - Function
          - Screen
        name:
          type: string
          description: The rule name
        viewUrl:
          type: string
          description: The URL view path segment defined in the Connect module
        createUrl:
          type: string
          description: The URL creation path segment defined in the Connect module
        description:
          type: string
          description: The rule description
        addonKey:
          type: string
          description: The add-on providing the rule
        ruleKey:
          type: string
          description: The rule key
        moduleKey:
          type: string
          description: The module providing the rule
      additionalProperties: false
      description: The Connect provided ecosystem rules available
    PagedListUserDetailsApplicationUser:
      type: object
      properties:
        size:
          type: integer
          description: The number of items on the page
          format: int32
          readOnly: true
          xml:
            attribute: true
        end-index:
          type: integer
          description: The index of the last item returned on the page
          format: int32
          readOnly: true
          xml:
            name: end-index
            attribute: true
          x-ballerina-name: endIndex
        max-results:
          type: integer
          description: The maximum number of results that could be on the page
          format: int32
          readOnly: true
          xml:
            name: max-results
            attribute: true
          x-ballerina-name: maxResults
        start-index:
          type: integer
          description: The index of the first item returned on the page
          format: int32
          readOnly: true
          xml:
            name: start-index
            attribute: true
          x-ballerina-name: startIndex
        items:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/UserDetails'
      additionalProperties: false
      description: A paged list. To access additional details append `[start-index:end-index]`
        to the expand request. For example, `?expand=sharedUsers[10:40]` returns a
        list starting at item 10 and finishing at item 40
    ContextForProjectAndIssueType:
      required:
      - contextId
      - issueTypeId
      - projectId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type
        contextId:
          type: string
          description: The ID of the custom field context
        projectId:
          type: string
          description: The ID of the project
      additionalProperties: false
      description: The project and issue type mapping with a matching custom field
        context
    SanitizedJqlQueries:
      type: object
      properties:
        queries:
          type: array
          description: The list of sanitized JQL queries
          items:
            $ref: '#/components/schemas/SanitizedJqlQuery'
      additionalProperties: false
      description: The sanitized JQL queries for the given account IDs
    WorkflowSchemeProjectUsageDTO:
      type: object
      properties:
        projects:
          $ref: '#/components/schemas/ProjectUsagePage'
        workflowSchemeId:
          type: string
          description: The workflow scheme ID
      additionalProperties: false
      description: Projects using the workflow scheme
    IssueTypeScreenSchemeMapping:
      required:
      - issueTypeId
      - screenSchemeId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type or *default*. Only issue types used
            in classic projects are accepted. An entry for *default* must be provided
            and defines the mapping for all issue types without a screen scheme
          writeOnly: true
        screenSchemeId:
          type: string
          description: The ID of the screen scheme. Only screen schemes used in classic
            projects are accepted
          writeOnly: true
      additionalProperties: false
      description: The IDs of the screen schemes for the issue type IDs
      writeOnly: true
    ProjectType:
      type: object
      properties:
        descriptionI18nKey:
          type: string
          description: The key of the project type's description
          readOnly: true
        color:
          type: string
          description: The color of the project type
          readOnly: true
        icon:
          type: string
          description: The icon of the project type
          readOnly: true
        formattedKey:
          type: string
          description: The formatted key of the project type
          readOnly: true
        key:
          type: string
          description: The key of the project type
          readOnly: true
      additionalProperties: false
      description: Details about a project type
    PageBeanIssueTypeScreenScheme:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeScreenScheme'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    WorkflowMetadataRestModel:
      required:
      - description
      - id
      - name
      - usage
      - version
      type: object
      properties:
        usage:
          type: array
          description: |-
            Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

            Use the optional `workflows.usages` expand to get additional information about the projects and issue types associated with the workflows in the workflow scheme
          nullable: true
          items:
            $ref: '#/components/schemas/SimpleUsage'
        name:
          type: string
          description: The name of the workflow
        description:
          type: string
          description: The description of the workflow
        id:
          type: string
          description: The ID of the workflow
        version:
          $ref: '#/components/schemas/DocumentVersion'
      additionalProperties: false
      description: Workflow metadata and usage detail
    LegacyJackson1ListProjectType:
      type: array
      items:
        $ref: '#/components/schemas/ProjectType'
    ProjectRoleActorsUpdateBean:
      type: object
      properties:
        categorisedActors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: |-
            The actors to add to the project role.

            Add groups using:

             *  `atlassian-group-role-actor` and a list of group names.
             *  `atlassian-group-role-actor-id` and a list of group IDs.

            As a group's name can change, use of `atlassian-group-role-actor-id` is recommended. For example, `"atlassian-group-role-actor-id":["eef79f81-0b89-4fca-a736-4be531a10869","77f6ab39-e755-4570-a6ae-2d7a8df0bcb8"]`.

            Add users using `atlassian-user-role-actor` and a list of account IDs. For example, `"atlassian-user-role-actor":["12345678-9abc-def1-2345-6789abcdef12", "abcdef12-3456-789a-bcde-f123456789ab"]`
        id:
          type: integer
          description: The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get)
            to get a list of project role IDs
          format: int64
          readOnly: true
      additionalProperties: false
      xml:
        name: actor
    RemoteIssueLinkRequest:
      required:
      - object
      type: object
      properties:
        application:
          description: Details of the remote application the linked item is in. For
            example, trello.
          allOf:
          - $ref: '#/components/schemas/Application'
        globalId:
          type: string
          description: |-
            An identifier for the remote item in the remote system. For example, the global ID for a remote item in Confluence would consist of the app ID and page ID, like this: `appId=456&pageId=123`.

            Setting this field enables the remote issue link details to be updated or deleted using remote system and item details as the record identifier, rather than using the record's Jira ID.

            The maximum length is 255 characters.
        object:
          description: Details of the item linked to.
          allOf:
          - $ref: '#/components/schemas/RemoteObject'
        relationship:
          type: string
          description: Description of the relationship between the issue and the linked
            item. If not set, the relationship description "links to" is used in Jira.
      additionalProperties: true
      description: Details of a remote issue link
    IssueArchivalSyncResponse:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/Errors'
        numberOfIssuesUpdated:
          type: integer
          format: int64
      additionalProperties: false
      description: Number of archived/unarchived issues and list of errors that occurred
        during the action, if any
    IssueEntityPropertiesForMultiUpdate:
      maxProperties: 100
      minProperties: 1
      type: object
      properties:
        issueID:
          type: integer
          description: The ID of the issue
          format: int64
        properties:
          maxProperties: 10
          minProperties: 1
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JsonNode'
          description: Entity properties to set on the issue. The maximum length of
            an issue property value is 32768 characters
      additionalProperties: false
      description: An issue ID with entity property values. See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/)
        for more information
    SecurityLevelMemberPayload:
      type: object
      properties:
        parameter:
          type: string
          description: Defines the value associated with the type. For reporter this
            would be \{"null"\}; for users this would be the names of specific users);
            for group this would be group names like \{"administrators", "jira-administrators",
            "jira-users"\}
        type:
          type: string
          description: The type of the security level member
          enum:
          - group
          - reporter
          - users
      additionalProperties: false
      description: The payload for creating a security level member. See https://support.atlassian.com/jira-cloud-administration/docs/configure-issue-security-schemes/
    TransitionUpdateDTO:
      type: object
      properties:
        actions:
          type: array
          description: The post-functions of the transition.
          items:
            $ref: '#/components/schemas/WorkflowRuleConfiguration'
        conditions:
          $ref: '#/components/schemas/ConditionGroupUpdate'
        customIssueEventId:
          type: string
          description: The custom event ID of the transition.
        description:
          type: string
          description: The description of the transition.
        id:
          type: string
          description: The ID of the transition.
        links:
          type: array
          description: The statuses the transition can start from, and the mapping
            of ports between the statuses.
          items:
            $ref: '#/components/schemas/WorkflowTransitionLinks'
        name:
          type: string
          description: The name of the transition.
        properties:
          type: object
          additionalProperties:
            type: string
            description: The properties of the transition.
          description: The properties of the transition.
        toStatusReference:
          type: string
          description: The status the transition goes to.
        transitionScreen:
          $ref: '#/components/schemas/WorkflowRuleConfiguration'
        triggers:
          type: array
          description: The triggers of the transition.
          items:
            $ref: '#/components/schemas/WorkflowTrigger'
        type:
          type: string
          description: The transition type.
          enum:
          - INITIAL
          - GLOBAL
          - DIRECTED
        validators:
          type: array
          description: The validators of the transition.
          items:
            $ref: '#/components/schemas/WorkflowRuleConfiguration'
      additionalProperties: true
      description: The transition update data
    JiraExpressionsComplexityValueBean:
      required:
      - limit
      - value
      type: object
      properties:
        limit:
          type: integer
          description: The maximum allowed complexity. The evaluation will fail if
            this value is exceeded
          format: int32
        value:
          type: integer
          description: The complexity value of the current expression
          format: int32
      additionalProperties: false
    JqlFunctionPrecomputationUpdateErrorResponse:
      type: object
      properties:
        errorMessages:
          type: array
          description: The list of error messages produced by this operation
          readOnly: true
          items:
            type: string
            readOnly: true
        notFoundPrecomputationIDs:
          uniqueItems: true
          type: array
          description: List of precomputations that were not found
          readOnly: true
          items:
            type: string
            readOnly: true
      additionalProperties: false
      description: Error response returned updating JQL Function precomputations fails
    RuleConfiguration:
      required:
      - value
      type: object
      properties:
        disabled:
          type: boolean
          description: Whether the rule is disabled
          default: false
        tag:
          maxLength: 255
          type: string
          description: A tag used to filter rules in [Get workflow transition rule
            configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get)
        value:
          type: string
          description: Configuration of the rule, as it is stored by the Connect or
            the Forge app on the rule configuration page
      additionalProperties: false
      description: A rule configuration
    JiraExpressionValidationError:
      required:
      - message
      - type
      type: object
      properties:
        expression:
          type: string
          description: The part of the expression in which the error occurred
        line:
          type: integer
          description: The text line in which the error occurred
          format: int32
        column:
          type: integer
          description: The text column in which the error occurred
          format: int32
        message:
          type: string
          description: Details about the error
          example: '!, -, typeof, (, IDENTIFIER, null, true, false, NUMBER, STRING,
            TEMPLATE_LITERAL, new, [ or { expected, > encountered.'
        type:
          type: string
          description: The error type
          enum:
          - syntax
          - type
          - other
      additionalProperties: false
      description: |-
        Details about syntax and type errors. The error details apply to the entire expression, unless the object includes:

         *  `line` and `column`
         *  `expression`
    ColumnRequestBody:
      type: object
      properties:
        columns:
          type: array
          items:
            type: string
      additionalProperties: false
    TabPayload:
      type: object
      properties:
        name:
          type: string
          description: The name of the tab
        fields:
          type: array
          description: The list of resource identifier of the field associated to
            the tab. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-screen-tab-fields/\#api-rest-api-3-screens-screenid-tabs-tabid-fields-post
          items:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: Defines the payload for the tabs of the screen. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-screen-tab-fields/\#api-rest-api-3-screens-screenid-tabs-tabid-fields-post
    CustomFieldContextSingleUserPickerDefaults:
      required:
      - accountId
      - contextId
      - type
      - userFilter
      type: object
      properties:
        accountId:
          type: string
          description: The ID of the default user
        contextId:
          type: string
          description: The ID of the context
        userFilter:
          $ref: '#/components/schemas/UserFilter'
        type:
          type: string
      description: Defaults for a User Picker (single) custom field
    RequiredMappingByIssueType:
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type
        statusIds:
          uniqueItems: true
          type: array
          description: The status IDs requiring mapping
          items:
            type: string
            description: The status IDs requiring mapping.
      additionalProperties: false
      description: The list of required status mappings by issue type
    CardLayout:
      type: object
      properties:
        showDaysInColumn:
          type: boolean
          description: Whether to show days in column
          enum:
          - true
          - false
          default: false
      additionalProperties: false
      description: Card layout configuration
    JiraExpressionEvalContextBean:
      type: object
      properties:
        issue:
          description: The issue that is available under the `issue` variable when
            evaluating the expression
          allOf:
          - $ref: '#/components/schemas/IdOrKeyBean'
        custom:
          type: array
          description: |-
            Custom context variables and their types. These variable types are available for use in a custom context:

             *  `user`: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user) specified as an Atlassian account ID.
             *  `issue`: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue) specified by ID or key. All the fields of the issue object are available in the Jira expression.
             *  `json`: A JSON object containing custom content.
             *  `list`: A JSON list of `user`, `issue`, or `json` variable types
          items:
            $ref: '#/components/schemas/CustomContextVariable'
        sprint:
          type: integer
          description: The ID of the sprint that is available under the `sprint` variable
            when evaluating the expression
          format: int64
        project:
          description: The project that is available under the `project` variable
            when evaluating the expression
          allOf:
          - $ref: '#/components/schemas/IdOrKeyBean'
        serviceDesk:
          type: integer
          description: The ID of the service desk that is available under the `serviceDesk`
            variable when evaluating the expression
          format: int64
        issues:
          description: The collection of issues that is available under the `issues`
            variable when evaluating the expression
          allOf:
          - $ref: '#/components/schemas/JexpIssues'
        board:
          type: integer
          description: The ID of the board that is available under the `board` variable
            when evaluating the expression
          format: int64
        customerRequest:
          type: integer
          description: The ID of the customer request that is available under the
            `customerRequest` variable when evaluating the expression. This is the
            same as the ID of the underlying Jira issue, but the customer request
            context variable will have a different type
          format: int64
      additionalProperties: false
    StatusProjectUsageDTO:
      type: object
      properties:
        projects:
          $ref: '#/components/schemas/StatusProjectUsagePage'
        statusId:
          type: string
          description: The status ID
      additionalProperties: false
      description: The projects using this status
    CustomFieldReplacement:
      type: object
      properties:
        customFieldId:
          type: integer
          description: The ID of the custom field in which to replace the version
            number
          format: int64
        moveTo:
          type: integer
          description: The version number to use as a replacement for the deleted
            version
          format: int64
      additionalProperties: false
      description: Details about the replacement for a deleted version
    WorklogsMoveRequestBean:
      type: object
      properties:
        issueIdOrKey:
          type: string
          description: The issue id or key of the destination issue
        ids:
          uniqueItems: true
          type: array
          description: A list of worklog IDs
          items:
            type: integer
            format: int64
      additionalProperties: false
    NotificationSchemeEventTypeId:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the notification scheme event.
          writeOnly: true
      additionalProperties: true
      description: The ID of an event that is being mapped to notifications
      writeOnly: true
    ColumnItem:
      type: object
      properties:
        label:
          type: string
          description: The issue navigator column label
        value:
          type: string
          description: The issue navigator column value
      additionalProperties: false
      description: Details of an issue navigator column item
    BulkEditActionError:
      required:
      - errorMessages
      - errors
      type: object
      properties:
        errorMessages:
          type: array
          description: The error messages
          items:
            type: string
        errors:
          type: object
          additionalProperties:
            type: string
          description: The errors
      additionalProperties: false
      description: Errors of bulk edit action
    ConnectModule:
      type: object
      description: |-
        A [Connect module](https://developer.atlassian.com/cloud/jira/platform/about-jira-modules/) in the same format as in the
        [app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/)
      example:
        description:
          value: field with team
        type: single_select
        extractions:
        - path: category
          type: text
          name: categoryName
        name:
          value: Team
        key: team-field
    PageBeanPrioritySchemeWithPaginatedPrioritiesAndProjects:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/PrioritySchemeWithPaginatedPrioritiesAndProjects'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    CustomFieldDefinitionJsonBean:
      required:
      - name
      - type
      type: object
      properties:
        searcherKey:
          type: string
          description: "The searcher defines the way the field is searched in Jira.\
            \ For example, *com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher*.\
            \  \nThe search UI (basic search and JQL search) will display different\
            \ operations and values for the field, based on the field searcher. You\
            \ must specify a searcher that is valid for the field type, as listed\
            \ below (abbreviated values shown):\n\n *  `cascadingselect`: `cascadingselectsearcher`\n\
            \ *  `datepicker`: `daterange`\n *  `datetime`: `datetimerange`\n *  `float`:\
            \ `exactnumber` or `numberrange`\n *  `grouppicker`: `grouppickersearcher`\n\
            \ *  `importid`: `exactnumber` or `numberrange`\n *  `labels`: `labelsearcher`\n\
            \ *  `multicheckboxes`: `multiselectsearcher`\n *  `multigrouppicker`:\
            \ `multiselectsearcher`\n *  `multiselect`: `multiselectsearcher`\n *\
            \  `multiuserpicker`: `userpickergroupsearcher`\n *  `multiversion`: `versionsearcher`\n\
            \ *  `project`: `projectsearcher`\n *  `radiobuttons`: `multiselectsearcher`\n\
            \ *  `readonlyfield`: `textsearcher`\n *  `select`: `multiselectsearcher`\n\
            \ *  `textarea`: `textsearcher`\n *  `textfield`: `textsearcher`\n * \
            \ `url`: `exacttextsearcher`\n *  `userpicker`: `userpickergroupsearcher`\n\
            \ *  `version`: `versionsearcher`\n\nIf no searcher is provided, the field\
            \ isn't searchable. However, [Forge custom fields](https://developer.atlassian.com/platform/forge/manifest-reference/modules/#jira-custom-field-type--beta-)\
            \ have a searcher set automatically, so are always searchable"
          enum:
          - com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:daterange
          - com.atlassian.jira.plugin.system.customfieldtypes:datetimerange
          - com.atlassian.jira.plugin.system.customfieldtypes:exactnumber
          - com.atlassian.jira.plugin.system.customfieldtypes:exacttextsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:labelsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:numberrange
          - com.atlassian.jira.plugin.system.customfieldtypes:projectsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:textsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:userpickergroupsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:versionsearcher
        name:
          type: string
          description: The name of the custom field, which is displayed in Jira. This
            is not the unique identifier
        description:
          type: string
          description: The description of the custom field, which is displayed in
            Jira
        type:
          type: string
          description: |-
            The type of the custom field. These built-in custom field types are available:

             *  `cascadingselect`: Enables values to be selected from two levels of select lists (value: `com.atlassian.jira.plugin.system.customfieldtypes:cascadingselect`)
             *  `datepicker`: Stores a date using a picker control (value: `com.atlassian.jira.plugin.system.customfieldtypes:datepicker`)
             *  `datetime`: Stores a date with a time component (value: `com.atlassian.jira.plugin.system.customfieldtypes:datetime`)
             *  `float`: Stores and validates a numeric (floating point) input (value: `com.atlassian.jira.plugin.system.customfieldtypes:float`)
             *  `grouppicker`: Stores a user group using a picker control (value: `com.atlassian.jira.plugin.system.customfieldtypes:grouppicker`)
             *  `importid`: A read-only field that stores the ID the issue had in the system it was imported from (value: `com.atlassian.jira.plugin.system.customfieldtypes:importid`)
             *  `labels`: Stores labels (value: `com.atlassian.jira.plugin.system.customfieldtypes:labels`)
             *  `multicheckboxes`: Stores multiple values using checkboxes (value: ``)
             *  `multigrouppicker`: Stores multiple user groups using a picker control (value: ``)
             *  `multiselect`: Stores multiple values using a select list (value: `com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes`)
             *  `multiuserpicker`: Stores multiple users using a picker control (value: `com.atlassian.jira.plugin.system.customfieldtypes:multigrouppicker`)
             *  `multiversion`: Stores multiple versions from the versions available in a project using a picker control (value: `com.atlassian.jira.plugin.system.customfieldtypes:multiversion`)
             *  `project`: Stores a project from a list of projects that the user is permitted to view (value: `com.atlassian.jira.plugin.system.customfieldtypes:project`)
             *  `radiobuttons`: Stores a value using radio buttons (value: `com.atlassian.jira.plugin.system.customfieldtypes:radiobuttons`)
             *  `readonlyfield`: Stores a read-only text value, which can only be populated via the API (value: `com.atlassian.jira.plugin.system.customfieldtypes:readonlyfield`)
             *  `select`: Stores a value from a configurable list of options (value: `com.atlassian.jira.plugin.system.customfieldtypes:select`)
             *  `textarea`: Stores a long text string using a multiline text area (value: `com.atlassian.jira.plugin.system.customfieldtypes:textarea`)
             *  `textfield`: Stores a text string using a single-line text box (value: `com.atlassian.jira.plugin.system.customfieldtypes:textfield`)
             *  `url`: Stores a URL (value: `com.atlassian.jira.plugin.system.customfieldtypes:url`)
             *  `userpicker`: Stores a user using a picker control (value: `com.atlassian.jira.plugin.system.customfieldtypes:userpicker`)
             *  `version`: Stores a version using a picker control (value: `com.atlassian.jira.plugin.system.customfieldtypes:version`)

            To create a field based on a [Forge custom field type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/#jira-custom-field-type--beta-), use the ID of the Forge custom field type as the value. For example, `ari:cloud:ecosystem::extension/e62f20a2-4b61-4dbe-bfb9-9a88b5e3ac84/548c5df1-24aa-4f7c-bbbb-3038d947cb05/static/my-cf-type-key`
      additionalProperties: false
    FieldIdIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/FieldIdentifierObject'
      - $ref: '#/components/schemas/FieldIdIdentifierAllOf2'
    PageBeanSecurityLevel:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/SecurityLevel'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    Scope:
      type: object
      properties:
        project:
          description: The project the item has scope in.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ProjectDetails'
        type:
          type: string
          description: The type of scope.
          readOnly: true
          enum:
          - PROJECT
          - TEMPLATE
      additionalProperties: true
      description: The projects the item is associated with. Indicated for items associated
        with [next-gen projects](https://confluence.atlassian.com/x/loMyO)
    Filter:
      required:
      - name
      type: object
      properties:
        owner:
          description: The user who owns the filter. This is defaulted to the creator
            of the filter, however Jira administrators can change the owner of a shared
            filter in the admin settings
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        sharedUsers:
          description: A paginated list of the users that the filter is shared with.
            This includes users that are members of the groups or can browse the projects
            that the filter is shared with
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserList'
        subscriptions:
          description: A paginated list of the users that are subscribed to the filter
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/FilterSubscriptionsList'
        jql:
          type: string
          description: The JQL query for the filter. For example, *project = SSP AND
            issuetype = Bug*
        favouritedCount:
          type: integer
          description: The count of how many users have selected this filter as a
            favorite, including the filter owner
          format: int64
          readOnly: true
        approximateLastUsed:
          type: string
          description: \[Experimental\] Approximate last used time. Returns the date
            and time when the filter was last used. Returns `null` if the filter hasn't
            been used after tracking was enabled. For performance reasons, timestamps
            aren't updated in real time and therefore may not be exactly accurate
          format: date-time
          readOnly: true
        description:
          type: string
          description: A description of the filter
        favourite:
          type: boolean
          description: Whether the filter is selected as a favorite
        editPermissions:
          type: array
          description: The groups and projects that can edit the filter
          items:
            $ref: '#/components/schemas/SharePermission'
        name:
          type: string
          description: The name of the filter. Must be unique
        viewUrl:
          type: string
          description: A URL to view the filter results in Jira, using the ID of the
            filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*
          format: uri
          readOnly: true
        self:
          type: string
          description: The URL of the filter
          format: uri
          readOnly: true
        searchUrl:
          type: string
          description: A URL to view the filter results in Jira, using the [Search
            for issues using JQL](#api-rest-api-3-filter-search-get) operation with
            the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*
          format: uri
          readOnly: true
        id:
          type: string
          description: The unique identifier for the filter
          readOnly: true
        sharePermissions:
          type: array
          description: The groups and projects that the filter is shared with
          items:
            $ref: '#/components/schemas/SharePermission'
      additionalProperties: false
      description: Details about a filter
      xml:
        name: filter
    CustomFieldContextDefaultValueSingleOption:
      required:
      - contextId
      - optionId
      - type
      type: object
      properties:
        contextId:
          type: string
          description: The ID of the context
        optionId:
          type: string
          description: The ID of the default option
        type:
          type: string
      description: The default value for a single select custom field
    IssueTypeIds:
      required:
      - issueTypeIds
      type: object
      properties:
        issueTypeIds:
          type: array
          description: The list of issue type IDs
          writeOnly: true
          items:
            type: string
            writeOnly: true
      additionalProperties: false
      description: The list of issue type IDs
    UpdateIssueSecurityLevelDetails:
      type: object
      properties:
        description:
          maxLength: 255
          type: string
          description: The description of the issue security scheme level.
          writeOnly: true
        name:
          maxLength: 60
          type: string
          description: The name of the issue security scheme level. Must be unique.
          writeOnly: true
      additionalProperties: true
      description: Details of issue security scheme level
    PageBeanWorkflowTransitionRules:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/WorkflowTransitionRules'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    PageBeanWorkflow:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Workflow'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    IssueFieldOptionScopeBean:
      type: object
      properties:
        projects2:
          uniqueItems: true
          type: array
          description: Defines the projects in which the option is available and the
            behavior of the option within each project. Specify one object per project.
            The behavior of the option in a project context overrides the behavior
            in the global context
          items:
            $ref: '#/components/schemas/ProjectScopeBean'
        projects:
          uniqueItems: true
          type: array
          description: DEPRECATED
          items:
            type: integer
            format: int64
        global:
          description: Defines the behavior of the option within the global context.
            If this property is set, even if set to an empty object, then the option
            is available in all projects
          allOf:
          - $ref: '#/components/schemas/GlobalScopeBean'
      additionalProperties: false
    CustomFieldContextDefaultValueSingleVersionPicker:
      required:
      - type
      - versionId
      type: object
      properties:
        versionId:
          type: string
          description: The ID of the default version
        versionOrder:
          type: string
          description: The order the pickable versions are displayed in. If not provided,
            the released-first order is used. Available version orders are `"releasedFirst"`
            and `"unreleasedFirst"`
        type:
          type: string
      description: The default value for a version picker custom field
    SuggestedMappingsForPrioritiesRequestBean:
      type: object
      properties:
        add:
          type: array
          description: The ids of priorities being removed from the scheme
          writeOnly: true
          items:
            type: integer
            format: int64
            writeOnly: true
        remove:
          type: array
          description: The ids of priorities being removed from the scheme
          writeOnly: true
          items:
            type: integer
            format: int64
            writeOnly: true
      additionalProperties: false
      description: Details of changes to a priority scheme's priorities that require
        suggested priority mappings
      writeOnly: true
    UpdateScreenDetails:
      type: object
      properties:
        name:
          type: string
          description: The name of the screen. The name must be unique. The maximum
            length is 255 characters
          writeOnly: true
        description:
          type: string
          description: The description of the screen. The maximum length is 255 characters
          writeOnly: true
      additionalProperties: false
      description: Details of a screen
    CreatePermissionRequest:
      required:
      - holder
      - type
      type: object
      properties:
        holder:
          description: The permission holder
          allOf:
          - $ref: '#/components/schemas/CreatePermissionHolderRequest'
        type:
          type: string
          description: The permission type. This must be "View" or "Edit"
          enum:
          - View
          - Edit
      additionalProperties: false
    DashboardDetails:
      required:
      - editPermissions
      - name
      - sharePermissions
      type: object
      properties:
        editPermissions:
          type: array
          description: The edit permissions for the dashboard
          items:
            $ref: '#/components/schemas/SharePermission'
        name:
          type: string
          description: The name of the dashboard
        description:
          type: string
          description: The description of the dashboard
        sharePermissions:
          type: array
          description: The share permissions for the dashboard
          items:
            $ref: '#/components/schemas/SharePermission'
      additionalProperties: false
      description: Details of a dashboard
    FieldConfigurationItemsDetails:
      required:
      - fieldConfigurationItems
      type: object
      properties:
        fieldConfigurationItems:
          type: array
          description: Details of fields in a field configuration
          writeOnly: true
          items:
            $ref: '#/components/schemas/FieldConfigurationItem'
      additionalProperties: false
      description: Details of field configuration items
    FilterSubscriptionsList:
      type: object
      properties:
        size:
          type: integer
          description: The number of items on the page
          format: int32
          readOnly: true
          xml:
            attribute: true
        end-index:
          type: integer
          description: The index of the last item returned on the page
          format: int32
          readOnly: true
          xml:
            name: end-index
            attribute: true
          x-ballerina-name: endIndex
        max-results:
          type: integer
          description: The maximum number of results that could be on the page
          format: int32
          readOnly: true
          xml:
            name: max-results
            attribute: true
          x-ballerina-name: maxResults
        start-index:
          type: integer
          description: The index of the first item returned on the page
          format: int32
          readOnly: true
          xml:
            name: start-index
            attribute: true
          x-ballerina-name: startIndex
        items:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/FilterSubscription'
      additionalProperties: false
      description: A paginated list of subscriptions to a filter
    StatusWorkflowUsagePage:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Page token for the next page of issue type usages
        values:
          type: array
          description: The list of statuses
          items:
            $ref: '#/components/schemas/StatusWorkflowUsageWorkflow'
      additionalProperties: false
      description: A page of workflows
    DefaultWorkflowEditorResponse:
      type: object
      properties:
        value:
          type: string
          enum:
          - NEW
          - LEGACY
      additionalProperties: false
    FieldConfigurationSchemeProjects:
      required:
      - projectIds
      type: object
      properties:
        projectIds:
          type: array
          description: The IDs of projects using the field configuration scheme
          items:
            type: string
            description: The IDs of projects using the field configuration scheme.
        fieldConfigurationScheme:
          $ref: '#/components/schemas/FieldConfigurationScheme'
      additionalProperties: false
      description: Project list with assigned field configuration schema
    Operations:
      type: object
      properties:
        linkGroups:
          type: array
          description: Details of the link groups defining issue operations.
          readOnly: true
          items:
            $ref: '#/components/schemas/LinkGroup'
      additionalProperties: true
      description: Details of the operations that can be performed on the issue
    BulkChangeOwnerDetails:
      required:
      - autofixName
      - newOwner
      type: object
      properties:
        autofixName:
          type: boolean
          description: Whether the name is fixed automatically if it's duplicated
            after changing owner
        newOwner:
          type: string
          description: The account id of the new owner
      additionalProperties: false
      description: Details for changing owners of shareable entities
    IssueSecurityLevelMember:
      required:
      - holder
      - id
      - issueSecurityLevelId
      type: object
      properties:
        holder:
          description: The user or group being granted the permission. It consists
            of a `type` and a type-dependent `parameter`. See [Holder object](../api-group-permission-schemes/#holder-object)
            in *Get all permission schemes* for more information
          allOf:
          - $ref: '#/components/schemas/PermissionHolder'
        id:
          type: integer
          description: The ID of the issue security level member
          format: int64
        issueSecurityLevelId:
          type: integer
          description: The ID of the issue security level
          format: int64
      additionalProperties: false
      description: Issue security level member
    ProjectCategory:
      type: object
      properties:
        name:
          type: string
          description: The name of the project category. Required on create, optional
            on update
        description:
          type: string
          description: The description of the project category
        self:
          type: string
          description: The URL of the project category
          format: uri
          readOnly: true
        id:
          type: string
          description: The ID of the project category
          readOnly: true
      additionalProperties: false
      description: A project category
    WarningCollection:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
      additionalProperties: false
    IssueBulkEditPayload:
      required:
      - editedFieldsInput
      - selectedActions
      - selectedIssueIdsOrKeys
      type: object
      properties:
        selectedIssueIdsOrKeys:
          type: array
          description: List of issue IDs or keys which are to be bulk edited. These
            IDs or keys can be from different projects and issue types
          writeOnly: true
          items:
            type: string
            writeOnly: true
        selectedActions:
          type: array
          description: List of all the field IDs that are to be bulk edited. Each
            field ID in this list corresponds to a specific attribute of an issue
            that is set to be modified in the bulk edit operation. The relevant field
            ID can be obtained by calling the Bulk Edit Get Fields REST API (documentation
            available on this page itself)
          writeOnly: true
          items:
            type: string
            writeOnly: true
        sendBulkNotification:
          type: boolean
          description: |-
            A boolean value that indicates whether to send a bulk change notification when the issues are being edited.

            If `true`, dispatches a bulk notification email to users about the updates
          nullable: true
          writeOnly: true
          default: true
        editedFieldsInput:
          description: An object that defines the values to be updated in specified
            fields of an issue. The structure and content of this parameter vary depending
            on the type of field being edited. Although the order is not significant,
            ensure that field IDs align with those in selectedActions
          allOf:
          - $ref: '#/components/schemas/JiraIssueFields'
      additionalProperties: false
      description: Issue Bulk Edit Payload
    AttachmentMetadata:
      type: object
      properties:
        thumbnail:
          type: string
          description: The URL of a thumbnail representing the attachment
          readOnly: true
        filename:
          type: string
          description: The name of the attachment file
          readOnly: true
        size:
          type: integer
          description: The size of the attachment
          format: int64
          readOnly: true
        author:
          description: Details of the user who attached the file
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        created:
          type: string
          description: The datetime the attachment was created
          format: date-time
          readOnly: true
        self:
          type: string
          description: The URL of the attachment metadata details
          format: uri
          readOnly: true
        id:
          type: integer
          description: The ID of the attachment
          format: int64
          readOnly: true
        mimeType:
          type: string
          description: The MIME type of the attachment
          readOnly: true
        content:
          type: string
          description: The URL of the attachment
          readOnly: true
        properties:
          type: object
          additionalProperties:
            readOnly: true
          description: Additional properties of the attachment
          readOnly: true
      additionalProperties: false
      description: Metadata for an issue attachment
      xml:
        name: attachment
    StatusMapping:
      required:
      - issueTypeId
      - newStatusId
      - statusId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type
        statusId:
          type: string
          description: The ID of the status
        newStatusId:
          type: string
          description: The ID of the new status
      additionalProperties: false
      description: Details about the mapping from a status to a new status for an
        issue type
    ServiceManagementNavigationInfo:
      type: object
      properties:
        queueCategory:
          type: string
        queueId:
          type: integer
          format: int64
        queueName:
          type: string
    WorkflowAssociationStatusMapping:
      required:
      - newStatusId
      - oldStatusId
      type: object
      properties:
        oldStatusId:
          type: string
          description: The ID of the status in the old workflow that isn't present
            in the new workflow
        newStatusId:
          type: string
          description: The ID of the status in the new workflow
      additionalProperties: false
      description: The list of status mappings
    CustomFieldContextDefaultValueTextArea:
      required:
      - type
      type: object
      properties:
        text:
          type: string
          description: The default text. The maximum length is 32767 characters
        type:
          type: string
      description: The default text for a text area custom field
    PageOfStatuses:
      type: object
      properties:
        total:
          type: integer
          description: Number of items that satisfy the search
          format: int64
        isLast:
          type: boolean
          description: Whether this is the last page
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
        nextPage:
          type: string
          description: The URL of the next page of results, if any
        values:
          type: array
          description: The list of items
          items:
            $ref: '#/components/schemas/JiraStatus'
        self:
          type: string
          description: The URL of this page
        startAt:
          type: integer
          description: The index of the first item returned on the page
          format: int64
      additionalProperties: false
    JiraIssueTypeField:
      required:
      - issueTypeId
      type: object
      properties:
        issueTypeId:
          type: string
      additionalProperties: false
    JiraWorkflowStatus:
      type: object
      properties:
        scope:
          $ref: '#/components/schemas/WorkflowScope'
        name:
          type: string
          description: The name of the status
        description:
          type: string
          description: The description of the status
        id:
          type: string
          description: The ID of the status
        usages:
          uniqueItems: true
          type: array
          description: |-
            Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

            The `statuses.usages` expand is an optional parameter that can be used when reading and updating statuses in Jira. It provides additional information about the projects and issue types associated with the requested statuses
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectIssueTypes'
        statusCategory:
          type: string
          description: The category of the status
          enum:
          - TODO
          - IN_PROGRESS
          - DONE
        statusReference:
          type: string
          description: The reference of the status
      additionalProperties: false
      description: Details of a status
    GroupDetails:
      type: object
      properties:
        groupId:
          type: string
          description: The ID of the group, which uniquely identifies the group across
            all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*
          nullable: true
        name:
          type: string
          description: The name of the group
      additionalProperties: false
      description: Details about a group
    RoleActor:
      type: object
      properties:
        avatarUrl:
          type: string
          description: The avatar of the role actor
          format: uri
          readOnly: true
        displayName:
          type: string
          description: The display name of the role actor. For users, depending on
            the user’s privacy setting, this may return an alternative value for the
            user's name
          readOnly: true
        actorGroup:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ProjectRoleGroup'
        name:
          type: string
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
          readOnly: true
        id:
          type: integer
          description: The ID of the role actor
          format: int64
          readOnly: true
        type:
          type: string
          description: The type of role actor
          readOnly: true
          enum:
          - atlassian-group-role-actor
          - atlassian-user-role-actor
        actorUser:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ProjectRoleUser'
      additionalProperties: false
      description: Details about a user assigned to a project role
      xml:
        name: projectRoleActor
    ProjectPermissions:
      type: object
      properties:
        canEdit:
          type: boolean
          description: Whether the logged user can edit the project
          readOnly: true
      additionalProperties: false
      description: Permissions which a user has on a project
    AttachmentArchiveImpl:
      type: object
      properties:
        totalEntryCount:
          type: integer
          description: The number of items in the archive
          format: int32
        entries:
          type: array
          description: The list of the items included in the archive
          items:
            $ref: '#/components/schemas/AttachmentArchiveEntry'
      additionalProperties: false
    JiraMultipleVersionPickerField:
      required:
      - bulkEditMultiSelectFieldOption
      - fieldId
      - versions
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/JiraVersionField'
        bulkEditMultiSelectFieldOption:
          type: string
          enum:
          - ADD
          - REMOVE
          - REPLACE
          - REMOVE_ALL
        fieldId:
          type: string
      additionalProperties: false
    ContentItem:
      required:
      - entityId
      - entityType
      - id
      type: object
      properties:
        entityType:
          type: string
          description: The type of the entity to redact
          enum:
          - issuefieldvalue
        entityId:
          type: string
          description: The ID of the content entity. For redacting a issue field,
            this will be field id. e.g. summary, customfield\_10000
          example: summary
        id:
          type: string
          description: This would be the issue ID
          example: '10000'
      additionalProperties: false
      description: Represents the content to redact
    MappingsByIssueTypeOverride:
      required:
      - issueTypeId
      - statusMappings
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type for this mapping
        statusMappings:
          type: array
          description: The list of status mappings
          items:
            $ref: '#/components/schemas/WorkflowAssociationStatusMapping'
      additionalProperties: false
      description: Overrides, for the selected issue types, any status mappings provided
        in `statusMappingsByWorkflows`. Status mappings are required when the new
        workflow for an issue type doesn't contain all statuses that the old workflow
        has. Status mappings can be provided by a combination of `statusMappingsByWorkflows`
        and `statusMappingsByIssueTypeOverride`
    PageBeanUiModificationDetails:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/UiModificationDetails'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    PermissionPayloadDTO:
      type: object
      properties:
        grants:
          uniqueItems: true
          type: array
          description: List of permission grants
          items:
            $ref: '#/components/schemas/PermissionGrantDTO'
        onConflict:
          type: string
          description: The strategy to use when there is a conflict with an existing
            permission scheme. FAIL - Fail execution, this always needs to be unique;
            USE - Use the existing entity and ignore new entity parameters; NEW -
            If the entity exist, try and create a new one with a different name
          enum:
          - FAIL
          - USE
          - NEW
          default: FAIL
        name:
          type: string
          description: The name of the permission scheme
        description:
          type: string
          description: The description of the permission scheme
        addAddonRole:
          type: boolean
          description: Configuration to generate addon role. Default is false if null
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload to create a permission scheme
      nullable: true
    PageBeanGroupDetails:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/GroupDetails'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    CreateUiModificationDetails:
      required:
      - name
      type: object
      properties:
        data:
          type: string
          description: The data of the UI modification. The maximum size of the data
            is 50000 characters
          writeOnly: true
        name:
          type: string
          description: The name of the UI modification. The maximum length is 255
            characters
          writeOnly: true
        description:
          type: string
          description: The description of the UI modification. The maximum length
            is 255 characters
          writeOnly: true
        contexts:
          type: array
          description: List of contexts of the UI modification. The maximum number
            of contexts is 1000
          writeOnly: true
          items:
            $ref: '#/components/schemas/UiModificationContextDetails'
      additionalProperties: false
      description: The details of a UI modification
    UserMigrationBean:
      type: object
      properties:
        accountId:
          type: string
        key:
          type: string
        username:
          type: string
      additionalProperties: false
    JqlQueryToSanitize:
      required:
      - query
      type: object
      properties:
        accountId:
          maxLength: 128
          type: string
          description: The account ID of the user, which uniquely identifies the user
            across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
          nullable: true
        query:
          type: string
          description: The query to sanitize
      additionalProperties: false
      description: The JQL query to sanitize for the account ID. If the account ID
        is null, sanitizing is performed for an anonymous user
      writeOnly: true
    CustomFieldContext:
      required:
      - description
      - id
      - isAnyIssueType
      - isGlobalContext
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the context
        description:
          type: string
          description: The description of the context
        id:
          type: string
          description: The ID of the context
        isAnyIssueType:
          type: boolean
          description: Whether the context apply to all issue types
        isGlobalContext:
          type: boolean
          description: Whether the context is global
      additionalProperties: false
      description: The details of a custom field context
    JiraExpressionEvalRequestBean:
      required:
      - expression
      type: object
      properties:
        expression:
          type: string
          description: The Jira expression to evaluate
          example: '{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link
            => link.linkedIssue.id) }'
        context:
          description: The context in which the Jira expression is evaluated
          allOf:
          - $ref: '#/components/schemas/JiraExpressionEvalContextBean'
      additionalProperties: false
    DocumentVersion:
      type: object
      properties:
        id:
          type: string
          description: The version UUID
        versionNumber:
          type: integer
          description: The version number
          format: int64
      additionalProperties: false
      description: The current version details of this workflow scheme
    SharePermissionInputBean:
      required:
      - type
      type: object
      properties:
        accountId:
          type: string
          description: The user account ID that the filter is shared with. For a request,
            specify the `accountId` property for the user
        groupId:
          type: string
          description: The ID of the group, which uniquely identifies the group across
            all Atlassian products.For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*.
            Cannot be provided with `groupname`
        rights:
          type: integer
          description: The rights for the share permission
          format: int32
        type:
          type: string
          description: |-
            The type of the share permission.Specify the type as follows:

             *  `user` Share with a user.
             *  `group` Share with a group. Specify `groupname` as well.
             *  `project` Share with a project. Specify `projectId` as well.
             *  `projectRole` Share with a project role in a project. Specify `projectId` and `projectRoleId` as well.
             *  `global` Share globally, including anonymous users. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set.
             *  `authenticated` Share with all logged-in users. This shows as `loggedin` in the response. If set, this type overrides all existing share permissions and must be deleted before any non-global share permissions is set
          enum:
          - user
          - project
          - group
          - projectRole
          - global
          - authenticated
        groupname:
          type: string
          description: The name of the group to share the filter with. Set `type`
            to `group`. Please note that the name of a group is mutable, to reliably
            identify a group use `groupId`
        projectId:
          type: string
          description: The ID of the project to share the filter with. Set `type`
            to `project`
        projectRoleId:
          type: string
          description: The ID of the project role to share the filter with. Set `type`
            to `projectRole` and the `projectId` for the project that the role is
            in
      additionalProperties: false
    JiraLabelPropertiesInputJackson1:
      type: object
      properties:
        color:
          type: string
          enum:
          - GREY_LIGHTEST
          - GREY_LIGHTER
          - GREY
          - GREY_DARKER
          - GREY_DARKEST
          - PURPLE_LIGHTEST
          - PURPLE_LIGHTER
          - PURPLE
          - PURPLE_DARKER
          - PURPLE_DARKEST
          - BLUE_LIGHTEST
          - BLUE_LIGHTER
          - BLUE
          - BLUE_DARKER
          - BLUE_DARKEST
          - TEAL_LIGHTEST
          - TEAL_LIGHTER
          - TEAL
          - TEAL_DARKER
          - TEAL_DARKEST
          - GREEN_LIGHTEST
          - GREEN_LIGHTER
          - GREEN
          - GREEN_DARKER
          - GREEN_DARKEST
          - LIME_LIGHTEST
          - LIME_LIGHTER
          - LIME
          - LIME_DARKER
          - LIME_DARKEST
          - YELLOW_LIGHTEST
          - YELLOW_LIGHTER
          - YELLOW
          - YELLOW_DARKER
          - YELLOW_DARKEST
          - ORANGE_LIGHTEST
          - ORANGE_LIGHTER
          - ORANGE
          - ORANGE_DARKER
          - ORANGE_DARKEST
          - RED_LIGHTEST
          - RED_LIGHTER
          - RED
          - RED_DARKER
          - RED_DARKEST
          - MAGENTA_LIGHTEST
          - MAGENTA_LIGHTER
          - MAGENTA
          - MAGENTA_DARKER
          - MAGENTA_DARKEST
        name:
          type: string
      additionalProperties: false
    TimeTrackingDetails:
      type: object
      properties:
        originalEstimateSeconds:
          type: integer
          description: The original estimate of time needed for this issue in seconds
          format: int64
          readOnly: true
        timeSpentSeconds:
          type: integer
          description: Time worked on this issue in seconds
          format: int64
          readOnly: true
        timeSpent:
          type: string
          description: Time worked on this issue in readable format
          readOnly: true
        remainingEstimate:
          type: string
          description: The remaining estimate of time needed for this issue in readable
            format
          readOnly: true
        remainingEstimateSeconds:
          type: integer
          description: The remaining estimate of time needed for this issue in seconds
          format: int64
          readOnly: true
        originalEstimate:
          type: string
          description: The original estimate of time needed for this issue in readable
            format
          readOnly: true
      additionalProperties: false
      description: Time tracking details
    UserContextVariable:
      required:
      - accountId
      - type
      type: object
      properties:
        accountId:
          type: string
          description: The account ID of the user
        type:
          type: string
          description: Type of custom context variable
      description: A [user](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user)
        specified as an Atlassian account ID
    SimplifiedIssueTransition:
      type: object
      properties:
        transitionId:
          type: integer
          description: The unique ID of the transition
          format: int32
          readOnly: true
        to:
          description: The issue status change of the transition
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/IssueTransitionStatus'
        transitionName:
          type: string
          description: The name of the transition
          readOnly: true
      additionalProperties: false
    JiraSingleSelectUserPickerField:
      required:
      - fieldId
      type: object
      properties:
        user:
          $ref: '#/components/schemas/JiraUserField'
        fieldId:
          type: string
      additionalProperties: false
    CustomFieldContextDefaultValueForgeMultiGroupField:
      required:
      - contextId
      - groupIds
      - type
      type: object
      properties:
        groupIds:
          uniqueItems: true
          type: array
          description: The IDs of the default groups
          items:
            type: string
            description: The IDs of the default groups.
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
      description: The default value for a Forge collection of groups custom field
    IssueTransition:
      type: object
      properties:
        expand:
          type: string
          description: Expand options that include additional transition details in
            the response.
          readOnly: true
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FieldMetadata'
          description: Details of the fields associated with the issue transition
            screen. Use this information to populate `fields` and `update` in a transition
            request.
          readOnly: true
        hasScreen:
          type: boolean
          description: Whether there is a screen associated with the issue transition.
          readOnly: true
        id:
          type: string
          description: The ID of the issue transition. Required when specifying a
            transition to undertake.
        isAvailable:
          type: boolean
          description: Whether the transition is available to be performed.
          readOnly: true
        isConditional:
          type: boolean
          description: Whether the issue has to meet criteria before the issue transition
            is applied.
          readOnly: true
        isGlobal:
          type: boolean
          description: Whether the issue transition is global, that is, the transition
            is applied to issues regardless of their status.
          readOnly: true
        isInitial:
          type: boolean
          description: Whether this is the initial issue transition for the workflow.
          readOnly: true
        looped:
          type: boolean
        name:
          type: string
          description: The name of the issue transition.
          readOnly: true
        to:
          description: Details of the issue status after the transition.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/StatusDetails'
      additionalProperties: true
      description: Details of an issue transition
    CreatePrioritySchemeDetails:
      required:
      - defaultPriorityId
      - name
      - priorityIds
      type: object
      properties:
        priorityIds:
          maxLength: 300
          minLength: 1
          type: array
          description: The IDs of priorities in the scheme
          writeOnly: true
          items:
            maxLength: 300
            minLength: 1
            type: integer
            format: int64
            writeOnly: true
        mappings:
          description: "Instructions to migrate the priorities of issues.\n\n`in`\
            \ mappings are used to migrate the priorities of issues to priorities\
            \ used within the priority scheme.\n\n`out` mappings are used to migrate\
            \ the priorities of issues to priorities not used within the priority\
            \ scheme.\n\n *  When **priorities** are **added** to the new priority\
            \ scheme, no mapping needs to be provided as the new priorities are not\
            \ used by any issues.\n *  When **priorities** are **removed** from the\
            \ new priority scheme, no mapping needs to be provided as the removed\
            \ priorities are not used by any issues.\n *  When **projects** are **added**\
            \ to the priority scheme, the priorities of issues in those projects might\
            \ need to be migrated to new priorities used by the priority scheme. This\
            \ can occur when the current scheme does not use all the priorities in\
            \ the project(s)' priority scheme(s).\n    \n     *  An `in` mapping must\
            \ be provided for each of these priorities.\n *  When **projects** are\
            \ **removed** from the priority scheme, no mapping needs to be provided\
            \ as the removed projects are not using the priorities of the new priority\
            \ scheme.\n\nFor more information on `in` and `out` mappings, see the\
            \ child properties documentation for the `PriorityMapping` object below"
          allOf:
          - $ref: '#/components/schemas/PriorityMapping'
        defaultPriorityId:
          type: integer
          description: The ID of the default priority for the priority scheme
          format: int64
          writeOnly: true
        name:
          maxLength: 255
          type: string
          description: The name of the priority scheme. Must be unique
          writeOnly: true
        description:
          maxLength: 4000
          type: string
          description: The description of the priority scheme
          writeOnly: true
        projectIds:
          uniqueItems: true
          type: array
          description: The IDs of projects that will use the priority scheme
          writeOnly: true
          items:
            type: integer
            format: int64
            writeOnly: true
      additionalProperties: false
      description: Details of a new priority scheme
    JiraExpressionResult:
      required:
      - value
      type: object
      properties:
        meta:
          description: Contains various characteristics of the performed expression
            evaluation
          allOf:
          - $ref: '#/components/schemas/JiraExpressionEvaluationMetaDataBean'
        value:
          description: The value of the evaluated expression. It may be a primitive
            JSON value or a Jira REST API object. (Some expressions do not produce
            any meaningful results—for example, an expression that returns a lambda
            function—if that's the case a simple string representation is returned.
            These string representations should not be relied upon and may change
            without notice.)
      additionalProperties: false
      description: The result of evaluating a Jira expression
    ValidationOptionsForUpdate:
      type: object
      properties:
        levels:
          maxItems: 2
          type: array
          items:
            type: string
            enum:
            - WARNING
            - ERROR
      additionalProperties: false
      description: The level of validation to return from the API. If no values are
        provided, the default would return `WARNING` and `ERROR` level validation
        results
    AssociateSecuritySchemeWithProjectDetails:
      required:
      - projectId
      - schemeId
      type: object
      properties:
        oldToNewSecurityLevelMappings:
          type: array
          description: The list of scheme levels which should be remapped to new levels
            of the issue security scheme
          writeOnly: true
          items:
            $ref: '#/components/schemas/OldToNewSecurityLevelMappingsBean'
        schemeId:
          type: string
          description: The ID of the issue security scheme. Providing null will clear
            the association with the issue security scheme
          writeOnly: true
        projectId:
          type: string
          description: The ID of the project
          writeOnly: true
      additionalProperties: false
      description: Issue security scheme, project, and remapping details
    ScreenTypes:
      required:
      - default
      type: object
      properties:
        default:
          type: integer
          description: The ID of the default screen. Required when creating a screen
            scheme
          format: int64
        view:
          type: integer
          description: The ID of the view screen
          format: int64
        edit:
          type: integer
          description: The ID of the edit screen
          format: int64
        create:
          type: integer
          description: The ID of the create screen
          format: int64
      additionalProperties: false
      description: The IDs of the screens for the screen types of the screen scheme
      writeOnly: true
    BulkIssueResults:
      type: object
      properties:
        issueErrors:
          type: array
          description: When Jira can't return an issue enumerated in a request due
            to a retriable error or payload constraint, we'll return the respective
            issue ID with a corresponding error message. This list is empty when there
            are no errors Issues which aren't found or that the user doesn't have
            permission to view won't be returned in this list
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueError'
        issues:
          type: array
          description: The list of issues
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueBean'
      additionalProperties: false
      description: The list of requested issues & fields
      xml:
        name: issue
    VersionApprover:
      type: object
      properties:
        accountId:
          type: string
          description: The Atlassian account ID of the approver.
          readOnly: true
        declineReason:
          type: string
          description: A description of why the user is declining the approval.
          readOnly: true
        description:
          type: string
          description: A description of what the user is approving within the specified
            version.
          readOnly: true
        status:
          type: string
          description: The status of the approval, which can be *PENDING*, *APPROVED*,
            or *DECLINED*
          readOnly: true
      additionalProperties: true
      description: Contains details about a version approver
    WorkflowTransitionRules:
      required:
      - workflowId
      type: object
      properties:
        postFunctions:
          type: array
          description: The list of post functions within the workflow
          items:
            $ref: '#/components/schemas/AppWorkflowTransitionRule'
        validators:
          type: array
          description: The list of validators within the workflow
          items:
            $ref: '#/components/schemas/AppWorkflowTransitionRule'
        conditions:
          type: array
          description: The list of conditions within the workflow
          items:
            $ref: '#/components/schemas/AppWorkflowTransitionRule'
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
      additionalProperties: false
      description: A workflow with transition rules
    NotificationSchemeNotificationDetailsPayload:
      type: object
      properties:
        parameter:
          type: string
          description: The parameter of the notification, should be eiither null if
            not required, or PCRI
        notificationType:
          type: string
          description: The type of notification
      additionalProperties: false
      description: The configuration for notification recipents
    CreateNotificationSchemeDetails:
      required:
      - name
      type: object
      properties:
        description:
          maxLength: 4000
          type: string
          description: The description of the notification scheme.
          writeOnly: true
        name:
          maxLength: 255
          type: string
          description: The name of the notification scheme. Must be unique (case-insensitive).
          writeOnly: true
        notificationSchemeEvents:
          type: array
          description: The list of notifications which should be added to the notification
            scheme.
          writeOnly: true
          items:
            $ref: '#/components/schemas/NotificationSchemeEventDetails'
      additionalProperties: true
      description: Details of an notification scheme
    DataClassificationTagBean:
      required:
      - id
      - status
      type: object
      properties:
        color:
          type: string
          description: The color of the data classification object
        guideline:
          type: string
          description: The guideline of the data classification object
        name:
          type: string
          description: The name of the data classification object
        description:
          type: string
          description: The description of the data classification object
        rank:
          type: integer
          description: The rank of the data classification object
          format: int32
        id:
          type: string
          description: The ID of the data classification object
        status:
          type: string
          description: The status of the data classification object
      additionalProperties: false
      description: The data classification
    WorkflowTransitionRulesUpdateErrors:
      required:
      - updateResults
      type: object
      properties:
        updateResults:
          type: array
          description: A list of workflows
          items:
            $ref: '#/components/schemas/WorkflowTransitionRulesUpdateErrorDetails'
      additionalProperties: false
      description: Details of any errors encountered while updating workflow transition
        rules
    NotificationSchemeEvent:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/NotificationEvent'
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/EventNotification'
      additionalProperties: false
      description: Details about a notification scheme event
    AutoCompleteSuggestion:
      type: object
      properties:
        displayName:
          type: string
          description: The display name of a suggested item. If `fieldValue` or `predicateValue`
            are provided, the matching text is highlighted with the HTML bold tag
        value:
          type: string
          description: The value of a suggested item
      additionalProperties: false
      description: A field auto-complete suggestion
    WorkflowTransitionProperty:
      required:
      - value
      type: object
      properties:
        id:
          type: string
          description: The ID of the transition property.
          readOnly: true
        key:
          type: string
          description: The key of the transition property. Also known as the name
            of the transition property.
          readOnly: true
        value:
          type: string
          description: The value of the transition property.
      additionalProperties: true
      description: Details about the server Jira is running on
    PageBeanComment:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Comment'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    CreateWorkflowCondition:
      type: object
      properties:
        configuration:
          type: object
          additionalProperties:
            description: EXPERIMENTAL. The configuration of the transition rule.
          description: EXPERIMENTAL. The configuration of the transition rule
        conditions:
          type: array
          description: The list of workflow conditions
          items:
            $ref: '#/components/schemas/CreateWorkflowCondition'
        type:
          type: string
          description: The type of the transition rule
        operator:
          type: string
          description: The compound condition operator
          enum:
          - AND
          - OR
      additionalProperties: false
      description: A workflow transition condition
    UpdateDefaultProjectClassificationBean:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the project classification
      additionalProperties: false
      description: The request for updating the default project classification level
    ConnectCustomFieldValues:
      type: object
      properties:
        updateValueList:
          type: array
          description: The list of custom field update details
          items:
            $ref: '#/components/schemas/ConnectCustomFieldValue'
      additionalProperties: false
      description: Details of updates for a custom field
      writeOnly: true
    SetDefaultResolutionRequest:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the new default issue resolution. Must be an existing
            ID or null. Setting this to null erases the default resolution setting
          writeOnly: true
      additionalProperties: false
      description: The new default issue resolution
    BulkContextualConfiguration:
      required:
      - customFieldId
      - fieldContextId
      - id
      type: object
      properties:
        fieldContextId:
          type: string
          description: The ID of the field context the configuration is associated
            with
          readOnly: true
        schema:
          description: The field value schema
        configuration:
          description: The field configuration
        customFieldId:
          type: string
          description: The ID of the custom field
        id:
          type: string
          description: The ID of the configuration
      additionalProperties: false
      description: Details of the contextual configuration for a custom field
    IssueCommentListRequestBean:
      required:
      - ids
      type: object
      properties:
        ids:
          uniqueItems: true
          type: array
          description: The list of comment IDs. A maximum of 1000 IDs can be specified
          items:
            type: integer
            format: int64
      additionalProperties: false
    AvailableDashboardGadgetsResponse:
      required:
      - gadgets
      type: object
      properties:
        gadgets:
          type: array
          description: The list of available gadgets
          readOnly: true
          items:
            $ref: '#/components/schemas/AvailableDashboardGadget'
      additionalProperties: false
      description: The list of available gadgets
    Priority:
      type: object
      properties:
        avatarId:
          type: integer
          description: The avatarId of the avatar for the issue priority. This parameter
            is nullable and when set, this avatar references the universal avatar
            APIs.
          format: int64
        description:
          type: string
          description: The description of the issue priority.
        iconUrl:
          type: string
          description: The URL of the icon for the issue priority.
        id:
          type: string
          description: The ID of the issue priority.
        isDefault:
          type: boolean
          description: Whether this priority is the default.
        name:
          type: string
          description: The name of the issue priority.
        schemes:
          description: Priority schemes associated with the issue priority.
          allOf:
          - $ref: '#/components/schemas/ExpandPrioritySchemePage'
        self:
          type: string
          description: The URL of the issue priority.
        statusColor:
          type: string
          description: The color used to indicate the issue priority.
      additionalProperties: true
      description: An issue priority
    VersionIssuesStatus:
      type: object
      properties:
        done:
          type: integer
          description: Count of issues with status *done*.
          format: int64
          readOnly: true
        inProgress:
          type: integer
          description: Count of issues with status *in progress*.
          format: int64
          readOnly: true
        toDo:
          type: integer
          description: Count of issues with status *to do*.
          format: int64
          readOnly: true
        unmapped:
          type: integer
          description: Count of issues with a status other than *to do*, *in progress*,
            and *done*.
          format: int64
          readOnly: true
      additionalProperties: true
      description: Counts of the number of issues in various statuses
    AvatarUrlsBean:
      type: object
      properties:
        48x48:
          type: string
          description: The URL of the item's 48x48 pixel avatar
          format: uri
        24x24:
          type: string
          description: The URL of the item's 24x24 pixel avatar
          format: uri
        16x16:
          type: string
          description: The URL of the item's 16x16 pixel avatar
          format: uri
        32x32:
          type: string
          description: The URL of the item's 32x32 pixel avatar
          format: uri
      additionalProperties: false
    IdOrKeyBean:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the referenced item
          format: int64
        key:
          type: string
          description: The key of the referenced item
      additionalProperties: false
    AnnouncementBannerConfiguration:
      type: object
      properties:
        visibility:
          type: string
          description: Visibility of the announcement banner
          readOnly: true
          enum:
          - PUBLIC
          - PRIVATE
        isEnabled:
          type: boolean
          description: Flag indicating if the announcement banner is enabled or not
          readOnly: true
        isDismissible:
          type: boolean
          description: Flag indicating if the announcement banner can be dismissed
            by the user
          readOnly: true
        message:
          type: string
          description: The text on the announcement banner
          readOnly: true
        hashId:
          type: string
          description: Hash of the banner data. The client detects updates by comparing
            hash IDs
          readOnly: true
      additionalProperties: false
      description: Announcement banner configuration
    StatusPayload:
      type: object
      properties:
        onConflict:
          type: string
          description: The conflict strategy for the status already exists. FAIL -
            Fail execution, this always needs to be unique; USE - Use the existing
            entity and ignore new entity parameters; NEW - Create a new entity
          enum:
          - FAIL
          - USE
          - NEW
        name:
          type: string
          description: The name of the status
        description:
          type: string
          description: The description of the status
        statusCategory:
          type: string
          description: The status category of the status. The value is case-sensitive
          enum:
          - TODO
          - IN_PROGRESS
          - DONE
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for creating a status
    Resolution:
      type: object
      properties:
        name:
          type: string
          description: The name of the issue resolution
        description:
          type: string
          description: The description of the issue resolution
        self:
          type: string
          description: The URL of the issue resolution
          format: uri
        id:
          type: string
          description: The ID of the issue resolution
      additionalProperties: false
      description: Details of an issue resolution
      xml:
        name: resolution
    CreateWorkflowTransitionRule:
      required:
      - type
      type: object
      properties:
        configuration:
          type: object
          additionalProperties:
            description: EXPERIMENTAL. The configuration of the transition rule.
          description: EXPERIMENTAL. The configuration of the transition rule
        type:
          type: string
          description: The type of the transition rule
      additionalProperties: false
      description: A workflow transition rule
    RequiredMappingByWorkflows:
      type: object
      properties:
        sourceWorkflowId:
          type: string
          description: The ID of the source workflow
        statusIds:
          uniqueItems: true
          type: array
          description: The status IDs requiring mapping
          items:
            type: string
            description: The status IDs requiring mapping.
        targetWorkflowId:
          type: string
          description: The ID of the target workflow
      additionalProperties: false
      description: The list of required status mappings by workflow
    ApprovalConfiguration:
      required:
      - active
      - conditionType
      - conditionValue
      - fieldId
      - transitionApproved
      - transitionRejected
      type: object
      properties:
        active:
          type: string
          description: Whether the approval configuration is active
          enum:
          - 'true'
          - 'false'
        conditionValue:
          type: string
          description: The number or percentage of approvals required for a request
            to be approved. If `conditionType` is `number`, the value must be 20 or
            less. If `conditionType` is `percent`, the value must be 100 or less
        conditionType:
          type: string
          description: How the required approval count is calculated. It may be configured
            to require a specific number of approvals, or approval by a percentage
            of approvers. If the approvers source field is Approver groups, you can
            configure how many approvals per group are required for the request to
            be approved. The number will be the same across all groups
          enum:
          - number
          - percent
          - numberPerPrincipal
        exclude:
          type: array
          description: A list of roles that should be excluded as possible approvers
          nullable: true
          items:
            type: string
            description: A list of roles that should be excluded as possible approvers.
            nullable: true
            enum:
            - assignee
            - reporter
          enum:
          - assignee
          - reporter
        transitionApproved:
          type: string
          description: The numeric ID of the transition to be executed if the request
            is approved
        fieldId:
          type: string
          description: The custom field ID of the "Approvers" or "Approver Groups"
            field
        prePopulatedFieldId:
          type: string
          description: The custom field ID of the field used to pre-populate the Approver
            field. Only supports the "Affected Services" field
          nullable: true
        transitionRejected:
          type: string
          description: The numeric ID of the transition to be executed if the request
            is declined
      additionalProperties: false
      description: The approval configuration of a status within a workflow. Applies
        only to Jira Service Management approvals
      nullable: true
    ProjectDataPolicies:
      type: object
      properties:
        projectDataPolicies:
          type: array
          description: List of projects with data policies
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectWithDataPolicy'
      additionalProperties: false
      description: Details about data policies for a list of projects
    CustomFieldContextDefaultValueReadOnly:
      required:
      - type
      type: object
      properties:
        text:
          type: string
          description: The default text. The maximum length is 255 characters
        type:
          type: string
      description: The default text for a read only custom field
    IssueUpdateMetadata:
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FieldMetadata'
          readOnly: true
      description: A list of editable field details
    ProjectIssueTypesHierarchyLevel:
      type: object
      properties:
        level:
          type: integer
          description: The level of the issue type hierarchy level
          format: int32
          readOnly: true
        name:
          type: string
          description: The name of the issue type hierarchy level
          readOnly: true
        entityId:
          type: string
          description: 'The ID of the issue type hierarchy level. This property is
            deprecated, see [Change notice: Removing hierarchy level IDs from next-gen
            APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/)'
          format: uuid
          readOnly: true
        issueTypes:
          type: array
          description: The list of issue types in the hierarchy level
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeInfo'
      additionalProperties: false
      description: Details of an issue type hierarchy level
    ReorderIssueResolutionsRequest:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          description: The list of resolution IDs to be reordered. Cannot contain
            duplicates nor after ID
          writeOnly: true
          items:
            type: string
            writeOnly: true
        after:
          type: string
          description: The ID of the resolution. Required if `position` isn't provided
          writeOnly: true
        position:
          type: string
          description: The position for issue resolutions to be moved to. Required
            if `after` isn't provided
          writeOnly: true
      additionalProperties: false
      description: Change the order of issue resolutions
    JExpEvaluateJiraExpressionResultBean:
      required:
      - value
      type: object
      properties:
        meta:
          description: Contains various characteristics of the performed expression
            evaluation
          allOf:
          - $ref: '#/components/schemas/JExpEvaluateMetaDataBean'
        value:
          description: The value of the evaluated expression. It may be a primitive
            JSON value or a Jira REST API object. (Some expressions do not produce
            any meaningful results—for example, an expression that returns a lambda
            function—if that's the case a simple string representation is returned.
            These string representations should not be relied upon and may change
            without notice.)
      additionalProperties: false
      description: The result of evaluating a Jira expression.This bean will be replacing
        `JiraExpressionResultBean` bean as part of new evaluate endpoint
    BulkChangelogResponseBean:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Continuation token to fetch the next page. If this result represents
            the last or the only page, this token will be null
          readOnly: true
        issueChangeLogs:
          type: array
          description: The list of issues changelogs
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueChangeLog'
      additionalProperties: false
      description: A page of changelogs which is designed to handle multiple issues
    IssueEntityProperties:
      type: object
      properties:
        entitiesIds:
          maxItems: 10000
          minItems: 1
          uniqueItems: true
          type: array
          description: A list of entity property IDs
          items:
            type: integer
            format: int64
        properties:
          maxProperties: 10
          minProperties: 1
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JsonNode'
          description: A list of entity property keys and values
      additionalProperties: false
      description: Lists of issues and entity properties. See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/)
        for more information
    KeywordOperand:
      required:
      - keyword
      type: object
      properties:
        keyword:
          type: string
          description: The keyword that is the operand value
          enum:
          - empty
      description: An operand that is a JQL keyword. See [Advanced searching - keywords
        reference](https://confluence.atlassian.com/jiracorecloud/advanced-searching-keywords-reference-765593717.html#Advancedsearching-keywordsreference-EMPTYEMPTY)
        for more information about operand keywords
    ProjectId:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the project
      additionalProperties: false
      description: Project ID details
      nullable: true
    IssueMatches:
      required:
      - matches
      type: object
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/IssueMatchesForJQL'
      additionalProperties: false
      description: A list of matched issues or errors for each JQL query, in the order
        the JQL queries were passed
    PageBeanIssueSecuritySchemeToProjectMapping:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueSecuritySchemeToProjectMapping'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    IssueBulkWatchOrUnwatchPayload:
      required:
      - selectedIssueIdsOrKeys
      type: object
      properties:
        selectedIssueIdsOrKeys:
          type: array
          description: List of issue IDs or keys which are to be bulk watched or unwatched.
            These IDs or keys can be from different projects and issue types
          writeOnly: true
          items:
            type: string
            writeOnly: true
      additionalProperties: false
      description: Issue Bulk Watch Or Unwatch Payload
    ContainerForProjectFeatures:
      type: object
      properties:
        features:
          type: array
          description: The project features
          items:
            $ref: '#/components/schemas/ProjectFeature'
      additionalProperties: false
      description: The list of features on a project
    ListWrapperCallbackGroupName:
      type: object
      additionalProperties: false
    StatusProjectIssueTypeUsage:
      type: object
      properties:
        id:
          type: string
          description: The issue type ID
      additionalProperties: false
      description: The list of issue types
    ProjectFeatureState:
      type: object
      properties:
        state:
          type: string
          description: The feature state
          enum:
          - ENABLED
          - DISABLED
          - COMING_SOON
      additionalProperties: false
      description: Details of the feature state
    VersionMoveBean:
      type: object
      properties:
        after:
          type: string
          description: The URL (self link) of the version after which to place the
            moved version. Cannot be used with `position`
          format: uri
        position:
          type: string
          description: An absolute position in which to place the moved version. Cannot
            be used with `after`
          enum:
          - Earlier
          - Later
          - First
          - Last
      additionalProperties: false
      xml:
        name: version
    ApplicationRole:
      type: object
      properties:
        defaultGroups:
          uniqueItems: true
          type: array
          description: The groups that are granted default access for this application
            role. As a group's name can change, use of `defaultGroupsDetails` is recommended
            to identify a groups
          items:
            type: string
        groupDetails:
          type: array
          description: The groups associated with the application role
          items:
            $ref: '#/components/schemas/GroupName'
        hasUnlimitedSeats:
          type: boolean
        groups:
          uniqueItems: true
          type: array
          description: The groups associated with the application role. As a group's
            name can change, use of `groupDetails` is recommended to identify a groups
          items:
            type: string
        remainingSeats:
          type: integer
          description: The count of users remaining on your license
          format: int32
        platform:
          type: boolean
          description: Indicates if the application role belongs to Jira platform
            (`jira-core`)
        selectedByDefault:
          type: boolean
          description: Determines whether this application role should be selected
            by default on user creation
        numberOfSeats:
          type: integer
          description: The maximum count of users on your license
          format: int32
        defaultGroupsDetails:
          type: array
          description: The groups that are granted default access for this application
            role
          items:
            $ref: '#/components/schemas/GroupName'
        userCount:
          type: integer
          description: The number of users counting against your license
          format: int32
        userCountDescription:
          type: string
          description: The [type of users](https://confluence.atlassian.com/x/lRW3Ng)
            being counted against your license
        name:
          type: string
          description: The display name of the application role
        defined:
          type: boolean
          description: Deprecated
        key:
          type: string
          description: The key of the application role
      additionalProperties: false
      description: Details of an application role
    NonWorkingDay:
      type: object
      properties:
        iso8601Date:
          type: string
        id:
          type: integer
          format: int64
      additionalProperties: false
    PaginatedResponseComment:
      type: object
      properties:
        total:
          type: integer
          format: int64
        maxResults:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        startAt:
          type: integer
          format: int64
      additionalProperties: false
    DateRangeFilterRequest:
      required:
      - dateAfter
      - dateBefore
      type: object
      properties:
        dateAfter:
          type: string
          description: List issues archived after a specified date, passed in the
            YYYY-MM-DD format
        dateBefore:
          type: string
          description: List issues archived before a specified date provided in the
            YYYY-MM-DD format
      additionalProperties: false
      description: List issues archived within a specified date range
    WorkingDaysConfig:
      type: object
      properties:
        sunday:
          type: boolean
        saturday:
          type: boolean
        nonWorkingDays:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NonWorkingDay'
        tuesday:
          type: boolean
        friday:
          type: boolean
        thursday:
          type: boolean
        timezoneId:
          type: string
        wednesday:
          type: boolean
        id:
          type: integer
          format: int64
        monday:
          type: boolean
      additionalProperties: false
      description: Working days configuration
    Transitions:
      type: object
      properties:
        expand:
          type: string
          description: Expand options that include additional transitions details
            in the response
          readOnly: true
          xml:
            attribute: true
        transitions:
          type: array
          description: List of issue transitions
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTransition'
      additionalProperties: false
      description: List of issue transitions
    IssueLimitReportResponseBean:
      type: object
      properties:
        issuesBreachingLimit:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
              format: int64
          description: A list of ids of issues breaching the limit and their field
            count
        issuesApproachingLimit:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
              format: int64
          description: A list of ids of issues approaching the limit and their field
            count
        limits:
          type: object
          additionalProperties:
            type: integer
            format: int32
          description: The fields and their defined limits
      additionalProperties: false
    TargetMandatoryFields:
      required:
      - fields
      type: object
      properties:
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Fields1'
          description: Contains the value of mandatory fields
          writeOnly: true
      additionalProperties: false
      description: Field mapping for mandatory fields in target
      nullable: true
      writeOnly: true
    ProjectLandingPageInfo:
      type: object
      properties:
        queueCategory:
          type: string
        queueId:
          type: integer
          format: int64
        projectKey:
          type: string
        queueName:
          type: string
        simplified:
          type: boolean
        simpleBoard:
          type: boolean
        projectType:
          type: string
        boardId:
          type: integer
          format: int64
        attributes:
          type: object
          additionalProperties:
            type: string
        boardName:
          type: string
        url:
          type: string
      additionalProperties: false
    WorkflowSchemeUpdateRequest:
      required:
      - description
      - id
      - name
      - version
      type: object
      properties:
        defaultWorkflowId:
          type: string
          description: The ID of the workflow for issue types without having a mapping
            defined in this workflow scheme. Only used in global-scoped workflow schemes.
            If the `defaultWorkflowId` isn't specified, this is set to *Jira Workflow
            (jira)*.
        description:
          type: string
          description: The new description for this workflow scheme.
        id:
          type: string
          description: The ID of this workflow scheme.
        name:
          type: string
          description: The new name for this workflow scheme.
        statusMappingsByIssueTypeOverride:
          type: array
          description: Overrides, for the selected issue types, any status mappings
            provided in `statusMappingsByWorkflows`. Status mappings are required
            when the new workflow for an issue type doesn't contain all statuses that
            the old workflow has. Status mappings can be provided by a combination
            of `statusMappingsByWorkflows` and `statusMappingsByIssueTypeOverride`.
          items:
            $ref: '#/components/schemas/MappingsByIssueTypeOverride'
        statusMappingsByWorkflows:
          type: array
          description: The status mappings by workflows. Status mappings are required
            when the new workflow for an issue type doesn't contain all statuses that
            the old workflow has. Status mappings can be provided by a combination
            of `statusMappingsByWorkflows` and `statusMappingsByIssueTypeOverride`.
          items:
            $ref: '#/components/schemas/MappingsByWorkflow'
        version:
          $ref: '#/components/schemas/DocumentVersion'
        workflowsForIssueTypes:
          type: array
          description: Mappings from workflows to issue types.
          items:
            $ref: '#/components/schemas/WorkflowSchemeAssociation'
      additionalProperties: true
      description: The update workflow scheme payload
    ErrorCollections:
      type: object
      additionalProperties: false
    IssueTypeInfo:
      type: object
      properties:
        avatarId:
          type: integer
          description: The avatar of the issue type
          format: int64
          readOnly: true
        name:
          type: string
          description: The name of the issue type
          readOnly: true
        id:
          type: integer
          description: The ID of the issue type
          format: int64
          readOnly: true
      additionalProperties: false
      description: Details of an issue type
    FieldConfiguration:
      required:
      - description
      - id
      - name
      type: object
      properties:
        isDefault:
          type: boolean
          description: Whether the field configuration is the default
        name:
          type: string
          description: The name of the field configuration
        description:
          type: string
          description: The description of the field configuration
        id:
          type: integer
          description: The ID of the field configuration
          format: int64
      additionalProperties: false
      description: Details of a field configuration
    ChangedWorklog:
      type: object
      properties:
        updatedTime:
          type: integer
          description: The datetime of the change
          format: int64
          readOnly: true
        worklogId:
          type: integer
          description: The ID of the worklog
          format: int64
          readOnly: true
        properties:
          type: array
          description: Details of properties associated with the change
          readOnly: true
          items:
            $ref: '#/components/schemas/EntityProperty'
      additionalProperties: false
      description: Details of a changed worklog
    BulkOperationErrorResult:
      type: object
      properties:
        elementErrors:
          $ref: '#/components/schemas/ErrorCollection'
        failedElementNumber:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
      additionalProperties: false
    IssueTypeScreenSchemePayload:
      type: object
      properties:
        name:
          type: string
          description: The name of the issue type screen scheme
          example: My Issue Type Screen Scheme
        description:
          type: string
          description: The description of the issue type screen scheme
          example: This is an issue type screen scheme
        defaultScreenScheme:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        explicitMappings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
          description: The IDs of the screen schemes for the issue type IDs and default.
            A default entry is required to create an issue type screen scheme, it
            defines the mapping for all issue types without a screen scheme
      additionalProperties: false
      description: Defines the payload for the issue type screen schemes. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-type-screen-schemes/\#api-rest-api-3-issuetypescreenscheme-post
      nullable: true
    UpdateProjectsInSchemeRequestBean:
      type: object
      properties:
        add:
          description: Projects to add to a scheme
          allOf:
          - $ref: '#/components/schemas/PrioritySchemeChangesWithoutMappings'
        remove:
          description: Projects to remove from a scheme
          allOf:
          - $ref: '#/components/schemas/PrioritySchemeChangesWithoutMappings'
      additionalProperties: true
      description: Update projects in a scheme
      writeOnly: true
    CustomFieldContextDefaultValueForgeDateTimeField:
      required:
      - contextId
      - type
      type: object
      properties:
        dateTime:
          type: string
          description: The default date-time in ISO format. Ignored if `useCurrent`
            is true
        contextId:
          type: string
          description: The ID of the context
        useCurrent:
          type: boolean
          description: Whether to use the current date
          default: false
        type:
          type: string
      description: The default value for a Forge date time custom field
    IssueBulkMovePayload:
      required:
      - targetToMultipleSourceMapping
      type: object
      properties:
        sendBulkNotification:
          type: boolean
          description: |-
            A boolean value that indicates whether to send a bulk change notification when the issues are being moved.

            If `true`, dispatches a bulk notification email to users about the updates
          nullable: true
          writeOnly: true
          default: true
        targetToSourcesMapping:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TargetToSourcesMapping'
          description: |-
            An object representing the mapping of issues and data related to destination entities, like fields and statuses, that are required during a bulk move.

            The key is a string that is created by concatenating the following three entities in order, separated by commas. The format is `<project ID or key>,<issueType ID>,<parent ID or key>`. It should be unique across mappings provided in the payload. If you provide multiple mappings for the same key, only one will be processed. However, the operation won't fail, so the error may be hard to track down.

             *  ***Destination project*** (Required): ID or key of the project to which the issues are being moved.
             *  ***Destination issueType*** (Required): ID of the issueType to which the issues are being moved.
             *  ***Destination parent ID or key*** (Optional): ID or key of the issue which will become the parent of the issues being moved. Only required when the destination issueType is a subtask
      additionalProperties: false
      description: Issue Bulk Move Payload
    ConnectWorkflowTransitionRule:
      required:
      - configuration
      - id
      - key
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/RuleConfiguration'
        id:
          type: string
          description: The ID of the transition rule
          example: '123'
        key:
          type: string
          description: The key of the rule, as defined in the Connect app descriptor
          example: WorkflowKey
        transition:
          $ref: '#/components/schemas/WorkflowTransition'
      description: A workflow transition rule
    LegacyJackson1ListIssueEvent:
      type: array
      items:
        $ref: '#/components/schemas/IssueEvent'
    CreateWorkflowDetails:
      required:
      - name
      - statuses
      - transitions
      type: object
      properties:
        name:
          type: string
          description: The name of the workflow. The name must be unique. The maximum
            length is 255 characters. Characters can be separated by a whitespace
            but the name cannot start or end with a whitespace
        description:
          type: string
          description: The description of the workflow. The maximum length is 1000
            characters
        statuses:
          uniqueItems: true
          type: array
          description: The statuses of the workflow. Any status that does not include
            a transition is added to the workflow without a transition
          items:
            $ref: '#/components/schemas/CreateWorkflowStatusDetails'
        transitions:
          type: array
          description: |-
            The transitions of the workflow. For the request to be valid, these transitions must:

             *  include one *initial* transition.
             *  not use the same name for a *global* and *directed* transition.
             *  have a unique name for each *global* transition.
             *  have a unique 'to' status for each *global* transition.
             *  have unique names for each transition from a status.
             *  not have a 'from' status on *initial* and *global* transitions.
             *  have a 'from' status on *directed* transitions.

            All the transition statuses must be included in `statuses`
          items:
            $ref: '#/components/schemas/CreateWorkflowTransitionDetails'
      additionalProperties: false
      description: The details of a workflow
      writeOnly: true
    ProjectWithDataPolicy:
      type: object
      properties:
        dataPolicy:
          description: Data policy
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/ProjectDataPolicy'
        id:
          type: integer
          description: The project ID
          format: int64
          readOnly: true
      additionalProperties: false
      description: Details about data policies for a project
    IssueFieldOptionConfiguration:
      type: object
      properties:
        scope:
          description: Defines the projects that the option is available in. If the
            scope is not defined, then the option is available in all projects
          allOf:
          - $ref: '#/components/schemas/IssueFieldOptionScopeBean'
        attributes:
          uniqueItems: true
          type: array
          description: DEPRECATED
          items:
            type: string
            enum:
            - notSelectable
            - defaultValue
      additionalProperties: false
      description: Details of the projects the option is available in
    CreateCustomFieldContext:
      required:
      - name
      type: object
      properties:
        issueTypeIds:
          type: array
          description: The list of issue types IDs for the context. If the list is
            empty, the context refers to all issue types
          items:
            type: string
        name:
          type: string
          description: The name of the context
        description:
          type: string
          description: The description of the context
        id:
          type: string
          description: The ID of the context
          readOnly: true
        projectIds:
          type: array
          description: The list of project IDs associated with the context. If the
            list is empty, the context is global
          items:
            type: string
      additionalProperties: false
      description: The details of a created custom field context
    IconBean:
      type: object
      properties:
        url16x16:
          type: string
          description: The URL of a 16x16 pixel icon
        link:
          type: string
          description: The URL of the tooltip, used only for a status icon
        title:
          type: string
          description: The title of the icon, for use as a tooltip on the icon
      additionalProperties: false
      description: An icon
      xml:
        name: icon
    CustomFieldContextDefaultValueForgeObjectField:
      required:
      - type
      type: object
      properties:
        type:
          type: string
        object:
          type: object
          description: The default JSON object
      description: The default value for a Forge object custom field
    ScopePayload:
      type: object
      properties:
        type:
          type: string
          description: The type of the scope. Use `GLOBAL` or empty for company-managed
            project, and `PROJECT` for team-managed project
          enum:
          - GLOBAL
          - PROJECT
      additionalProperties: false
      description: The payload for creating a scope. Defines if a project is team-managed
        project or company-managed project
      nullable: true
    SingleRedactionResponse:
      required:
      - externalId
      - successful
      type: object
      properties:
        externalId:
          type: string
          description: An unique id for the redaction request
          format: uuid
        successful:
          type: boolean
          description: Indicates if redaction was success/failure
      additionalProperties: false
      description: Result for requested redactions
    StatusCategory:
      type: object
      properties:
        colorName:
          type: string
          description: The name of the color used to represent the status category.
          readOnly: true
        id:
          type: integer
          description: The ID of the status category.
          format: int64
          readOnly: true
        key:
          type: string
          description: The key of the status category.
          readOnly: true
        name:
          type: string
          description: The name of the status category.
          readOnly: true
        self:
          type: string
          description: The URL of the status category.
          readOnly: true
      additionalProperties: true
      description: A status category
    WorkflowSearchResponse:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
        isLast:
          type: boolean
          description: Whether this is the last page
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
        values:
          type: array
          description: List of workflows
          items:
            $ref: '#/components/schemas/JiraWorkflow'
        self:
          type: string
          description: The URL of the page
        statuses:
          type: array
          description: List of statuses
          items:
            $ref: '#/components/schemas/JiraWorkflowStatus'
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
      additionalProperties: false
      description: Page of items, including workflows and related statuses
    LicensedApplication:
      required:
      - id
      - plan
      type: object
      properties:
        id:
          type: string
          description: The ID of the application
          readOnly: true
        plan:
          type: string
          description: The licensing plan
          readOnly: true
          enum:
          - UNLICENSED
          - FREE
          - PAID
      additionalProperties: false
      description: Details about a licensed Jira application
    CreateIssueSourceRequest:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
          description: The issue source type. This must be "Board", "Project" or "Filter"
          enum:
          - Board
          - Project
          - Filter
        value:
          type: integer
          description: The issue source value. This must be a board ID if the type
            is "Board", a project ID if the type is "Project" or a filter ID if the
            type is "Filter"
          format: int64
      additionalProperties: false
    ChangedValueBean:
      type: object
      properties:
        changedTo:
          type: string
          description: The value of the field after the change
          readOnly: true
        fieldName:
          type: string
          description: The name of the field changed
          readOnly: true
        changedFrom:
          type: string
          description: The value of the field before the change
          readOnly: true
      additionalProperties: false
      description: Details of names changed in the record event
    BulkIssuePropertyUpdateRequest:
      type: object
      properties:
        filter:
          description: The bulk operation filter
          allOf:
          - $ref: '#/components/schemas/IssueFilterForBulkPropertySet'
        expression:
          type: string
          description: EXPERIMENTAL. The Jira expression to calculate the value of
            the property. The value of the expression must be an object that can be
            converted to JSON, such as a number, boolean, string, list, or map. The
            context variables available to the expression are `issue` and `user`.
            Issues for which the expression returns a value whose JSON representation
            is longer than 32768 characters are ignored
        value:
          description: The value of the property. The value must be a [valid](https://tools.ietf.org/html/rfc4627),
            non-empty JSON blob. The maximum length is 32768 characters
      additionalProperties: false
      description: Bulk issue property update request details
    PermissionsKeysBean:
      required:
      - permissions
      type: object
      properties:
        permissions:
          type: array
          description: A list of permission keys
          items:
            type: string
      additionalProperties: false
    ProjectIdAssociationContextAllOf2:
      type: object
      properties:
        identifier:
          type: integer
          format: int64
    AppWorkflowTransitionRule:
      required:
      - configuration
      - id
      - key
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/RuleConfiguration'
        id:
          type: string
          description: The ID of the transition rule
        key:
          type: string
          description: The key of the rule, as defined in the Connect or the Forge
            app descriptor
          readOnly: true
        transition:
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/WorkflowTransition'
      additionalProperties: false
      description: A workflow transition rule
    GetPlanResponse:
      required:
      - id
      - scheduling
      - status
      type: object
      properties:
        crossProjectReleases:
          type: array
          description: The cross-project releases included in the plan
          items:
            $ref: '#/components/schemas/GetCrossProjectReleaseResponse'
        customFields:
          type: array
          description: The custom fields for the plan
          items:
            $ref: '#/components/schemas/GetCustomFieldResponse'
        issueSources:
          type: array
          description: The issue sources included in the plan
          items:
            $ref: '#/components/schemas/GetIssueSourceResponse'
        permissions:
          type: array
          description: The permissions for the plan
          items:
            $ref: '#/components/schemas/GetPermissionResponse'
        name:
          type: string
          description: The plan name
        scheduling:
          description: The scheduling settings for the plan
          allOf:
          - $ref: '#/components/schemas/GetSchedulingResponse'
        id:
          type: integer
          description: The plan ID
          format: int64
        leadAccountId:
          type: string
          description: The account ID of the plan lead
        exclusionRules:
          description: The exclusion rules for the plan
          allOf:
          - $ref: '#/components/schemas/GetExclusionRulesResponse'
        lastSaved:
          type: string
          description: The date when the plan was last saved in UTC
        status:
          type: string
          description: The plan status. This is "Active", "Trashed" or "Archived"
          enum:
          - Active
          - Trashed
          - Archived
      additionalProperties: false
    ValueOperand:
      required:
      - value
      type: object
      properties:
        encodedValue:
          type: string
          description: Encoded value, which can be used directly in a JQL query
        value:
          type: string
          description: The operand value
      description: An operand that is a user-provided value
    RedactionPosition:
      required:
      - expectedText
      - from
      - to
      type: object
      properties:
        expectedText:
          type: string
          description: The text which will be redacted, encoded using SHA256 hash
            and Base64 digest
          example: ODFiNjM3ZDhmY2QyYzZkYTYzNTllNjk2MzExM2ExMTcwZGU3OTVlNGI3MjViODRkMWUwYjRjZmQ5ZWM1OGNlOQ==
        adfPointer:
          type: string
          description: The ADF pointer indicating the position of the text to be redacted.
            This is only required when redacting from rich text(ADF) fields. For plain
            text fields, this field can be omitted
          example: /content/0/content/0/text
        from:
          type: integer
          description: The start index(inclusive) for the redaction in specified content
          format: int32
          example: 14
        to:
          type: integer
          description: The ending index(exclusive) for the redaction in specified
            content
          format: int32
          example: 20
      additionalProperties: false
      description: Represents the position of the redaction
    IssueTypeSchemeID:
      required:
      - issueTypeSchemeId
      type: object
      properties:
        issueTypeSchemeId:
          type: string
          description: The ID of the issue type scheme
          readOnly: true
      additionalProperties: false
      description: The ID of an issue type scheme
    PageBeanIssueTypeToContextMapping:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeToContextMapping'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    MultipleCustomFieldValuesUpdateDetails:
      type: object
      properties:
        updates:
          type: array
          items:
            $ref: '#/components/schemas/MultipleCustomFieldValuesUpdate'
      additionalProperties: false
      description: List of updates for a custom fields
      writeOnly: true
    DefaultLevelValue:
      maxLength: 1000
      required:
      - defaultLevelId
      - issueSecuritySchemeId
      type: object
      properties:
        defaultLevelId:
          type: string
          description: The ID of the issue security level to set as default for the
            specified scheme. Providing null will reset the default level.
          writeOnly: true
        issueSecuritySchemeId:
          type: string
          description: The ID of the issue security scheme to set default level for.
          writeOnly: true
      additionalProperties: true
      description: Details of scheme and new default level
      writeOnly: true
    ScreenPayload:
      type: object
      properties:
        name:
          type: string
          description: The name of the screen
          example: My Screen
        tabs:
          type: array
          description: The tabs of the screen. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-screen-tab-fields/\#api-rest-api-3-screens-screenid-tabs-tabid-fields-post
          items:
            $ref: '#/components/schemas/TabPayload'
        description:
          type: string
          description: The description of the screen
          example: This is a screen
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: Defines the payload for the field screens. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-screens/\#api-rest-api-3-screens-post
      nullable: true
    SecuritySchemeLevelBean:
      required:
      - name
      type: object
      properties:
        isDefault:
          type: boolean
          description: Specifies whether the level is the default level. False by
            default
          writeOnly: true
        members:
          type: array
          description: The list of level members which should be added to the issue
            security scheme level
          writeOnly: true
          items:
            $ref: '#/components/schemas/SecuritySchemeLevelMemberBean'
        name:
          maxLength: 255
          type: string
          description: The name of the issue security scheme level. Must be unique
          writeOnly: true
        description:
          maxLength: 4000
          type: string
          description: The description of the issue security scheme level
          writeOnly: true
      additionalProperties: false
      writeOnly: true
    WorkflowTransitionRulesUpdateErrorDetails:
      required:
      - ruleUpdateErrors
      - updateErrors
      - workflowId
      type: object
      properties:
        updateErrors:
          uniqueItems: true
          type: array
          description: The list of errors that specify why the workflow update failed.
            The workflow was not updated if the list contains any entries
          items:
            type: string
            description: An error specifying why the workflow update failed.
        workflowId:
          $ref: '#/components/schemas/WorkflowId'
        ruleUpdateErrors:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: A list of transition rule update errors, indexed by the transition
              rule ID. Any transition rule that appears here wasn't updated.
            items:
              type: string
              description: A list of transition rule update errors, indexed by the
                transition rule ID. Any transition rule that appears here wasn't updated.
          description: A list of transition rule update errors, indexed by the transition
            rule ID. Any transition rule that appears here wasn't updated
      additionalProperties: false
      description: Details of any errors encountered while updating workflow transition
        rules for a workflow
    ScreenWithTab:
      type: object
      properties:
        tab:
          description: The tab for the screen
          allOf:
          - $ref: '#/components/schemas/ScreenableTab'
        scope:
          description: The scope of the screen
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the screen
          readOnly: true
        description:
          type: string
          description: The description of the screen
          readOnly: true
        id:
          type: integer
          description: The ID of the screen
          format: int64
          readOnly: true
      additionalProperties: false
      description: A screen with tab details
    LegacyJackson1ListProjectComponent:
      type: array
      items:
        $ref: '#/components/schemas/ProjectComponent'
    ErrorCollection:
      type: object
      properties:
        errorMessages:
          type: array
          description: The list of error messages produced by this operation. For
            example, "input parameter 'key' must be provided"
          items:
            type: string
        errors:
          type: object
          additionalProperties:
            type: string
          description: 'The list of errors by parameter returned by the operation.
            For example,"projectKey": "Project keys must start with an uppercase letter,
            followed by one or more uppercase alphanumeric characters."'
        status:
          type: integer
          format: int32
      additionalProperties: false
      description: Error messages from an operation
    JiraColorInput:
      required:
      - name
      type: object
      properties:
        name:
          type: string
      additionalProperties: false
    IssueContextVariable:
      required:
      - type
      type: object
      properties:
        id:
          type: integer
          description: The issue ID
          format: int64
        type:
          type: string
          description: Type of custom context variable
        key:
          type: string
          description: The issue key
      description: An [issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)
        specified by ID or key. All the fields of the issue object are available in
        the Jira expression
    NestedResponse:
      type: object
      properties:
        warningCollection:
          $ref: '#/components/schemas/WarningCollection'
        errorCollection:
          $ref: '#/components/schemas/ErrorCollection'
        status:
          type: integer
          format: int32
      additionalProperties: false
    AssociatedItemBean:
      type: object
      properties:
        parentName:
          type: string
          description: The name of the associated parent record
          readOnly: true
        name:
          type: string
          description: The name of the associated record
          readOnly: true
        typeName:
          type: string
          description: The type of the associated record
          readOnly: true
        id:
          type: string
          description: The ID of the associated record
          readOnly: true
        parentId:
          type: string
          description: The ID of the associated parent record
          readOnly: true
      additionalProperties: false
      description: Details of an item associated with the changed record
    JQLCountResultsBean:
      type: object
      properties:
        count:
          type: integer
          description: Number of issues matching JQL query
          format: int64
      additionalProperties: false
    LegacyJackson1ListColumnItem:
      type: array
      items:
        $ref: '#/components/schemas/ColumnItem'
    LegacyJackson1ListUserMigrationBean:
      type: array
      items:
        $ref: '#/components/schemas/UserMigrationBean'
    PageBeanPriority:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Priority'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    Attachment:
      type: object
      properties:
        author:
          description: Details of the user who added the attachment.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserDetails'
        content:
          type: string
          description: The content of the attachment.
          readOnly: true
        created:
          type: string
          description: The datetime the attachment was created.
          format: date-time
          readOnly: true
        filename:
          type: string
          description: The file name of the attachment.
          readOnly: true
        id:
          type: string
          description: The ID of the attachment.
          readOnly: true
        mimeType:
          type: string
          description: The MIME type of the attachment.
          readOnly: true
        self:
          type: string
          description: The URL of the attachment details response.
          readOnly: true
        size:
          type: integer
          description: The size of the attachment.
          format: int64
          readOnly: true
        thumbnail:
          type: string
          description: The URL of a thumbnail representing the attachment.
          readOnly: true
      additionalProperties: true
      description: Details about an attachment
    NotificationSchemeEventDetails:
      required:
      - event
      - notifications
      type: object
      properties:
        event:
          description: The ID of the event.
          allOf:
          - $ref: '#/components/schemas/NotificationSchemeEventTypeId'
        notifications:
          maxLength: 255
          type: array
          description: The list of notifications mapped to a specified event.
          writeOnly: true
          items:
            $ref: '#/components/schemas/NotificationSchemeNotificationDetails'
      additionalProperties: true
      description: Details of a notification scheme event
      writeOnly: true
    JiraSelectedOptionField:
      type: object
      properties:
        optionId:
          type: integer
          format: int64
      additionalProperties: false
    BulkOperationProgress:
      type: object
      properties:
        submittedBy:
          $ref: '#/components/schemas/User'
        invalidOrInaccessibleIssueCount:
          type: integer
          description: The number of issues that are either invalid or issues that
            the user doesn't have permission to view, regardless of the success or
            failure of the operation
          format: int32
        failedAccessibleIssues:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Map of issue IDs for which the operation failed and that the
            user has permission to view, to their one or more reasons for failure.
            These reasons are open-ended text descriptions of the error and are not
            selected from a predefined list of standard reasons
        created:
          type: string
          description: A timestamp of when the task was submitted
          format: date-time
        totalIssueCount:
          type: integer
          description: The number of issues that the bulk operation was attempted
            on
          format: int32
        progressPercent:
          type: integer
          description: Progress of the task as a percentage
          format: int64
        started:
          type: string
          description: A timestamp of when the task was started
          format: date-time
        updated:
          type: string
          description: A timestamp of when the task progress was last updated
          format: date-time
        taskId:
          type: string
          description: The ID of the task
          readOnly: true
        processedAccessibleIssues:
          type: array
          description: List of issue IDs for which the operation was successful and
            that the user has permission to view
          items:
            type: integer
            format: int64
        status:
          type: string
          description: The status of the task
          enum:
          - ENQUEUED
          - RUNNING
          - COMPLETE
          - FAILED
          - CANCEL_REQUESTED
          - CANCELLED
          - DEAD
      additionalProperties: false
    DefaultShareScope:
      required:
      - scope
      type: object
      properties:
        scope:
          type: string
          description: |-
            The scope of the default sharing for new filters and dashboards:

             *  `AUTHENTICATED` Shared with all logged-in users.
             *  `GLOBAL` Shared with all logged-in users. This shows as `AUTHENTICATED` in the response.
             *  `PRIVATE` Not shared with any users
          enum:
          - GLOBAL
          - AUTHENTICATED
          - PRIVATE
      additionalProperties: false
      description: Details of the scope of the default sharing for new filters and
        dashboards
      xml:
        name: defaultShareScope
    FieldIdentifierObject:
      required:
      - type
      type: object
      properties:
        identifier:
          type: object
        type:
          type: string
      additionalProperties: false
      description: Identifier for a field for example FIELD\_ID
      writeOnly: true
      discriminator:
        propertyName: type
    Version:
      type: object
      properties:
        releaseDate:
          type: string
          description: The release date of the version. Expressed in ISO 8601 format
            (yyyy-mm-dd). Optional when creating or updating a version
          format: date
        approvers:
          type: array
          description: If the expand option `approvers` is used, returns a list containing
            the approvers for this version
          readOnly: true
          items:
            $ref: '#/components/schemas/VersionApprover'
        description:
          type: string
          description: The description of the version. Optional when creating or updating
            a version. The maximum size is 16,384 bytes
        project:
          type: string
          description: Deprecated. Use `projectId`
        archived:
          type: boolean
          description: Indicates that the version is archived. Optional when creating
            or updating a version
        expand:
          type: string
          description: |-
            Use [expand](em>#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:

             *  `operations` Returns the list of operations available for this version.
             *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property contains a count of issues with a status other than *to do*, *in progress*, and *done*.
             *  `driver` Returns the Atlassian account ID of the version driver.
             *  `approvers` Returns a list containing approvers for this version.

            Optional for create and update
          xml:
            attribute: true
        operations:
          type: array
          description: If the expand option `operations` is used, returns the list
            of operations available for this version
          readOnly: true
          items:
            $ref: '#/components/schemas/SimpleLink'
        driver:
          type: string
          description: If the expand option `driver` is used, returns the Atlassian
            account ID of the driver
          readOnly: true
        overdue:
          type: boolean
          description: Indicates that the version is overdue
          readOnly: true
        name:
          type: string
          description: The unique name of the version. Required when creating a version.
            Optional when updating a version. The maximum length is 255 characters
        moveUnfixedIssuesTo:
          type: string
          description: The URL of the self link to the version to which all unfixed
            issues are moved when a version is released. Not applicable when creating
            a version. Optional when updating a version
          format: uri
        self:
          type: string
          description: The URL of the version
          format: uri
          readOnly: true
        userReleaseDate:
          type: string
          description: The date on which work on this version is expected to finish,
            expressed in the instance's *Day/Month/Year Format* date format
          readOnly: true
        id:
          type: string
          description: The ID of the version
          readOnly: true
        userStartDate:
          type: string
          description: The date on which work on this version is expected to start,
            expressed in the instance's *Day/Month/Year Format* date format
          readOnly: true
        projectId:
          type: integer
          description: The ID of the project to which this version is attached. Required
            when creating a version. Not applicable when updating a version
          format: int64
        released:
          type: boolean
          description: Indicates that the version is released. If the version is released
            a request to release again is ignored. Not applicable when creating a
            version. Optional when updating a version
        startDate:
          type: string
          description: The start date of the version. Expressed in ISO 8601 format
            (yyyy-mm-dd). Optional when creating or updating a version
          format: date
        issuesStatusForFixVersion:
          description: If the expand option `issuesstatus` is used, returns the count
            of issues in this version for each of the status categories *to do*, *in
            progress*, *done*, and *unmapped*. The *unmapped* property contains a
            count of issues with a status other than *to do*, *in progress*, and *done*
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/VersionIssuesStatus'
      additionalProperties: false
      description: Details about a project version
      xml:
        name: version
    WorkflowUpdate:
      maximum: 20
      required:
      - id
      - statuses
      - transitions
      - version
      type: object
      properties:
        defaultStatusMappings:
          type: array
          description: The mapping of old to new status ID.
          items:
            $ref: '#/components/schemas/StatusMigration'
        description:
          type: string
          description: The new description for this workflow.
        id:
          type: string
          description: The ID of this workflow.
        loopedTransitionContainerLayout:
          $ref: '#/components/schemas/WorkflowLayout'
        startPointLayout:
          $ref: '#/components/schemas/WorkflowLayout'
        statusMappings:
          type: array
          description: The mapping of old to new status ID for a specific project
            and issue type.
          items:
            $ref: '#/components/schemas/StatusMappingDTO'
        statuses:
          type: array
          description: The statuses associated with this workflow.
          items:
            $ref: '#/components/schemas/StatusLayoutUpdate'
        transitions:
          type: array
          description: The transitions of this workflow.
          items:
            $ref: '#/components/schemas/TransitionUpdateDTO'
        version:
          $ref: '#/components/schemas/DocumentVersion'
      additionalProperties: true
      description: The details of the workflows to update
    ArchiveIssueAsyncRequest:
      type: object
      properties:
        jql:
          type: string
      additionalProperties: false
    WorkflowValidationErrorList:
      type: object
      properties:
        errors:
          type: array
          description: The list of validation errors
          items:
            $ref: '#/components/schemas/WorkflowValidationError'
      additionalProperties: false
    SecurityScheme:
      type: object
      properties:
        name:
          type: string
          description: The name of the issue security scheme
          readOnly: true
        defaultSecurityLevelId:
          type: integer
          description: The ID of the default security level
          format: int64
          readOnly: true
        description:
          type: string
          description: The description of the issue security scheme
          readOnly: true
        self:
          type: string
          description: The URL of the issue security scheme
          readOnly: true
        id:
          type: integer
          description: The ID of the issue security scheme
          format: int64
          readOnly: true
        levels:
          type: array
          items:
            $ref: '#/components/schemas/SecurityLevel'
      additionalProperties: false
      description: Details about a security scheme
    PageBeanCustomFieldContextDefaultValue:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/CustomFieldContextDefaultValue'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    PageBeanNotificationSchemeAndProjectMappingJsonBean:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/NotificationSchemeAndProjectMappingJsonBean'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    SimpleUsage:
      required:
      - issueTypeIds
      - projectId
      type: object
      properties:
        issueTypeIds:
          type: array
          description: The issue type IDs for the usage
          items:
            type: string
            description: The issue type IDs for the usage.
        projectId:
          type: string
          description: The project ID for the usage
      additionalProperties: false
      description: Represents a usage of an entity by a project ID and related issue
        type IDs
      nullable: true
    WorkspaceDataPolicy:
      type: object
      properties:
        anyContentBlocked:
          type: boolean
          description: Whether the workspace contains any content inaccessible to
            the requesting application
          readOnly: true
      additionalProperties: false
      description: Details about data policy
    DashboardGadgetResponse:
      required:
      - gadgets
      type: object
      properties:
        gadgets:
          type: array
          description: The list of gadgets
          readOnly: true
          items:
            $ref: '#/components/schemas/DashboardGadget'
      additionalProperties: false
      description: The list of gadgets on the dashboard
    PageWithCursorGetTeamResponseForPage:
      type: object
      properties:
        cursor:
          type: string
        total:
          type: integer
          format: int64
        last:
          type: boolean
        size:
          type: integer
          format: int32
        nextPageCursor:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/GetTeamResponseForPage'
      additionalProperties: false
    WorkflowPayload:
      type: object
      properties:
        startPointLayout:
          $ref: '#/components/schemas/WorkflowStatusLayoutPayload'
        onConflict:
          type: string
          description: The strategy to use if there is a conflict with another workflow
          enum:
          - FAIL
          - USE
          - NEW
          default: NEW
        loopedTransitionContainerLayout:
          $ref: '#/components/schemas/WorkflowStatusLayoutPayload'
        name:
          type: string
          description: The name of the workflow
          example: Software Simplified Workflow
        description:
          type: string
          description: The description of the workflow
          example: a software workflow
        statuses:
          type: array
          description: The statuses to be used in the workflow
          items:
            $ref: '#/components/schemas/WorkflowStatusPayload'
        transitions:
          type: array
          description: The transitions for the workflow
          items:
            $ref: '#/components/schemas/TransitionPayload'
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for creating workflow, see https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflows/\#api-rest-api-3-workflows-create-post
    JiraMultipleGroupPickerField:
      required:
      - fieldId
      - groups
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/JiraGroupInput'
        fieldId:
          type: string
      additionalProperties: false
    FieldUpdateOperation:
      type: object
      properties:
        add:
          description: The value to add to the field
          example: triaged
        set:
          description: The value to set in the field
          example: A new summary
        edit:
          description: The value to edit in the field
          example:
            originalEstimate: 1w 1d
            remainingEstimate: 4d
        copy:
          description: The field value to copy from another issue
          example:
            issuelinks:
              sourceIssues:
              - key: FP-5
        remove:
          description: The value to removed from the field
          example: blocker
      additionalProperties: false
      description: Details of an operation to perform on a field
    CustomFieldOptionUpdate:
      required:
      - id
      type: object
      properties:
        disabled:
          type: boolean
          description: Whether the option is disabled
        id:
          type: string
          description: The ID of the custom field option
        value:
          type: string
          description: The value of the custom field option
      additionalProperties: false
      description: Details of a custom field option for a context
    ParsedJqlQueries:
      required:
      - queries
      type: object
      properties:
        queries:
          minLength: 1
          type: array
          description: A list of parsed JQL queries
          items:
            $ref: '#/components/schemas/ParsedJqlQuery'
      additionalProperties: false
      description: A list of parsed JQL queries
    DefaultWorkflow:
      required:
      - workflow
      type: object
      properties:
        updateDraftIfNeeded:
          type: boolean
          description: Whether a draft workflow scheme is created or updated when
            updating an active workflow scheme. The draft is updated with the new
            default workflow. Defaults to `false`
        workflow:
          type: string
          description: The name of the workflow to set as the default workflow
      additionalProperties: false
      description: Details about the default workflow
    UpdateDefaultScreenScheme:
      required:
      - screenSchemeId
      type: object
      properties:
        screenSchemeId:
          type: string
          description: The ID of the screen scheme
          writeOnly: true
      additionalProperties: false
      description: The ID of a screen scheme
    PageOfWorklogs:
      type: object
      properties:
        maxResults:
          type: integer
          description: The maximum number of results that could be on the page.
          format: int32
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned on the page.
          format: int32
          readOnly: true
        total:
          type: integer
          description: The number of results on the page.
          format: int32
          readOnly: true
        worklogs:
          type: array
          description: List of worklogs.
          readOnly: true
          items:
            $ref: '#/components/schemas/Worklog'
      additionalProperties: true
      description: Paginated list of worklog details
    UiModificationDetails:
      required:
      - id
      - name
      - self
      type: object
      properties:
        data:
          type: string
          description: The data of the UI modification. The maximum size of the data
            is 50000 characters
          readOnly: true
        name:
          type: string
          description: The name of the UI modification. The maximum length is 255
            characters
          readOnly: true
        description:
          type: string
          description: The description of the UI modification. The maximum length
            is 255 characters
          readOnly: true
        self:
          type: string
          description: The URL of the UI modification
          readOnly: true
        contexts:
          type: array
          description: List of contexts of the UI modification. The maximum number
            of contexts is 1000
          readOnly: true
          items:
            $ref: '#/components/schemas/UiModificationContextDetails'
        id:
          type: string
          description: The ID of the UI modification
          readOnly: true
      additionalProperties: false
      description: The details of a UI modification
    CustomFieldContextDefaultValueTextField:
      required:
      - type
      type: object
      properties:
        text:
          type: string
          description: The default text. The maximum length is 254 characters
        type:
          type: string
      description: The default text for a text custom field
    Field:
      required:
      - id
      - name
      - schema
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/JsonTypeBean'
        stableId:
          type: string
          description: The stable ID of the field
        searcherKey:
          type: string
          description: The searcher key of the field. Returned for custom fields
        description:
          type: string
          description: The description of the field
        isUnscreenable:
          type: boolean
          description: Whether the field is shown on screen or not
        lastUsed:
          $ref: '#/components/schemas/FieldLastUsed'
        screensCount:
          type: integer
          description: Number of screens where the field is used
          format: int64
        contextsCount:
          type: integer
          description: Number of contexts where the field is used
          format: int64
        isLocked:
          type: boolean
          description: Whether the field is locked
        name:
          type: string
          description: The name of the field
        id:
          type: string
          description: The ID of the field
        projectsCount:
          type: integer
          description: Number of projects where the field is used
          format: int64
        key:
          type: string
          description: The key of the field
      additionalProperties: false
      description: Details of a field
    MultiIssueEntityProperties:
      type: object
      properties:
        issues:
          maxProperties: 100
          minProperties: 1
          type: array
          description: A list of issue IDs and their respective properties
          items:
            $ref: '#/components/schemas/IssueEntityPropertiesForMultiUpdate'
      additionalProperties: false
      description: A list of issues and their respective properties to set or update.
        See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/)
        for more information
    CreateWorkflowTransitionScreenDetails:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the screen
      additionalProperties: false
      description: The details of a transition screen
      writeOnly: true
    CustomFieldContextDefaultValueCascadingOption:
      required:
      - contextId
      - optionId
      - type
      type: object
      properties:
        contextId:
          type: string
          description: The ID of the context
        optionId:
          type: string
          description: The ID of the default option
        type:
          type: string
        cascadingOptionId:
          type: string
          description: The ID of the default cascading option
      description: The default value for a cascading select custom field
    WorkflowOperations:
      required:
      - canDelete
      - canEdit
      type: object
      properties:
        canEdit:
          type: boolean
          description: Whether the workflow can be updated
        canDelete:
          type: boolean
          description: Whether the workflow can be deleted
      additionalProperties: false
      description: Operations allowed on a workflow
    GetExclusionRulesResponse:
      required:
      - numberOfDaysToShowCompletedIssues
      type: object
      properties:
        workStatusIds:
          uniqueItems: true
          type: array
          description: The IDs of the work statuses excluded from the plan
          items:
            type: integer
            format: int64
        releaseIds:
          uniqueItems: true
          type: array
          description: The IDs of the releases excluded from the plan
          items:
            type: integer
            format: int64
        numberOfDaysToShowCompletedIssues:
          type: integer
          description: Issues completed this number of days ago are excluded from
            the plan
          format: int32
        issueTypeIds:
          uniqueItems: true
          type: array
          description: The IDs of the issue types excluded from the plan
          items:
            type: integer
            format: int64
        workStatusCategoryIds:
          uniqueItems: true
          type: array
          description: The IDs of the work status categories excluded from the plan
          items:
            type: integer
            format: int64
        issueIds:
          uniqueItems: true
          type: array
          description: The IDs of the issues excluded from the plan
          items:
            type: integer
            format: int64
      additionalProperties: false
    PriorityId:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the issue priority.
          readOnly: true
      additionalProperties: true
      description: The ID of an issue priority
    UserList:
      type: object
      properties:
        size:
          type: integer
          description: The number of items on the page
          format: int32
          readOnly: true
          xml:
            attribute: true
        end-index:
          type: integer
          description: The index of the last item returned on the page
          format: int32
          readOnly: true
          xml:
            name: end-index
            attribute: true
          x-ballerina-name: endIndex
        max-results:
          type: integer
          description: The maximum number of results that could be on the page
          format: int32
          readOnly: true
          xml:
            name: max-results
            attribute: true
          x-ballerina-name: maxResults
        start-index:
          type: integer
          description: The index of the first item returned on the page
          format: int32
          readOnly: true
          xml:
            name: start-index
            attribute: true
          x-ballerina-name: startIndex
        items:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/User'
      additionalProperties: false
      description: A paginated list of users sharing the filter. This includes users
        that are members of the groups or can browse the projects that the filter
        is shared with
    WorkflowUpdateRequest:
      type: object
      properties:
        statuses:
          maximum: 1000
          type: array
          description: The statuses to associate with the workflows
          items:
            $ref: '#/components/schemas/WorkflowStatusUpdate'
        workflows:
          maximum: 20
          type: array
          description: The details of the workflows to update
          items:
            $ref: '#/components/schemas/WorkflowUpdate'
      additionalProperties: false
      description: The update workflows payload
    WorkflowSchemeReadResponse:
      required:
      - id
      - name
      - scope
      - version
      - workflowsForIssueTypes
      type: object
      properties:
        defaultWorkflow:
          $ref: '#/components/schemas/WorkflowMetadataRestModel'
        workflowsForIssueTypes:
          type: array
          description: Mappings from workflows to issue types
          items:
            $ref: '#/components/schemas/WorkflowMetadataAndIssueTypeRestModel'
        scope:
          $ref: '#/components/schemas/WorkflowScope'
        name:
          type: string
          description: The name of the workflow scheme
        description:
          type: string
          description: The description of the workflow scheme
          nullable: true
        projectIdsUsingScheme:
          type: array
          description: |-
            Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

            The IDs of projects using the workflow scheme
          nullable: true
          items:
            type: string
            description: Deprecated. See the <a href="https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298">deprecation
              notice</a> for details.<p>The IDs of projects using the workflow scheme.
            nullable: true
        id:
          type: string
          description: The ID of the workflow scheme
        version:
          $ref: '#/components/schemas/DocumentVersion'
        taskId:
          type: string
          description: Indicates if there's an [asynchronous task](#async-operations)
            for this workflow scheme
          nullable: true
      additionalProperties: false
    ProjectDetails:
      type: object
      properties:
        simplified:
          type: boolean
          description: Whether or not the project is simplified
          readOnly: true
        avatarUrls:
          description: The URLs of the project's avatars
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/AvatarUrlsBean'
        projectCategory:
          description: The category the project belongs to
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UpdatedProjectCategory'
        name:
          type: string
          description: The name of the project
          readOnly: true
        self:
          type: string
          description: The URL of the project details
          readOnly: true
        id:
          type: string
          description: The ID of the project
        projectTypeKey:
          type: string
          description: The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes)
            of the project
          readOnly: true
          enum:
          - software
          - service_desk
          - business
        key:
          type: string
          description: The key of the project
          readOnly: true
      additionalProperties: false
      description: Details about a project
    BulkEditShareableEntityRequest:
      required:
      - action
      - entityIds
      type: object
      properties:
        changeOwnerDetails:
          description: The details of change owner action
          allOf:
          - $ref: '#/components/schemas/BulkChangeOwnerDetails'
        permissionDetails:
          description: The permission details to be changed
          allOf:
          - $ref: '#/components/schemas/PermissionDetails'
        extendAdminPermissions:
          type: boolean
          description: Whether the actions are executed by users with Administer Jira
            global permission
        action:
          type: string
          description: Allowed action for bulk edit shareable entity
          enum:
          - changeOwner
          - changePermission
          - addPermission
          - removePermission
        entityIds:
          uniqueItems: true
          type: array
          description: The id list of shareable entities to be changed
          items:
            type: integer
            format: int64
      additionalProperties: false
      description: Details of a request to bulk edit shareable entity
    PageBeanProjectDetails:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectDetails'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    WorkflowSchemeUsageDTO:
      type: object
      properties:
        workflowSchemes:
          $ref: '#/components/schemas/WorkflowSchemeUsagePage'
        workflowId:
          type: string
          description: The workflow ID
      additionalProperties: false
      description: Workflow schemes using the workflow
    IssueTypeScreenSchemesProjects:
      required:
      - issueTypeScreenScheme
      - projectIds
      type: object
      properties:
        issueTypeScreenScheme:
          description: Details of an issue type screen scheme
          allOf:
          - $ref: '#/components/schemas/IssueTypeScreenScheme'
        projectIds:
          type: array
          description: The IDs of the projects using the issue type screen scheme
          items:
            type: string
      additionalProperties: false
      description: Issue type screen scheme with a list of the projects that use it
    BulkRedactionResponse:
      required:
      - results
      type: object
      properties:
        results:
          uniqueItems: true
          type: array
          description: Result for requested redactions
          items:
            $ref: '#/components/schemas/SingleRedactionResponse'
      additionalProperties: false
    GetPermissionHolderResponse:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
          description: The permission holder type. This is "Group" or "AccountId"
          enum:
          - Group
          - AccountId
        value:
          type: string
          description: The permission holder value. This is a group name if the type
            is "Group" or an account ID if the type is "AccountId"
      additionalProperties: false
    SanitizedJqlQuery:
      type: object
      properties:
        accountId:
          maxLength: 128
          type: string
          description: The account ID of the user for whom sanitization was performed
          nullable: true
        initialQuery:
          type: string
          description: The initial query
        sanitizedQuery:
          type: string
          description: The sanitized query, if there were no errors
          nullable: true
        errors:
          description: The list of errors
          allOf:
          - $ref: '#/components/schemas/ErrorCollection'
      additionalProperties: false
      description: Details of the sanitized JQL query
    CustomFieldValueUpdate:
      required:
      - issueIds
      - value
      type: object
      properties:
        issueIds:
          type: array
          description: The list of issue IDs
          writeOnly: true
          items:
            type: integer
            format: int64
            writeOnly: true
        value:
          description: |-
            The value for the custom field. The value must be compatible with the [custom field type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#data-types) as follows:

             *  `string` the value must be a string.
             *  `number` the value must be a number.
             *  `datetime` the value must be a string that represents a date in the ISO format or the simplified extended ISO format. For example, `"2023-01-18T12:00:00-03:00"` or `"2023-01-18T12:00:00.000Z"`. However, the milliseconds part is ignored.
             *  `user` the value must be an object that contains the `accountId` field.
             *  `group` the value must be an object that contains the group `name` or `groupId` field. Because group names can change, we recommend using `groupId`.

            A list of appropriate values must be provided if the field is of the `list` [collection type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#collection-types)
      additionalProperties: false
      description: A list of issue IDs and the value to update a custom field to
      writeOnly: true
    PageBeanIssueTypeScreenSchemeItem:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeScreenSchemeItem'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    IssuesJqlMetaDataBean:
      required:
      - count
      - maxResults
      - startAt
      - totalCount
      type: object
      properties:
        validationWarnings:
          type: array
          description: Any warnings related to the JQL query. Present only if the
            validation mode was set to `warn`
          items:
            type: string
        maxResults:
          type: integer
          description: The maximum number of issues that could be loaded in this evaluation
          format: int32
        count:
          type: integer
          description: The number of issues that were loaded in this evaluation
          format: int32
        totalCount:
          type: integer
          description: The total number of issues the JQL returned
          format: int64
        startAt:
          type: integer
          description: The index of the first issue
          format: int64
      additionalProperties: false
      description: The description of the page of issues loaded by the provided JQL
        query
    VersionUsageInCustomField:
      type: object
      properties:
        fieldName:
          type: string
          description: The name of the custom field
          readOnly: true
        issueCountWithVersionInCustomField:
          type: integer
          description: Count of the issues where the custom field contains the version
          format: int64
          readOnly: true
        customFieldId:
          type: integer
          description: The ID of the custom field
          format: int64
          readOnly: true
      additionalProperties: false
      description: List of custom fields using the version
    ResolutionId:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the issue resolution.
          readOnly: true
      additionalProperties: true
      description: The ID of an issue resolution
    VersionUnresolvedIssuesCount:
      type: object
      properties:
        issuesUnresolvedCount:
          type: integer
          description: Count of unresolved issues
          format: int64
          readOnly: true
        self:
          type: string
          description: The URL of these count details
          format: uri
          readOnly: true
        issuesCount:
          type: integer
          description: Count of issues
          format: int64
          readOnly: true
      additionalProperties: false
      description: Count of a version's unresolved issues
      xml:
        name: version
    WorklogIdsRequestBean:
      required:
      - ids
      type: object
      properties:
        ids:
          uniqueItems: true
          type: array
          description: A list of worklog IDs
          items:
            type: integer
            format: int64
      additionalProperties: false
    LegacyJackson1ListIssueTypeWithStatus:
      type: array
      items:
        $ref: '#/components/schemas/IssueTypeWithStatus'
    RemoteIssueLink:
      type: object
      properties:
        application:
          description: Details of the remote application the linked item is in
          allOf:
          - $ref: '#/components/schemas/Application'
        globalId:
          type: string
          description: The global ID of the link, such as the ID of the item on the
            remote system
        self:
          type: string
          description: The URL of the link
          format: uri
        id:
          type: integer
          description: The ID of the link
          format: int64
        relationship:
          type: string
          description: Description of the relationship between the issue and the linked
            item
        object:
          description: Details of the item linked to
          allOf:
          - $ref: '#/components/schemas/RemoteObject'
      additionalProperties: false
      description: Details of an issue remote link
    RulePayload:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties:
            type: string
            description: The parameters of the rule
          description: The parameters of the rule
        ruleKey:
          type: string
          description: The key of the rule. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflows/\#api-rest-api-3-workflows-capabilities-get
          example: system:update-field
      additionalProperties: false
      description: The payload for creating rules in a workflow
    IssueTypeCreateBean:
      required:
      - name
      type: object
      properties:
        hierarchyLevel:
          type: integer
          description: |-
            The hierarchy level of the issue type. Use:

             *  `-1` for Subtask.
             *  `0` for Base.

            Defaults to `0`
          format: int32
        name:
          type: string
          description: The unique name for the issue type. The maximum length is 60
            characters
        description:
          type: string
          description: The description of the issue type
        type:
          type: string
          description: |-
            Deprecated. Use `hierarchyLevel` instead. See the [deprecation notice](https://community.developer.atlassian.com/t/deprecation-of-the-epic-link-parent-link-and-other-related-fields-in-rest-apis-and-webhooks/54048) for details.

            Whether the issue type is `subtype` or `standard`. Defaults to `standard`
          enum:
          - subtask
          - standard
      additionalProperties: false
    JiraMultipleSelectField:
      required:
      - fieldId
      - options
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/JiraSelectedOptionField'
        fieldId:
          type: string
      additionalProperties: false
    QuickFilterPayload:
      type: object
      properties:
        jqlQuery:
          type: string
          description: The jql query for the quick filter
        name:
          type: string
          description: The name of the quick filter
        description:
          type: string
          description: The description of the quick filter
      additionalProperties: false
      description: The payload for defining quick filters
    WorkflowUpdateValidateRequestBean:
      required:
      - payload
      type: object
      properties:
        validationOptions:
          $ref: '#/components/schemas/ValidationOptionsForUpdate'
        payload:
          $ref: '#/components/schemas/WorkflowUpdateRequest'
      additionalProperties: false
    TaskProgressBeanRemoveOptionFromIssuesResult:
      required:
      - elapsedRuntime
      - id
      - lastUpdate
      - progress
      - self
      - status
      - submitted
      - submittedBy
      type: object
      properties:
        submittedBy:
          type: integer
          description: The ID of the user who submitted the task
          format: int64
        description:
          type: string
          description: The description of the task
        finished:
          type: integer
          description: A timestamp recording when the task was finished
          format: int64
        started:
          type: integer
          description: A timestamp recording when the task was started
          format: int64
        message:
          type: string
          description: Information about the progress of the task
        result:
          description: The result of the task execution
          allOf:
          - $ref: '#/components/schemas/RemoveOptionFromIssuesResult'
        submitted:
          type: integer
          description: A timestamp recording when the task was submitted
          format: int64
        lastUpdate:
          type: integer
          description: A timestamp recording when the task progress was last updated
          format: int64
        progress:
          type: integer
          description: The progress of the task, as a percentage complete
          format: int64
        self:
          type: string
          description: The URL of the task
          format: uri
        id:
          type: string
          description: The ID of the task
        elapsedRuntime:
          type: integer
          description: The execution time of the task, in milliseconds
          format: int64
        status:
          type: string
          description: The status of the task
          enum:
          - ENQUEUED
          - RUNNING
          - COMPLETE
          - FAILED
          - CANCEL_REQUESTED
          - CANCELLED
          - DEAD
      additionalProperties: false
      description: Details about a task
    WorkflowCreateResponse:
      type: object
      properties:
        statuses:
          uniqueItems: true
          type: array
          description: List of created statuses
          items:
            $ref: '#/components/schemas/JiraWorkflowStatus'
        workflows:
          uniqueItems: true
          type: array
          description: List of created workflows
          items:
            $ref: '#/components/schemas/JiraWorkflow'
      additionalProperties: false
      description: Details of the created workflows and statuses
    ConditionGroupPayload:
      type: object
      properties:
        conditionGroup:
          type: array
          description: The nested conditions of the condition group
          items:
            $ref: '#/components/schemas/ConditionGroupPayload'
        conditions:
          type: array
          description: The rules for this condition
          items:
            $ref: '#/components/schemas/RulePayload'
        operation:
          type: string
          description: Determines how the conditions in the group are evaluated. Accepts
            either `ANY` or `ALL`. If `ANY` is used, at least one condition in the
            group must be true for the group to evaluate to true. If `ALL` is used,
            all conditions in the group must be true for the group to evaluate to
            true
          enum:
          - ANY
          - ALL
      additionalProperties: false
      description: The payload for creating a condition group in a workflow
    JiraCascadingSelectField:
      required:
      - fieldId
      - parentOptionValue
      type: object
      properties:
        childOptionValue:
          $ref: '#/components/schemas/JiraSelectedOptionField'
        parentOptionValue:
          $ref: '#/components/schemas/JiraSelectedOptionField'
        fieldId:
          type: string
      additionalProperties: false
    PageBeanContextForProjectAndIssueType:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/ContextForProjectAndIssueType'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    ParsedJqlQuery:
      minLength: 1
      required:
      - query
      type: object
      properties:
        query:
          type: string
          description: The JQL query that was parsed and validated
        warnings:
          uniqueItems: true
          type: array
          description: The list of warning messages
          items:
            type: string
        errors:
          uniqueItems: true
          type: array
          description: The list of syntax or validation errors
          items:
            type: string
        structure:
          description: The syntax tree of the query. Empty if the query was invalid
          allOf:
          - $ref: '#/components/schemas/JqlQuery'
      additionalProperties: false
      description: Details of a parsed JQL query
    PrioritySchemeWithPaginatedPrioritiesAndProjects:
      required:
      - id
      - name
      type: object
      properties:
        default:
          type: boolean
        defaultPriorityId:
          type: string
          description: The ID of the default issue priority.
        description:
          type: string
          description: The description of the priority scheme
        id:
          type: string
          description: The ID of the priority scheme.
        isDefault:
          type: boolean
          writeOnly: true
        name:
          type: string
          description: The name of the priority scheme
        priorities:
          description: The paginated list of priorities.
          allOf:
          - $ref: '#/components/schemas/PageBeanPriorityWithSequence'
        projects:
          description: The paginated list of projects.
          allOf:
          - $ref: '#/components/schemas/PageBeanProjectDetails'
        self:
          type: string
          description: The URL of the priority scheme.
      additionalProperties: true
      description: A priority scheme with paginated priorities and projects
    PageBeanSecurityLevelMember:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/SecurityLevelMember'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    IssueChangeLog:
      type: object
      properties:
        issueId:
          type: string
          description: The ID of the issue
          readOnly: true
        changeHistories:
          type: array
          description: List of changelogs that belongs to given issueId
          readOnly: true
          items:
            $ref: '#/components/schemas/Changelog'
      additionalProperties: false
      description: List of changelogs that belong to single issue
    RedactionJobStatusResponse:
      type: object
      properties:
        jobStatus:
          type: string
          enum:
          - PENDING
          - IN_PROGRESS
          - COMPLETED
        bulkRedactionResponse:
          $ref: '#/components/schemas/BulkRedactionResponse'
      additionalProperties: false
    PublishDraftWorkflowScheme:
      type: object
      properties:
        statusMappings:
          uniqueItems: true
          type: array
          description: Mappings of statuses to new statuses for issue types
          items:
            $ref: '#/components/schemas/StatusMapping'
      additionalProperties: false
      description: Details about the status mappings for publishing a draft workflow
        scheme
    FieldChangedClause:
      required:
      - field
      - operator
      - predicates
      type: object
      properties:
        predicates:
          type: array
          description: The list of time predicates
          items:
            $ref: '#/components/schemas/JqlQueryClauseTimePredicate'
        field:
          $ref: '#/components/schemas/JqlQueryField'
        operator:
          type: string
          description: The operator applied to the field
          enum:
          - changed
      description: A clause that asserts whether a field was changed. For example,
        `status CHANGED AFTER startOfMonth(-1M)`.See [CHANGED](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED)
        for more information about the CHANGED operator
    UpdateResolutionDetails:
      required:
      - name
      type: object
      properties:
        description:
          maxLength: 255
          type: string
          description: The description of the resolution.
          writeOnly: true
        name:
          maxLength: 60
          type: string
          description: The name of the resolution. Must be unique.
          writeOnly: true
      additionalProperties: true
      description: Details of an issue resolution
    AttachmentArchiveItemReadable:
      type: object
      properties:
        path:
          type: string
          description: The path of the archive item
          readOnly: true
        size:
          type: string
          description: The size of the archive item
          readOnly: true
        index:
          type: integer
          description: The position of the item within the archive
          format: int64
          readOnly: true
        mediaType:
          type: string
          description: The MIME type of the archive item
          readOnly: true
        label:
          type: string
          description: The label for the archive item
          readOnly: true
      additionalProperties: false
      description: Metadata for an item in an attachment archive
    SearchAndReconcileResults:
      type: object
      properties:
        schema:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JsonTypeBean'
          description: The schema describing the field types in the search results
          readOnly: true
        names:
          type: object
          additionalProperties:
            type: string
            readOnly: true
          description: The ID and name of each field in the search results
          readOnly: true
        isLast:
          type: boolean
          description: Indicates whether this is the last page of the paginated response
          readOnly: true
        nextPageToken:
          type: string
          description: Continuation token to fetch the next page. If this result represents
            the last or the only page this token will be null. This token will expire
            in 7 days
          readOnly: true
        issues:
          type: array
          description: The list of issues found by the search or reconsiliation
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueBean'
      additionalProperties: false
      description: The result of a JQL search with issues reconsilation
    Application:
      type: object
      properties:
        name:
          type: string
          description: The name of the application. Used in conjunction with the (remote)
            object icon title to display a tooltip for the link's icon. The tooltip
            takes the format "\[application name\] icon title". Blank items are excluded
            from the tooltip title. If both items are blank, the icon tooltop displays
            as "Web Link". Grouping and sorting of links may place links without an
            application name last.
        type:
          type: string
          description: The name-spaced type of the application, used by registered
            rendering apps.
      additionalProperties: true
      description: The application the linked item is in
    JExpEvaluateMetaDataBean:
      type: object
      properties:
        complexity:
          description: Contains information about the expression complexity. For example,
            the number of steps it took to evaluate the expression
          allOf:
          - $ref: '#/components/schemas/JiraExpressionsComplexityBean'
        issues:
          description: Contains information about the `issues` variable in the context.
            For example, is the issues were loaded with JQL, information about the
            page will be included here
          allOf:
          - $ref: '#/components/schemas/JExpEvaluateIssuesMetaBean'
      additionalProperties: false
      description: Contains information about the expression evaluation. This bean
        will be replacing `JiraExpressionEvaluationMetaDataBean` bean as part of new
        `evaluate` endpoint
    FilterDetails:
      required:
      - name
      type: object
      properties:
        owner:
          description: The user who owns the filter. Defaults to the creator of the
            filter, however, Jira administrators can change the owner of a shared
            filter in the admin settings
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        subscriptions:
          type: array
          description: The users that are subscribed to the filter
          readOnly: true
          items:
            $ref: '#/components/schemas/FilterSubscription'
        jql:
          type: string
          description: The JQL query for the filter. For example, *project = SSP AND
            issuetype = Bug*
          readOnly: true
        favouritedCount:
          type: integer
          description: The count of how many users have selected this filter as a
            favorite, including the filter owner
          format: int64
          readOnly: true
        approximateLastUsed:
          type: string
          description: \[Experimental\] Approximate last used time. Returns the date
            and time when the filter was last used. Returns `null` if the filter hasn't
            been used after tracking was enabled. For performance reasons, timestamps
            aren't updated in real time and therefore may not be exactly accurate
          format: date-time
          readOnly: true
        description:
          type: string
          description: The description of the filter
        favourite:
          type: boolean
          description: Whether the filter is selected as a favorite by any users,
            not including the filter owner
          readOnly: true
        expand:
          type: string
          description: Expand options that include additional filter details in the
            response
          readOnly: true
          xml:
            attribute: true
        editPermissions:
          type: array
          description: The groups and projects that can edit the filter. This can
            be specified when updating a filter, but not when creating a filter
          items:
            $ref: '#/components/schemas/SharePermission'
        name:
          type: string
          description: The name of the filter
        viewUrl:
          type: string
          description: A URL to view the filter results in Jira, using the ID of the
            filter. For example, *https://your-domain.atlassian.net/issues/?filter=10100*
          format: uri
          readOnly: true
        self:
          type: string
          description: The URL of the filter
          format: uri
          readOnly: true
        searchUrl:
          type: string
          description: A URL to view the filter results in Jira, using the [Search
            for issues using JQL](#api-rest-api-3-filter-search-get) operation with
            the filter's JQL string to return the filter results. For example, *https://your-domain.atlassian.net/rest/api/3/search?jql=project+%3D+SSP+AND+issuetype+%3D+Bug*
          format: uri
          readOnly: true
        id:
          type: string
          description: The unique identifier for the filter
          readOnly: true
        sharePermissions:
          type: array
          description: The groups and projects that the filter is shared with. This
            can be specified when updating a filter, but not when creating a filter
          items:
            $ref: '#/components/schemas/SharePermission'
      additionalProperties: false
      description: Details of a filter
    ProjectScopeBean:
      type: object
      properties:
        attributes:
          uniqueItems: true
          type: array
          description: Defines the behavior of the option in the project.If notSelectable
            is set, the option cannot be set as the field's value. This is useful
            for archiving an option that has previously been selected but shouldn't
            be used anymore.If defaultValue is set, the option is selected by default
          items:
            type: string
            enum:
            - notSelectable
            - defaultValue
        id:
          type: integer
          description: The ID of the project that the option's behavior applies to
          format: int64
      additionalProperties: false
    UpdateUiModificationDetails:
      type: object
      properties:
        data:
          type: string
          description: The data of the UI modification. The maximum size of the data
            is 50000 characters
          writeOnly: true
        name:
          type: string
          description: The name of the UI modification. The maximum length is 255
            characters
          writeOnly: true
        description:
          type: string
          description: The description of the UI modification. The maximum length
            is 255 characters
          writeOnly: true
        contexts:
          type: array
          description: List of contexts of the UI modification. The maximum number
            of contexts is 1000. If provided, replaces all existing contexts
          writeOnly: true
          items:
            $ref: '#/components/schemas/UiModificationContextDetails'
      additionalProperties: false
      description: The details of a UI modification
    WorkflowValidationError:
      type: object
      properties:
        code:
          type: string
          description: An error code
        level:
          type: string
          description: The validation error level
          enum:
          - WARNING
          - ERROR
        elementReference:
          $ref: '#/components/schemas/WorkflowElementReference'
        message:
          type: string
          description: An error message
        type:
          type: string
          description: The type of element the error or warning references
          enum:
          - RULE
          - STATUS
          - STATUS_LAYOUT
          - STATUS_PROPERTY
          - WORKFLOW
          - TRANSITION
          - TRANSITION_PROPERTY
          - SCOPE
          - STATUS_MAPPING
          - TRIGGER
      additionalProperties: false
      description: The details about a workflow validation error
    MultipleCustomFieldValuesUpdate:
      required:
      - customField
      - issueIds
      - value
      type: object
      properties:
        issueIds:
          type: array
          description: The list of issue IDs
          writeOnly: true
          items:
            type: integer
            format: int64
            writeOnly: true
        value:
          description: |-
            The value for the custom field. The value must be compatible with the [custom field type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#data-types) as follows:

             *  `string` the value must be a string.
             *  `number` the value must be a number.
             *  `datetime` the value must be a string that represents a date in the ISO format or the simplified extended ISO format. For example, `"2023-01-18T12:00:00-03:00"` or `"2023-01-18T12:00:00.000Z"`. However, the milliseconds part is ignored.
             *  `user` the value must be an object that contains the `accountId` field.
             *  `group` the value must be an object that contains the group `name` or `groupId` field. Because group names can change, we recommend using `groupId`.

            A list of appropriate values must be provided if the field is of the `list` [collection type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#collection-types)
        customField:
          type: string
          description: The ID or key of the custom field. For example, `customfield_10010`
          writeOnly: true
      additionalProperties: false
      description: A custom field and its new value with a list of issue to update
      writeOnly: true
    NotificationScheme:
      type: object
      properties:
        expand:
          type: string
          description: Expand options that include additional notification scheme
            details in the response
        projects:
          type: array
          description: The list of project IDs associated with the notification scheme
          items:
            type: integer
            format: int64
        scope:
          description: The scope of the notification scheme
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the notification scheme
        description:
          type: string
          description: The description of the notification scheme
        self:
          type: string
        id:
          type: integer
          description: The ID of the notification scheme
          format: int64
        notificationSchemeEvents:
          type: array
          description: The notification events and associated recipients
          items:
            $ref: '#/components/schemas/NotificationSchemeEvent'
      additionalProperties: false
      description: Details about a notification scheme
    NotificationSchemeAndProjectMappingJsonBean:
      type: object
      properties:
        notificationSchemeId:
          type: string
        projectId:
          type: string
      additionalProperties: false
    PageBeanIssueTypeSchemeProjects:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeSchemeProjects'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    TimeTrackingConfiguration:
      required:
      - defaultUnit
      - timeFormat
      - workingDaysPerWeek
      - workingHoursPerDay
      type: object
      properties:
        defaultUnit:
          type: string
          description: The default unit of time applied to logged time
          enum:
          - minute
          - hour
          - day
          - week
        workingHoursPerDay:
          type: number
          description: The number of hours in a working day
          format: double
        timeFormat:
          type: string
          description: The format that will appear on an issue's *Time Spent* field
          enum:
          - pretty
          - days
          - hours
        workingDaysPerWeek:
          type: number
          description: The number of days in a working week
          format: double
      additionalProperties: false
      description: Details of the time tracking configuration
    JQLQueryWithUnknownUsers:
      type: object
      properties:
        convertedQuery:
          type: string
          description: The converted query, with accountIDs instead of user identifiers,
            or 'unknown' for users that could not be found
        originalQuery:
          type: string
          description: The original query, for reference
      additionalProperties: false
      description: JQL queries that contained users that could not be found
    JiraStatusInput:
      required:
      - statusId
      type: object
      properties:
        statusId:
          type: string
      additionalProperties: false
    UpdatePriorityDetails:
      type: object
      properties:
        avatarId:
          type: integer
          description: The ID for the avatar for the priority. This parameter is nullable
            and both iconUrl and avatarId cannot be defined.
          format: int64
          writeOnly: true
        description:
          maxLength: 255
          type: string
          description: The description of the priority.
          nullable: true
          writeOnly: true
        iconUrl:
          maxLength: 255
          type: string
          description: The URL of an icon for the priority. Accepted protocols are
            HTTP and HTTPS. Built in icons can also be used. Both iconUrl and avatarId
            cannot be defined.
          nullable: true
          writeOnly: true
          enum:
          - /images/icons/priorities/blocker.png
          - /images/icons/priorities/critical.png
          - /images/icons/priorities/high.png
          - /images/icons/priorities/highest.png
          - /images/icons/priorities/low.png
          - /images/icons/priorities/lowest.png
          - /images/icons/priorities/major.png
          - /images/icons/priorities/medium.png
          - /images/icons/priorities/minor.png
          - /images/icons/priorities/trivial.png
          - /images/icons/priorities/blocker_new.png
          - /images/icons/priorities/critical_new.png
          - /images/icons/priorities/high_new.png
          - /images/icons/priorities/highest_new.png
          - /images/icons/priorities/low_new.png
          - /images/icons/priorities/lowest_new.png
          - /images/icons/priorities/major_new.png
          - /images/icons/priorities/medium_new.png
          - /images/icons/priorities/minor_new.png
          - /images/icons/priorities/trivial_new.png
        name:
          maxLength: 60
          type: string
          description: The name of the priority. Must be unique.
          nullable: true
          writeOnly: true
        statusColor:
          type: string
          description: The status color of the priority in 3-digit or 6-digit hexadecimal
            format.
          nullable: true
          writeOnly: true
      additionalProperties: true
      description: Details of an issue priority
    FoundGroup:
      type: object
      properties:
        groupId:
          type: string
          description: The ID of the group, which uniquely identifies the group across
            all Atlassian products. For example, *952d12c3-5b5b-4d04-bb32-44d383afc4b2*
        name:
          type: string
          description: The name of the group. The name of a group is mutable, to reliably
            identify a group use ``groupId`.`
        html:
          type: string
          description: The group name with the matched query string highlighted with
            the HTML bold tag
        labels:
          type: array
          items:
            $ref: '#/components/schemas/GroupLabel'
      additionalProperties: false
      description: A group found in a search
      xml:
        name: group
    JExpEvaluateIssuesJqlMetaDataBean:
      required:
      - nextPageToken
      type: object
      properties:
        isLast:
          type: boolean
          description: Indicates whether this is the last page of the paginated response
          readOnly: true
        nextPageToken:
          type: string
          description: Next Page token for the next page of issues
      additionalProperties: false
      description: The description of the page of issues loaded by the provided JQL
        query.This bean will be replacing IssuesJqlMetaDataBean bean as part of new
        `evaluate` endpoint
    JiraIssueFields:
      type: object
      properties:
        multipleVersionPickerFields:
          type: array
          description: |-
            Edit a multi-version picker field like Fix Versions/Affects Versions:

             *  Options include `ADD`, `REPLACE`, `REMOVE`, or `REMOVE_ALL` for bulk edits.
             *  To clear the field, use the `REMOVE_ALL` option with an empty `versions` array
          items:
            $ref: '#/components/schemas/JiraMultipleVersionPickerField'
        richTextFields:
          type: array
          description: |-
            Add or clear a rich text field:

             *  To add, provide `adfValue`. Note that rich text fields only support ADF values.
             *  To clear, use an empty `richText` object.

            For ADF format details, refer to: [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure)
          items:
            $ref: '#/components/schemas/JiraRichTextField'
        singleSelectClearableUserPickerFields:
          type: array
          description: |-
            Edit assignment for single select user picker fields like Assignee/Reporter:

             *  To assign an issue, specify the user's `accountId`.
             *  To unassign an issue, set `user` to `null`.
             *  For automatic assignment, set `accountId` to `-1`
          items:
            $ref: '#/components/schemas/JiraSingleSelectUserPickerField'
        multipleSelectFields:
          type: array
          description: |-
            Add or clear a multi-select field:

             *  To add, provide an array of options with `optionId`s.
             *  To clear, use an empty `options` array
          items:
            $ref: '#/components/schemas/JiraMultipleSelectField'
        timeTrackingField:
          description: Edit the time tracking field
          allOf:
          - $ref: '#/components/schemas/JiraTimeTrackingField'
        colorFields:
          type: array
          description: |-
            Add or clear a color field:

             *  To add, specify the color `name`. Available colors are: `purple`, `blue`, `green`, `teal`, `yellow`, `orange`, `grey`, `dark purple`, `dark blue`, `dark green`, `dark teal`, `dark yellow`, `dark orange`, `dark grey`.
             *  To clear, set the color `name` to an empty string
          items:
            $ref: '#/components/schemas/JiraColorField'
        priority:
          description: Set the priority of an issue by specifying a `priorityId`
          allOf:
          - $ref: '#/components/schemas/JiraPriorityField'
        singleVersionPickerFields:
          type: array
          description: |-
            Add or clear a single version picker field:

             *  To add, specify the version with a `versionId`.
             *  To clear, set `versionId` to `-1`
          items:
            $ref: '#/components/schemas/JiraSingleVersionPickerField'
        cascadingSelectFields:
          type: array
          description: |-
            Add or clear a cascading select field:

             *  To add, specify `optionId` for both parent and child.
             *  To clear the child, set its `optionId` to null.
             *  To clear both, set the parent's `optionId` to null
          items:
            $ref: '#/components/schemas/JiraCascadingSelectField'
        multipleSelectClearableUserPickerFields:
          type: array
          description: |-
            Assign or unassign multiple users to/from a field:

             *  To assign, provide an array of user `accountId`s.
             *  To clear, set `users` to `null`
          items:
            $ref: '#/components/schemas/JiraMultipleSelectUserPickerField'
        issueType:
          description: Set the issue type field by providing an `issueTypeId`
          allOf:
          - $ref: '#/components/schemas/JiraIssueTypeField'
        originalEstimateField:
          description: Edit the original estimate field
          allOf:
          - $ref: '#/components/schemas/JiraDurationField'
        urlFields:
          type: array
          description: |-
            Add or clear a URL field:

             *  To add, provide the `url` with the desired URL value.
             *  To clear, set `url` to an empty string
          items:
            $ref: '#/components/schemas/JiraUrlField'
        singleSelectFields:
          type: array
          description: |-
            Add or clear a single select field:

             *  To add, specify the option with an `optionId`.
             *  To clear, pass an option with `optionId` as `-1`
          items:
            $ref: '#/components/schemas/JiraSingleSelectField'
        multipleGroupPickerFields:
          type: array
          description: |-
            Add or clear a multi-group picker field:

             *  To add groups, provide an array of groups with `groupName`s.
             *  To clear all groups, use an empty `groups` array
          items:
            $ref: '#/components/schemas/JiraMultipleGroupPickerField'
        clearableNumberFields:
          type: array
          description: |-
            Add or clear a number field:

             *  To add, specify a numeric `value`.
             *  To clear, set `value` to `null`
          items:
            $ref: '#/components/schemas/JiraNumberField'
        labelsFields:
          type: array
          description: |-
            Edit a labels field:

             *  Options include `ADD`, `REPLACE`, `REMOVE`, or `REMOVE_ALL` for bulk edits.
             *  To clear labels, use the `REMOVE_ALL` option with an empty `labels` array
          items:
            $ref: '#/components/schemas/JiraLabelsField'
        multiselectComponents:
          description: |-
            Edit a multi select components field:

             *  Options include `ADD`, `REPLACE`, `REMOVE`, or `REMOVE_ALL` for bulk edits.
             *  To clear, use the `REMOVE_ALL` option with an empty `components` array
          allOf:
          - $ref: '#/components/schemas/JiraMultiSelectComponentField'
        dateTimePickerFields:
          type: array
          description: |-
            Add or clear the planned start date and time:

             *  To add, specify the date and time in ISO format for `formattedDateTime`.
             *  To clear, provide an empty string for `formattedDateTime`
          items:
            $ref: '#/components/schemas/JiraDateTimeField'
        singleGroupPickerFields:
          type: array
          description: |-
            Add or clear a single group picker field:

             *  To add, specify the group with `groupName`.
             *  To clear, set `groupName` to an empty string
          items:
            $ref: '#/components/schemas/JiraSingleGroupPickerField'
        datePickerFields:
          type: array
          description: |-
            Add or clear a date picker field:

             *  To add, specify the date in `d/mmm/yy` format or ISO format `dd-mm-yyyy`.
             *  To clear, set `formattedDate` to an empty string
          items:
            $ref: '#/components/schemas/JiraDateField'
        singleLineTextFields:
          type: array
          description: |-
            Add or clear a single line text field:

             *  To add, provide the `text` value.
             *  To clear, set `text` to an empty string
          items:
            $ref: '#/components/schemas/JiraSingleLineTextField'
        status:
          $ref: '#/components/schemas/JiraStatusInput'
      additionalProperties: false
      writeOnly: true
    VersionRelatedWork:
      required:
      - category
      type: object
      properties:
        issueId:
          type: integer
          description: The ID of the issue associated with the related work (if there
            is one). Cannot be updated via the Rest API
          format: int64
          readOnly: true
        relatedWorkId:
          type: string
          description: The id of the related work. For the native release note related
            work item, this will be null, and Rest API does not support updating it
          readOnly: true
        category:
          type: string
          description: The category of the related work
        title:
          type: string
          description: The title of the related work
        url:
          type: string
          description: The URL of the related work. Will be null for the native release
            note related work item, but is otherwise required
          format: uri
      additionalProperties: false
      description: Associated related work to a version
    PageOfComments:
      type: object
      properties:
        comments:
          type: array
          description: The list of comments.
          readOnly: true
          items:
            $ref: '#/components/schemas/Comment'
        maxResults:
          type: integer
          description: The maximum number of items that could be returned.
          format: int32
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned.
          format: int64
          readOnly: true
        total:
          type: integer
          description: The number of items returned.
          format: int64
          readOnly: true
      additionalProperties: true
      description: A page of comments
    WorkflowRulesSearchDetails:
      type: object
      properties:
        invalidRules:
          type: array
          description: List of workflow rule IDs that do not belong to the workflow
            or can not be found
          items:
            type: string
            description: Workflow rule ID.
            format: uuid
            example: 55d44f1d-c859-42e5-9c27-2c5ec3f340b1
        validRules:
          type: array
          description: List of valid workflow transition rules
          items:
            $ref: '#/components/schemas/WorkflowTransitionRules'
        workflowEntityId:
          type: string
          description: The workflow ID
          format: uuid
          example: a498d711-685d-428d-8c3e-bc03bb450ea7
      description: Details of workflow transition rules
    JiraExpressionsAnalysis:
      required:
      - results
      type: object
      properties:
        results:
          type: array
          description: The results of Jira expressions analysis
          items:
            $ref: '#/components/schemas/JiraExpressionAnalysis'
      additionalProperties: false
      description: Details about the analysed Jira expression
    DashboardGadgetUpdateRequest:
      type: object
      properties:
        color:
          type: string
          description: The color of the gadget. Should be one of `blue`, `red`, `yellow`,
            `green`, `cyan`, `purple`, `gray`, or `white`
          writeOnly: true
        position:
          description: The position of the gadget
          allOf:
          - $ref: '#/components/schemas/DashboardGadgetPosition'
        title:
          type: string
          description: The title of the gadget
          writeOnly: true
      additionalProperties: false
      description: The details of the gadget to update
    JiraExpressionAnalysis:
      required:
      - expression
      - valid
      type: object
      properties:
        valid:
          type: boolean
          description: Whether the expression is valid and the interpreter will evaluate
            it. Note that the expression may fail at runtime (for example, if it executes
            too many expensive operations)
        complexity:
          $ref: '#/components/schemas/JiraExpressionComplexity'
        expression:
          type: string
          description: The analysed expression
        type:
          type: string
          description: EXPERIMENTAL. The inferred type of the expression
        errors:
          type: array
          description: A list of validation errors. Not included if the expression
            is valid
          items:
            $ref: '#/components/schemas/JiraExpressionValidationError'
      additionalProperties: false
      description: Details about the analysed Jira expression
    Locale:
      type: object
      properties:
        locale:
          type: string
          description: 'The locale code. The Java the locale format is used: a two
            character language code (ISO 639), an underscore, and two letter country
            code (ISO 3166). For example, en\_US represents a locale of English (United
            States). Required on create'
      additionalProperties: false
      description: Details of a locale
    SwimlanesPayload:
      type: object
      properties:
        defaultCustomSwimlaneName:
          type: string
          description: The name of the custom swimlane to use for work items that
            don't match any other swimlanes
        customSwimlanes:
          type: array
          description: The custom swimlane definitions
          items:
            $ref: '#/components/schemas/SwimlanePayload'
        swimlaneStrategy:
          type: string
          description: The swimlane strategy for the board
          enum:
          - none
          - custom
          - parentChild
          - assignee
          - assigneeUnassignedFirst
          - epic
          - project
          - issueparent
          - issuechildren
          - request_type
      additionalProperties: false
      description: The payload for customising a swimlanes on a board
    WorkflowStatusPayload:
      type: object
      properties:
        layout:
          $ref: '#/components/schemas/WorkflowStatusLayoutPayload'
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        properties:
          type: object
          additionalProperties:
            type: string
            description: The properties of the workflow status.
          description: The properties of the workflow status
      additionalProperties: false
      description: The statuses to be used in the workflow
    OrderOfIssueTypes:
      required:
      - issueTypeIds
      type: object
      properties:
        issueTypeIds:
          type: array
          description: A list of the issue type IDs to move. The order of the issue
            type IDs in the list is the order they are given after the move
          writeOnly: true
          items:
            type: string
            writeOnly: true
        after:
          type: string
          description: The ID of the issue type to place the moved issue types after.
            Required if `position` isn't provided
          writeOnly: true
        position:
          type: string
          description: The position the issue types should be moved to. Required if
            `after` isn't provided
          writeOnly: true
          enum:
          - First
          - Last
      additionalProperties: false
      description: An ordered list of issue type IDs and information about where to
        move them
    AddAtlassianTeamRequest:
      required:
      - id
      - planningStyle
      type: object
      properties:
        planningStyle:
          type: string
          description: The planning style for the Atlassian team. This must be "Scrum"
            or "Kanban"
          enum:
          - Scrum
          - Kanban
        issueSourceId:
          type: integer
          description: The ID of the issue source for the Atlassian team
          format: int64
        sprintLength:
          type: integer
          description: The sprint length for the Atlassian team
          format: int64
        id:
          type: string
          description: The Atlassian team ID
        capacity:
          type: number
          description: The capacity for the Atlassian team
          format: double
      additionalProperties: false
    IssueTypesWorkflowMapping:
      type: object
      properties:
        updateDraftIfNeeded:
          type: boolean
          description: Whether a draft workflow scheme is created or updated when
            updating an active workflow scheme. The draft is updated with the new
            workflow-issue types mapping. Defaults to `false`
        workflow:
          type: string
          description: The name of the workflow. Optional if updating the workflow-issue
            types mapping
        defaultMapping:
          type: boolean
          description: Whether the workflow is the default workflow for the workflow
            scheme
        issueTypes:
          type: array
          description: The list of issue type IDs
          items:
            type: string
      additionalProperties: false
      description: Details about the mapping between issue types and a workflow
    ConnectCustomFieldValue:
      required:
      - _type
      - fieldID
      - issueID
      type: object
      properties:
        number:
          type: number
          description: The value of number type custom field when `_type` is `NumberIssueField`
        issueID:
          type: integer
          description: The issue ID
          writeOnly: true
        string:
          type: string
          description: The value of string type custom field when `_type` is `StringIssueField`
        _type:
          type: string
          description: The type of custom field
          writeOnly: true
          enum:
          - StringIssueField
          - NumberIssueField
          - RichTextIssueField
          - SingleSelectIssueField
          - MultiSelectIssueField
          - TextIssueField
          x-ballerina-name: type
        optionID:
          type: string
          description: The value of single select and multiselect custom field type
            when `_type` is `SingleSelectIssueField` or `MultiSelectIssueField`
        text:
          type: string
          description: The value of of text custom field type when `_type` is `TextIssueField`
        richText:
          type: string
          description: The value of richText type custom field when `_type` is `RichTextIssueField`
        fieldID:
          type: integer
          description: The custom field ID
          writeOnly: true
      description: A list of custom field details
      writeOnly: true
    PageBeanField:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Field'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    WorkflowCapabilities:
      type: object
      properties:
        systemRules:
          type: array
          description: The Atlassian provided system rules available
          items:
            $ref: '#/components/schemas/AvailableWorkflowSystemRule'
        triggerRules:
          type: array
          description: The trigger rules available
          items:
            $ref: '#/components/schemas/AvailableWorkflowTriggers'
        connectRules:
          type: array
          description: The Connect provided ecosystem rules available
          items:
            $ref: '#/components/schemas/AvailableWorkflowConnectRule'
        editorScope:
          type: string
          description: The scope of the workflow capabilities. `GLOBAL` for company-managed
            projects and `PROJECT` for team-managed projects
          enum:
          - PROJECT
          - GLOBAL
        projectTypes:
          type: array
          description: The types of projects that this capability set is available
            for
          items:
            type: string
            enum:
            - software
            - service_desk
            - product_discovery
            - business
            - unknown
        forgeRules:
          type: array
          description: The Forge provided ecosystem rules available
          items:
            $ref: '#/components/schemas/AvailableWorkflowForgeRule'
      additionalProperties: false
    JiraExpressionsComplexityBean:
      required:
      - beans
      - expensiveOperations
      - primitiveValues
      - steps
      type: object
      properties:
        beans:
          description: The number of Jira REST API beans returned in the response
          allOf:
          - $ref: '#/components/schemas/JiraExpressionsComplexityValueBean'
        expensiveOperations:
          description: The number of expensive operations executed while evaluating
            the expression. Expensive operations are those that load additional data,
            such as entity properties, comments, or custom fields
          allOf:
          - $ref: '#/components/schemas/JiraExpressionsComplexityValueBean'
        primitiveValues:
          description: The number of primitive values returned in the response
          allOf:
          - $ref: '#/components/schemas/JiraExpressionsComplexityValueBean'
        steps:
          description: The number of steps it took to evaluate the expression, where
            a step is a high-level operation performed by the expression. A step is
            an operation such as arithmetic, accessing a property, accessing a context
            variable, or calling a function
          allOf:
          - $ref: '#/components/schemas/JiraExpressionsComplexityValueBean'
      additionalProperties: false
    UserDetails:
      type: object
      properties:
        accountId:
          maxLength: 128
          type: string
          description: The account ID of the user, which uniquely identifies the user
            across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        emailAddress:
          type: string
          description: The email address of the user. Depending on the user’s privacy
            settings, this may be returned as null
          readOnly: true
        avatarUrls:
          description: The avatars of the user
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/AvatarUrlsBean'
        displayName:
          type: string
          description: The display name of the user. Depending on the user’s privacy
            settings, this may return an alternative value
          readOnly: true
        accountType:
          type: string
          description: The type of account represented by this user. This will be
            one of 'atlassian' (normal users), 'app' (application user) or 'customer'
            (Jira Service Desk customer user)
          readOnly: true
        name:
          type: string
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
          readOnly: true
        active:
          type: boolean
          description: Whether the user is active
          readOnly: true
        self:
          type: string
          description: The URL of the user
          readOnly: true
        timeZone:
          type: string
          description: The time zone specified in the user's profile. Depending on
            the user’s privacy settings, this may be returned as null
          readOnly: true
        key:
          type: string
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
          readOnly: true
      additionalProperties: false
      description: |-
        User details permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

         *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).
         *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.
         *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values
    ProjectIds:
      required:
      - projectIds
      type: object
      properties:
        projectIds:
          type: array
          description: The IDs of projects
          writeOnly: true
          items:
            type: string
            writeOnly: true
      additionalProperties: false
      description: A list of project IDs
    IssueMatchesForJQL:
      required:
      - errors
      - matchedIssues
      type: object
      properties:
        errors:
          uniqueItems: true
          type: array
          description: A list of errors
          items:
            type: string
            description: A list of errors.
        matchedIssues:
          uniqueItems: true
          type: array
          description: A list of issue IDs
          items:
            type: integer
            description: A list of issue IDs.
            format: int64
      additionalProperties: false
      description: A list of the issues matched to a JQL query or details of errors
        encountered during matching
    WorkflowElementReference:
      type: object
      properties:
        propertyKey:
          type: string
          description: A property key
        statusMappingReference:
          $ref: '#/components/schemas/ProjectAndIssueTypePair'
        transitionId:
          type: string
          description: A transition ID
        ruleId:
          type: string
          description: A rule ID
        statusReference:
          type: string
          description: A status reference
      additionalProperties: false
      description: A reference to the location of the error. This will be null if
        the error does not refer to a specific element
    RestrictedPermission:
      type: object
      properties:
        id:
          type: string
          description: The ID of the permission. Either `id` or `key` must be specified.
            Use [Get all permissions](#api-rest-api-3-permissions-get) to get the
            list of permissions.
        key:
          type: string
          description: The key of the permission. Either `id` or `key` must be specified.
            Use [Get all permissions](#api-rest-api-3-permissions-get) to get the
            list of permissions.
      additionalProperties: true
      description: Details of the permission
    WorkflowTransitionRulesUpdate:
      required:
      - workflows
      type: object
      properties:
        workflows:
          type: array
          description: The list of workflows with transition rules to update
          items:
            $ref: '#/components/schemas/WorkflowTransitionRules'
      additionalProperties: false
      description: Details about a workflow configuration update request
    UserFilter:
      required:
      - enabled
      type: object
      properties:
        roleIds:
          uniqueItems: true
          type: array
          description: Roles that autocomplete suggestion users must belong to. If
            not provided, the default values are used. A maximum of 10 roles can be
            provided
          items:
            type: integer
            description: Roles that autocomplete suggestion users must belong to.
              If not provided, the default values are used. A maximum of 10 roles
              can be provided.
            format: int64
        groups:
          uniqueItems: true
          type: array
          description: User groups autocomplete suggestion users must belong to. If
            not provided, the default values are used. A maximum of 10 groups can
            be provided
          items:
            type: string
            description: User groups autocomplete suggestion users must belong to.
              If not provided, the default values are used. A maximum of 10 groups
              can be provided.
        enabled:
          type: boolean
          description: Whether the filter is enabled
      description: Filter for a User Picker (single) custom field
    IssueTransitionStatus:
      type: object
      properties:
        statusId:
          type: integer
          description: The unique ID of the status
          format: int32
          readOnly: true
        statusName:
          type: string
          description: The name of the status
          readOnly: true
      additionalProperties: false
    UserColumnRequestBody:
      type: object
      properties:
        columns:
          type: array
          items:
            type: string
      additionalProperties: false
    JiraMultiSelectComponentField:
      required:
      - bulkEditMultiSelectFieldOption
      - components
      - fieldId
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/JiraComponentField'
        bulkEditMultiSelectFieldOption:
          type: string
          enum:
          - ADD
          - REMOVE
          - REPLACE
          - REMOVE_ALL
        fieldId:
          type: string
      additionalProperties: false
    FieldCapabilityPayload:
      type: object
      properties:
        issueLayouts:
          type: array
          description: The issue layouts configuration
          nullable: true
          items:
            $ref: '#/components/schemas/IssueLayoutPayload'
        fieldLayoutScheme:
          $ref: '#/components/schemas/FieldLayoutSchemePayload'
        screens:
          type: array
          description: The screens. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-screens/\#api-rest-api-3-screens-post
          nullable: true
          items:
            $ref: '#/components/schemas/ScreenPayload'
        customFieldDefinitions:
          type: array
          description: The custom field definitions. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-fields/\#api-rest-api-3-field-post
          nullable: true
          items:
            $ref: '#/components/schemas/CustomFieldPayload'
        issueTypeScreenScheme:
          $ref: '#/components/schemas/IssueTypeScreenSchemePayload'
        screenScheme:
          type: array
          description: The screen schemes See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-screen-schemes/\#api-rest-api-3-screenscheme-post
          nullable: true
          items:
            $ref: '#/components/schemas/ScreenSchemePayload'
        fieldLayouts:
          type: array
          description: The field layouts configuration
          nullable: true
          items:
            $ref: '#/components/schemas/FieldLayoutPayload'
      additionalProperties: false
      description: Defines the payload for the fields, screens, screen schemes, issue
        type screen schemes, field layouts, and field layout schemes
      nullable: true
    PageBeanComponentWithIssueCount:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/ComponentWithIssueCount'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    FieldAssociationsRequest:
      required:
      - associationContexts
      - fields
      type: object
      properties:
        associationContexts:
          type: array
          description: Contexts to associate/unassociate the fields with
          writeOnly: true
          items:
            $ref: '#/components/schemas/AssociationContextObject'
        fields:
          type: array
          description: Fields to associate/unassociate with projects
          writeOnly: true
          items:
            $ref: '#/components/schemas/FieldIdentifierObject'
      additionalProperties: false
      description: Details of field associations with projects
    CustomFieldContextDefaultValueMultiUserPicker:
      required:
      - accountIds
      - contextId
      - type
      type: object
      properties:
        accountIds:
          type: array
          description: The IDs of the default users
          items:
            type: string
            description: The IDs of the default users.
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
      description: The default value for a User Picker (multiple) custom field
    SetDefaultPriorityRequest:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the new default issue priority. Must be an existing
            ID or null. Setting this to null erases the default priority setting
          writeOnly: true
      additionalProperties: false
      description: The new default issue priority
    WorkflowSchemeReadRequest:
      type: object
      properties:
        workflowSchemeIds:
          type: array
          description: The list of workflow scheme IDs to query
          nullable: true
          items:
            type: string
            description: The list of workflow scheme IDs to query.
            nullable: true
        projectIds:
          type: array
          description: The list of project IDs to query
          nullable: true
          items:
            type: string
            description: The list of project IDs to query.
            nullable: true
      additionalProperties: false
      description: The workflow scheme read request body
    PageBeanIssueFieldOption:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueFieldOption'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    WorkflowStatusUpdate:
      maximum: 1000
      required:
      - name
      - statusCategory
      - statusReference
      type: object
      properties:
        description:
          type: string
          description: The description of the status.
        id:
          type: string
          description: The ID of the status.
        name:
          type: string
          description: The name of the status.
        statusCategory:
          type: string
          description: The category of the status.
          enum:
          - TODO
          - IN_PROGRESS
          - DONE
        statusReference:
          type: string
          description: The reference of the status.
      additionalProperties: true
      description: Details of the status being updated
    GetIssueSourceResponse:
      required:
      - type
      - value
      type: object
      properties:
        type:
          type: string
          description: The issue source type. This is "Board", "Project" or "Filter"
          enum:
          - Board
          - Project
          - Filter
          - Custom
        value:
          type: integer
          description: The issue source value. This is a board ID if the type is "Board",
            a project ID if the type is "Project" or a filter ID if the type is "Filter"
          format: int64
      additionalProperties: false
    Visibility:
      type: object
      properties:
        identifier:
          type: string
          description: The ID of the group or the name of the role that visibility
            of this item is restricted to.
          nullable: true
        type:
          type: string
          description: Whether visibility of this item is restricted to a group or
            role.
          enum:
          - group
          - role
        value:
          type: string
          description: The name of the group or role that visibility of this item
            is restricted to. Please note that the name of a group is mutable, to
            reliably identify a group use `identifier`.
      additionalProperties: true
      description: The group or role to which this item is visible
    ProjectCustomTemplateCreateRequestDTO:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/CustomTemplateRequestDTO'
        details:
          $ref: '#/components/schemas/CustomTemplatesProjectDetails'
      additionalProperties: false
      description: Request to create a project using a custom template
    ProjectEmailAddress:
      type: object
      properties:
        emailAddress:
          type: string
          description: The email address
        emailAddressStatus:
          type: array
          description: When using a custom domain, the status of the email address
          items:
            type: string
      additionalProperties: false
      description: A project's sender email address
    WorkflowProjectUsageDTO:
      type: object
      properties:
        projects:
          $ref: '#/components/schemas/ProjectUsagePage'
        workflowId:
          type: string
          description: The workflow ID
      additionalProperties: false
      description: Projects using the workflow
    AnnouncementBannerConfigurationUpdate:
      type: object
      properties:
        visibility:
          type: string
          description: Visibility of the announcement banner. Can be public or private
        isEnabled:
          type: boolean
          description: Flag indicating if the announcement banner is enabled or not
        isDismissible:
          type: boolean
          description: Flag indicating if the announcement banner can be dismissed
            by the user
        message:
          type: string
          description: The text on the announcement banner
      additionalProperties: false
      description: Configuration of the announcement banner
      writeOnly: true
    IssueFilterForBulkPropertyDelete:
      type: object
      properties:
        currentValue:
          description: The value of properties to perform the bulk operation on
        entityIds:
          uniqueItems: true
          type: array
          description: List of issues to perform the bulk delete operation on
          items:
            type: integer
            format: int64
      additionalProperties: false
      description: Bulk operation filter details
    FieldValueClause:
      required:
      - field
      - operand
      - operator
      type: object
      properties:
        field:
          $ref: '#/components/schemas/JqlQueryField'
        operand:
          $ref: '#/components/schemas/JqlQueryClauseOperand'
        operator:
          type: string
          description: The operator between the field and operand
          enum:
          - =
          - '!='
          - '>'
          - <
          - '>='
          - <=
          - in
          - not in
          - '~'
          - ~=
          - is
          - is not
      description: A clause that asserts the current value of a field. For example,
        `summary ~ test`
    BulkRedactionRequest:
      type: object
      properties:
        redactions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SingleRedactionRequest'
      additionalProperties: false
    ValidationOptionsForCreate:
      type: object
      properties:
        levels:
          maxItems: 2
          type: array
          items:
            type: string
            enum:
            - WARNING
            - ERROR
      additionalProperties: false
      description: The level of validation to return from the API. If no values are
        provided, the default would return `WARNING` and `ERROR` level validation
        results
    CompoundClause:
      required:
      - clauses
      - operator
      type: object
      properties:
        clauses:
          type: array
          description: The list of nested clauses
          items:
            $ref: '#/components/schemas/JqlQueryClause'
        operator:
          type: string
          description: The operator between the clauses
          enum:
          - and
          - or
          - not
      description: A JQL query clause that consists of nested clauses. For example,
        `(labels in (urgent, blocker) OR lastCommentedBy = currentUser()). Note that,
        where nesting is not defined, the parser nests JQL clauses based on the operator
        precedence. For example, "A OR B AND C" is parsed as "(A OR B) AND C". See
        Setting the precedence of operators for more information about precedence
        in JQL queries.`
    IssueLayoutPayload:
      type: object
      properties:
        issueLayoutType:
          type: string
          description: The issue layout type
          enum:
          - ISSUE_VIEW
          - ISSUE_CREATE
          - REQUEST_FORM
        containerId:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        items:
          type: array
          description: The configuration of items in the issue layout
          items:
            $ref: '#/components/schemas/IssueLayouItemtPayload'
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: Defines the payload to configure the issue layouts for a project
      nullable: true
    BulkCustomFieldOptionCreateRequest:
      type: object
      properties:
        options:
          type: array
          description: Details of options to create
          items:
            $ref: '#/components/schemas/CustomFieldOptionCreate'
      additionalProperties: false
      description: Details of the options to create for a custom field
      writeOnly: true
    ToLayoutPayload:
      type: object
      properties:
        port:
          type: integer
          description: Defines where the transition line will be connected to a status.
            Port 0 to 7 are acceptable values
          format: int32
          example: 1
        status:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for the layout details for the destination end of a
        transition
    WorkflowReferenceStatus:
      type: object
      properties:
        layout:
          $ref: '#/components/schemas/WorkflowStatusLayout'
        deprecated:
          type: boolean
          description: Indicates if the status is deprecated
        statusReference:
          type: string
          description: The reference of the status
        approvalConfiguration:
          $ref: '#/components/schemas/ApprovalConfiguration'
        properties:
          type: object
          additionalProperties:
            type: string
            description: The properties associated with the status.
          description: The properties associated with the status
      additionalProperties: false
      description: The statuses referenced in the workflow
    ScreenSchemeId:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: The ID of the screen scheme
          format: int64
          readOnly: true
      additionalProperties: false
      description: The ID of a screen scheme
    Comment:
      type: object
      properties:
        author:
          description: The ID of the user who created the comment.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserDetails'
        body:
          description: The comment text in [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/).
        created:
          type: string
          description: The date and time at which the comment was created.
          format: date-time
          readOnly: true
        id:
          type: string
          description: The ID of the comment.
          readOnly: true
        jsdAuthorCanSeeRequest:
          type: boolean
          description: Whether the comment was added from an email sent by a person
            who is not part of the issue. See [Allow external emails to be added as
            comments on issues](https://support.atlassian.com/jira-service-management-cloud/docs/allow-external-emails-to-be-added-as-comments-on-issues/)for
            information on setting up this feature.
          readOnly: true
        jsdPublic:
          type: boolean
          description: Whether the comment is visible in Jira Service Desk. Defaults
            to true when comments are created in the Jira Cloud Platform. This includes
            when the site doesn't use Jira Service Desk or the project isn't a Jira
            Service Desk project and, therefore, there is no Jira Service Desk for
            the issue to be visible on. To create a comment with its visibility in
            Jira Service Desk set to false, use the Jira Service Desk REST API [Create
            request comment](https://developer.atlassian.com/cloud/jira/service-desk/rest/#api-rest-servicedeskapi-request-issueIdOrKey-comment-post)
            operation.
          readOnly: true
        properties:
          type: array
          description: A list of comment properties. Optional on create and update.
          items:
            $ref: '#/components/schemas/EntityProperty'
        renderedBody:
          type: string
          description: The rendered version of the comment.
          readOnly: true
        self:
          type: string
          description: The URL of the comment.
          readOnly: true
        updateAuthor:
          description: The ID of the user who updated the comment last.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserDetails'
        updated:
          type: string
          description: The date and time at which the comment was updated last.
          format: date-time
          readOnly: true
        visibility:
          description: The group or role to which this comment is visible. Optional
            on create and update.
          allOf:
          - $ref: '#/components/schemas/Visibility'
      additionalProperties: true
      description: A comment
    MandatoryFieldValue:
      required:
      - value
      type: object
      properties:
        retain:
          type: boolean
          description: If `true`, will try to retain original non-null issue field
            values on move
          nullable: true
          writeOnly: true
          default: true
        type:
          type: string
          description: Will treat as `MandatoryFieldValue` if type is `raw` or `empty`
          nullable: true
          writeOnly: true
          enum:
          - adf
          - raw
          default: raw
        value:
          type: array
          description: Value for each field. Provide a `list of strings` for non-ADF
            fields
          writeOnly: true
          items:
            type: string
            description: Value for each field. Provide a <code>list of strings</code>
              for non-ADF fields.
            writeOnly: true
      description: List of string of inputs
    WorkflowSchemeAssociations:
      required:
      - projectIds
      - workflowScheme
      type: object
      properties:
        projectIds:
          type: array
          description: The list of projects that use the workflow scheme
          items:
            type: string
        workflowScheme:
          description: The workflow scheme
          allOf:
          - $ref: '#/components/schemas/WorkflowScheme'
      additionalProperties: false
      description: A workflow scheme along with a list of projects that use it
    IssueTypeScreenSchemeUpdateDetails:
      type: object
      properties:
        name:
          type: string
          description: The name of the issue type screen scheme. The name must be
            unique. The maximum length is 255 characters
          writeOnly: true
        description:
          type: string
          description: The description of the issue type screen scheme. The maximum
            length is 255 characters
          writeOnly: true
      additionalProperties: false
      description: Details of an issue type screen scheme
    PageBeanIssueSecurityLevelMember:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueSecurityLevelMember'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    FieldWasClause:
      required:
      - field
      - operand
      - operator
      - predicates
      type: object
      properties:
        predicates:
          type: array
          description: The list of time predicates
          items:
            $ref: '#/components/schemas/JqlQueryClauseTimePredicate'
        field:
          $ref: '#/components/schemas/JqlQueryField'
        operand:
          $ref: '#/components/schemas/JqlQueryClauseOperand'
        operator:
          type: string
          description: The operator between the field and operand
          enum:
          - was
          - was in
          - was not in
          - was not
      description: A clause that asserts a previous value of a field. For example,
        `status WAS "Resolved" BY currentUser() BEFORE "2019/02/02"`. See [WAS](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-WASWAS)
        for more information about the WAS operator
    ScreenSchemePayload:
      type: object
      properties:
        screens:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
          description: 'Similar to the field layout scheme those mappings allow users
            to set different screens for different operations: default - always there,
            applied to all operations that don''t have an explicit mapping `create`,
            `view`, `edit` - specific operations that are available and users can
            assign a different screen for each one of them https://support.atlassian.com/jira-cloud-administration/docs/manage-screen-schemes/\#Associating-a-screen-with-an-issue-operation'
        defaultScreen:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        name:
          type: string
          description: The name of the screen scheme
          example: My Screen Scheme
        description:
          type: string
          description: The description of the screen scheme
          example: This is a screen scheme
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: Defines the payload for the screen schemes. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-screen-schemes/\#api-rest-api-3-screenscheme-post
      nullable: true
    Error:
      type: object
      properties:
        count:
          type: integer
          format: int64
        issueIdsOrKeys:
          uniqueItems: true
          type: array
          items:
            type: string
        message:
          type: string
      additionalProperties: false
    JiraExpressionEvaluationMetaDataBean:
      type: object
      properties:
        complexity:
          description: Contains information about the expression complexity. For example,
            the number of steps it took to evaluate the expression
          allOf:
          - $ref: '#/components/schemas/JiraExpressionsComplexityBean'
        issues:
          description: Contains information about the `issues` variable in the context.
            For example, is the issues were loaded with JQL, information about the
            page will be included here
          allOf:
          - $ref: '#/components/schemas/IssuesMetaBean'
      additionalProperties: false
    AuditRecordBean:
      type: object
      properties:
        changedValues:
          type: array
          description: The list of values changed in the record event
          readOnly: true
          items:
            $ref: '#/components/schemas/ChangedValueBean'
        summary:
          type: string
          description: The summary of the audit record
          readOnly: true
        objectItem:
          $ref: '#/components/schemas/AssociatedItemBean'
        created:
          type: string
          description: The date and time on which the audit record was created
          format: date-time
          readOnly: true
        authorKey:
          type: string
          description: Deprecated, use `authorAccountId` instead. The key of the user
            who created the audit record
          readOnly: true
        eventSource:
          type: string
          description: The event the audit record originated from
          readOnly: true
        associatedItems:
          type: array
          description: The list of items associated with the changed record
          readOnly: true
          items:
            $ref: '#/components/schemas/AssociatedItemBean'
        description:
          type: string
          description: The description of the audit record
          readOnly: true
        id:
          type: integer
          description: The ID of the audit record
          format: int64
          readOnly: true
        category:
          type: string
          description: The category of the audit record. For a list of these categories,
            see the help article [Auditing in Jira applications](https://confluence.atlassian.com/x/noXKM)
          readOnly: true
        remoteAddress:
          type: string
          description: The URL of the computer where the creation of the audit record
            was initiated
          readOnly: true
      additionalProperties: false
      description: An audit record
    CustomFieldContextOption:
      required:
      - disabled
      - id
      - value
      type: object
      properties:
        disabled:
          type: boolean
          description: Whether the option is disabled
        optionId:
          type: string
          description: For cascading options, the ID of the custom field option containing
            the cascading option
        id:
          type: string
          description: The ID of the custom field option
        value:
          type: string
          description: The value of the custom field option
      additionalProperties: false
      description: Details of the custom field options for a context
    ProjectIdAssociationContext:
      type: object
      allOf:
      - $ref: '#/components/schemas/AssociationContextObject'
      - $ref: '#/components/schemas/ProjectIdAssociationContextAllOf2'
    BulkFetchIssueRequestBean:
      required:
      - issueIdsOrKeys
      type: object
      properties:
        expand:
          type: array
          description: |-
            Use [expand](#expansion) to include additional information about issues in the response. Note that, unlike the majority of instances where `expand` is specified, `expand` is defined as a list of values. The expand options are:

             *  `renderedFields` Returns field values rendered in HTML format.
             *  `names` Returns the display name of each field.
             *  `schema` Returns the schema describing a field type.
             *  `transitions` Returns all possible transitions for the issue.
             *  `operations` Returns all possible operations for the issue.
             *  `editmeta` Returns information about how each field can be edited.
             *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
             *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version
          items:
            type: string
        fieldsByKeys:
          type: boolean
          description: Reference fields by their key (rather than ID). The default
            is `false`
        issueIdsOrKeys:
          type: array
          description: An array of issue IDs or issue keys to fetch. You can mix issue
            IDs and keys in the same query
          items:
            type: string
        fields:
          type: array
          description: |-
            A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:

             *  `*all` Returns all fields.
             *  `*navigable` Returns navigable fields.
             *  Any issue field, prefixed with a minus to exclude.

            The default is `*navigable`.

            Examples:

             *  `summary,comment` Returns the summary and comments fields only.
             *  `-description` Returns all navigable (default) fields except description.
             *  `*all,-comment` Returns all fields except comments.

            Multiple `fields` parameters can be included in a request.

            Note: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields
          items:
            type: string
        properties:
          type: array
          description: A list of issue property keys of issue properties to be included
            in the results. A maximum of 5 issue property keys can be specified
          items:
            type: string
      additionalProperties: false
    ExportArchivedIssuesTaskProgressResponse:
      type: object
      properties:
        payload:
          type: string
        submittedTime:
          type: string
          format: date-time
        progress:
          type: integer
          format: int64
        fileUrl:
          type: string
        taskId:
          type: string
        status:
          type: string
      additionalProperties: false
      description: The response for status request for a running/completed export
        task
    Configuration:
      type: object
      properties:
        unassignedIssuesAllowed:
          type: boolean
          description: Whether the ability to create unassigned issues is enabled.
            See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM)
            for details
          readOnly: true
        watchingEnabled:
          type: boolean
          description: Whether the ability for users to watch issues is enabled. See
            [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM)
            for details
          readOnly: true
        attachmentsEnabled:
          type: boolean
          description: Whether the ability to add attachments to issues is enabled
          readOnly: true
        timeTrackingEnabled:
          type: boolean
          description: Whether the ability to track time is enabled. This property
            is deprecated
          readOnly: true
        issueLinkingEnabled:
          type: boolean
          description: Whether the ability to link issues is enabled
          readOnly: true
        subTasksEnabled:
          type: boolean
          description: Whether the ability to create subtasks for issues is enabled
          readOnly: true
        votingEnabled:
          type: boolean
          description: Whether the ability for users to vote on issues is enabled.
            See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM)
            for details
          readOnly: true
        timeTrackingConfiguration:
          description: The configuration of time tracking
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/TimeTrackingConfiguration'
      additionalProperties: false
      description: Details about the configuration of Jira
    WorkflowStatusLayout:
      type: object
      properties:
        x:
          type: number
          description: The x axis location
          format: double
          nullable: true
        y:
          type: number
          description: The y axis location
          format: double
          nullable: true
      additionalProperties: false
      description: The x and y location of the status in the workflow
      nullable: true
    UpdateProjectDetails:
      type: object
      properties:
        notificationScheme:
          type: integer
          description: The ID of the notification scheme for the project. Use the
            [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource
            to get a list of notification scheme IDs
          format: int64
        description:
          type: string
          description: A brief description of the project
        leadAccountId:
          maxLength: 128
          type: string
          description: The account ID of the project lead. Cannot be provided with
            `lead`
        lead:
          type: string
          description: This parameter is deprecated because of privacy changes. Use
            `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details. The user name of the project lead. Cannot be provided with
            `leadAccountId`
        url:
          type: string
          description: A link to information about this project, such as project documentation
        releasedProjectKeys:
          uniqueItems: true
          type: array
          description: Previous project keys to be released from the current project.
            Released keys must belong to the current project and not contain the current
            project key
          items:
            type: string
        avatarId:
          type: integer
          description: An integer value for the project's avatar
          format: int64
        issueSecurityScheme:
          type: integer
          description: The ID of the issue security scheme for the project, which
            enables you to control who can and cannot view issues. Use the [Get issue
            security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to
            get all issue security scheme IDs
          format: int64
        name:
          type: string
          description: The name of the project
        permissionScheme:
          type: integer
          description: The ID of the permission scheme for the project. Use the [Get
            all permission schemes](#api-rest-api-3-permissionscheme-get) resource
            to see a list of all permission scheme IDs
          format: int64
        assigneeType:
          type: string
          description: The default assignee when creating issues for this project
          enum:
          - PROJECT_LEAD
          - UNASSIGNED
        categoryId:
          type: integer
          description: The ID of the project's category. A complete list of category
            IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get)
            operation. To remove the project category from the project, set the value
            to `-1.`
          format: int64
        key:
          type: string
          description: Project keys must be unique and start with an uppercase letter
            followed by one or more uppercase alphanumeric characters. The maximum
            length is 10 characters
      additionalProperties: false
      description: Details about the project
    NotificationSchemeNotificationDetails:
      maxLength: 255
      required:
      - notificationType
      type: object
      properties:
        notificationType:
          type: string
          description: The notification type, e.g `CurrentAssignee`, `Group`, `EmailAddress`.
          writeOnly: true
        parameter:
          type: string
          description: The value corresponding to the specified notification type.
          writeOnly: true
      additionalProperties: true
      description: Details of a notification within a notification scheme
      writeOnly: true
    IssueTypeSchemeProjectAssociation:
      required:
      - issueTypeSchemeId
      - projectId
      type: object
      properties:
        issueTypeSchemeId:
          type: string
          description: The ID of the issue type scheme
          writeOnly: true
        projectId:
          type: string
          description: The ID of the project
          writeOnly: true
      additionalProperties: false
      description: Details of the association between an issue type scheme and project
    SoftwareNavigationInfo:
      type: object
      properties:
        totalBoardsInProject:
          type: integer
          format: int64
        simpleBoard:
          type: boolean
        boardId:
          type: integer
          format: int64
        boardName:
          type: string
    IssueEvent:
      type: object
      properties:
        name:
          type: string
          description: The name of the event
          readOnly: true
        id:
          type: integer
          description: The ID of the event
          format: int64
          readOnly: true
      additionalProperties: false
      description: Details about an issue event
    IssueFieldOptionCreateBean:
      required:
      - value
      type: object
      properties:
        config:
          $ref: '#/components/schemas/IssueFieldOptionConfiguration'
        properties:
          type: object
          additionalProperties: {
            }
          description: The properties of the option as arbitrary key-value pairs.
            These properties can be searched using JQL, if the extractions (see https://developer.atlassian.com/cloud/jira/platform/modules/issue-field-option-property-index/)
            are defined in the descriptor for the issue field module.
        value:
          type: string
          description: The option's name, which is displayed in Jira.
      additionalProperties: true
    NotificationRecipientsRestrictions:
      type: object
      properties:
        permissions:
          type: array
          description: List of permissions required to receive the notification
          items:
            $ref: '#/components/schemas/RestrictedPermission'
        groupIds:
          type: array
          description: List of groupId memberships required to receive the notification
          items:
            type: string
        groups:
          type: array
          description: List of group memberships required to receive the notification
          items:
            $ref: '#/components/schemas/GroupName'
      additionalProperties: false
      description: Details of the group membership or permissions needed to receive
        the notification
    Watchers:
      type: object
      properties:
        self:
          type: string
          description: The URL of these issue watcher details
          readOnly: true
        watchers:
          type: array
          description: Details of the users watching this issue
          readOnly: true
          items:
            $ref: '#/components/schemas/UserDetails'
        isWatching:
          type: boolean
          description: Whether the calling user is watching this issue
          readOnly: true
        watchCount:
          type: integer
          description: The number of users watching this issue
          format: int32
          readOnly: true
      additionalProperties: false
      description: The details of watchers on an issue
      xml:
        name: watchers
    JiraWorkflow:
      type: object
      properties:
        created:
          type: string
          description: The creation date of the workflow
          nullable: true
        loopedTransitionContainerLayout:
          $ref: '#/components/schemas/WorkflowLayout'
        description:
          type: string
          description: The description of the workflow
        transitions:
          uniqueItems: true
          type: array
          description: The transitions of the workflow. Note that a transition can
            have either the deprecated `to`/`from` fields or the `toStatusReference`/`links`
            fields, but never both nor a combination
          items:
            $ref: '#/components/schemas/WorkflowTransitions'
        version:
          $ref: '#/components/schemas/DocumentVersion'
        startPointLayout:
          $ref: '#/components/schemas/WorkflowLayout'
        isEditable:
          type: boolean
          description: Indicates if the workflow can be edited
        scope:
          $ref: '#/components/schemas/WorkflowScope'
        name:
          type: string
          description: The name of the workflow
        statuses:
          uniqueItems: true
          type: array
          description: The statuses referenced in this workflow
          items:
            $ref: '#/components/schemas/WorkflowReferenceStatus'
        id:
          type: string
          description: The ID of the workflow
        usages:
          uniqueItems: true
          type: array
          description: |-
            Deprecated. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/changelog/#CHANGE-2298) for details.

            Use the optional `workflows.usages` expand to get additional information about the projects and issue types associated with the requested workflows
          nullable: true
          items:
            $ref: '#/components/schemas/ProjectIssueTypes'
        updated:
          type: string
          description: The last edited date of the workflow
          nullable: true
        taskId:
          type: string
          description: If there is a current [asynchronous task](#async-operations)
            operation for this workflow
          nullable: true
      additionalProperties: false
      description: Details of a workflow
    LegacyJackson1ListWorklog:
      type: array
      items:
        $ref: '#/components/schemas/Worklog'
    DuplicatePlanRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The plan name
      additionalProperties: false
    CustomFieldOptionCreate:
      required:
      - value
      type: object
      properties:
        disabled:
          type: boolean
          description: Whether the option is disabled
        optionId:
          type: string
          description: For cascading options, the ID of a parent option
        value:
          type: string
          description: The value of the custom field option
      additionalProperties: false
      description: Details of a custom field option to create
    ProjectIssueTypeHierarchy:
      type: object
      properties:
        hierarchy:
          type: array
          description: Details of an issue type hierarchy level
          readOnly: true
          items:
            $ref: '#/components/schemas/ProjectIssueTypesHierarchyLevel'
        projectId:
          type: integer
          description: The ID of the project
          format: int64
          readOnly: true
      additionalProperties: false
      description: The hierarchy of issue types within a project
    LinkedIssue:
      type: object
      properties:
        self:
          type: string
          description: The URL of the issue
          format: uri
          readOnly: true
        id:
          type: string
          description: The ID of an issue. Required if `key` isn't provided
        fields:
          description: The fields associated with the issue
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Fields1'
        key:
          type: string
          description: The key of an issue. Required if `id` isn't provided
      additionalProperties: false
      description: The ID or key of a linked issue
    SwimlanePayload:
      type: object
      properties:
        jqlQuery:
          type: string
          description: The jql query for the quick filter
        name:
          type: string
          description: The name of the quick filter
        description:
          type: string
          description: The description of the quick filter
      additionalProperties: false
      description: The payload for custom swimlanes
    CustomFieldContextDefaultValueForgeNumberField:
      required:
      - contextId
      - number
      - type
      type: object
      properties:
        number:
          type: number
          description: The default floating-point number
          format: double
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
      description: Default value for a Forge number custom field
    Workflow:
      required:
      - description
      - id
      type: object
      properties:
        isDefault:
          type: boolean
          description: Whether this is the default workflow
        operations:
          $ref: '#/components/schemas/WorkflowOperations'
        projects:
          type: array
          description: The projects the workflow is assigned to, through workflow
            schemes
          items:
            $ref: '#/components/schemas/ProjectDetails'
        hasDraftWorkflow:
          type: boolean
          description: Whether the workflow has a draft version
        created:
          type: string
          description: The creation date of the workflow
          format: date-time
        description:
          type: string
          description: The description of the workflow
        statuses:
          type: array
          description: The statuses of the workflow
          items:
            $ref: '#/components/schemas/WorkflowStatus'
        id:
          $ref: '#/components/schemas/PublishedWorkflowId'
        schemes:
          type: array
          description: The workflow schemes the workflow is assigned to
          items:
            $ref: '#/components/schemas/WorkflowSchemeIdName'
        transitions:
          type: array
          description: The transitions of the workflow
          items:
            $ref: '#/components/schemas/Transition'
        updated:
          type: string
          description: The last edited date of the workflow
          format: date-time
      additionalProperties: false
      description: Details about a workflow
    UpdateFieldConfigurationSchemeDetails:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: The name of the field configuration scheme. The name must be
            unique
          writeOnly: true
        description:
          maxLength: 1024
          type: string
          description: The description of the field configuration scheme
          writeOnly: true
      additionalProperties: false
      description: The details of the field configuration scheme
    CreatePlanOnlyTeamRequest:
      required:
      - name
      - planningStyle
      type: object
      properties:
        planningStyle:
          type: string
          description: The planning style for the plan-only team. This must be "Scrum"
            or "Kanban"
          enum:
          - Scrum
          - Kanban
        memberAccountIds:
          uniqueItems: true
          type: array
          description: The account IDs of the plan-only team members
          items:
            type: string
        issueSourceId:
          type: integer
          description: The ID of the issue source for the plan-only team
          format: int64
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: The plan-only team name
        sprintLength:
          type: integer
          description: The sprint length for the plan-only team
          format: int64
        capacity:
          type: number
          description: The capacity for the plan-only team
          format: double
      additionalProperties: false
    EntityPropertyDetails:
      required:
      - entityId
      - key
      - value
      type: object
      properties:
        entityId:
          type: number
          description: The entity property ID
          example: 123
        value:
          type: string
          description: The new value of the entity property
          example: newValue
        key:
          type: string
          description: The entity property key
          example: mykey
    JqlQueriesToParse:
      required:
      - queries
      type: object
      properties:
        queries:
          minLength: 1
          type: array
          description: A list of queries to parse
          items:
            minLength: 1
            type: string
      additionalProperties: false
      description: A list of JQL queries to parse
      writeOnly: true
    UpdateCustomFieldDetails:
      type: object
      properties:
        searcherKey:
          type: string
          description: |-
            The searcher that defines the way the field is searched in Jira. It can be set to `null`, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):

             *  `cascadingselect`: `cascadingselectsearcher`
             *  `datepicker`: `daterange`
             *  `datetime`: `datetimerange`
             *  `float`: `exactnumber` or `numberrange`
             *  `grouppicker`: `grouppickersearcher`
             *  `importid`: `exactnumber` or `numberrange`
             *  `labels`: `labelsearcher`
             *  `multicheckboxes`: `multiselectsearcher`
             *  `multigrouppicker`: `multiselectsearcher`
             *  `multiselect`: `multiselectsearcher`
             *  `multiuserpicker`: `userpickergroupsearcher`
             *  `multiversion`: `versionsearcher`
             *  `project`: `projectsearcher`
             *  `radiobuttons`: `multiselectsearcher`
             *  `readonlyfield`: `textsearcher`
             *  `select`: `multiselectsearcher`
             *  `textarea`: `textsearcher`
             *  `textfield`: `textsearcher`
             *  `url`: `exacttextsearcher`
             *  `userpicker`: `userpickergroupsearcher`
             *  `version`: `versionsearcher`
          enum:
          - com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:daterange
          - com.atlassian.jira.plugin.system.customfieldtypes:datetimerange
          - com.atlassian.jira.plugin.system.customfieldtypes:exactnumber
          - com.atlassian.jira.plugin.system.customfieldtypes:exacttextsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:labelsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:numberrange
          - com.atlassian.jira.plugin.system.customfieldtypes:projectsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:textsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:userpickergroupsearcher
          - com.atlassian.jira.plugin.system.customfieldtypes:versionsearcher
        name:
          type: string
          description: The name of the custom field. It doesn't have to be unique.
            The maximum length is 255 characters
        description:
          type: string
          description: The description of the custom field. The maximum length is
            40000 characters
      additionalProperties: false
      description: Details of a custom field
      writeOnly: true
    ProjectRoleUser:
      type: object
      properties:
        accountId:
          maxLength: 128
          type: string
          description: The account ID of the user, which uniquely identifies the user
            across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
            Returns *unknown* if the record is deleted and corrupted, for example,
            as the result of a server import
          readOnly: true
      additionalProperties: false
      description: Details of the user associated with the role
    IssueTypeIssueCreateMetadata:
      type: object
      properties:
        expand:
          type: string
          description: Expand options that include additional issue type metadata
            details in the response
          readOnly: true
          xml:
            attribute: true
        avatarId:
          type: integer
          description: The ID of the issue type's avatar
          format: int64
          readOnly: true
        hierarchyLevel:
          type: integer
          description: Hierarchy level of the issue type
          format: int32
          readOnly: true
        scope:
          description: Details of the next-gen projects the issue type is available
            in
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the issue type
          readOnly: true
        description:
          type: string
          description: The description of the issue type
          readOnly: true
        self:
          type: string
          description: The URL of these issue type details
          readOnly: true
        entityId:
          type: string
          description: Unique ID for next-gen projects
          format: uuid
          readOnly: true
        iconUrl:
          type: string
          description: The URL of the issue type's avatar
          readOnly: true
        id:
          type: string
          description: The ID of the issue type
          readOnly: true
        subtask:
          type: boolean
          description: Whether this issue type is used to create subtasks
          readOnly: true
        fields:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FieldMetadata'
          description: List of the fields available when creating an issue for the
            issue type
          readOnly: true
      additionalProperties: false
      description: Details of the issue creation metadata for an issue type
    JiraDateInput:
      required:
      - formattedDate
      type: object
      properties:
        formattedDate:
          type: string
      additionalProperties: false
    FieldDetails:
      type: object
      properties:
        schema:
          description: The data schema for the field
          allOf:
          - $ref: '#/components/schemas/JsonTypeBean'
        navigable:
          type: boolean
          description: Whether the field can be used as a column on the issue navigator
        orderable:
          type: boolean
          description: Whether the content of the field can be used to order lists
        custom:
          type: boolean
          description: Whether the field is a custom field
        scope:
          description: The scope of the field
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the field
        clauseNames:
          uniqueItems: true
          type: array
          description: The names that can be used to reference the field in an advanced
            search. For more information, see [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ)
          items:
            type: string
        id:
          type: string
          description: The ID of the field
        key:
          type: string
          description: The key of the field
        searchable:
          type: boolean
          description: Whether the content of the field can be searched
      additionalProperties: false
      description: Details about a field
      xml:
        name: field
    CreateUpdateRoleRequestBean:
      type: object
      properties:
        name:
          type: string
          description: The name of the project role. Must be unique. Cannot begin
            or end with whitespace. The maximum length is 255 characters. Required
            when creating a project role. Optional when partially updating a project
            role
        description:
          type: string
          description: A description of the project role. Required when fully updating
            a project role. Optional when creating or partially updating a project
            role
      additionalProperties: false
    JqlQuery:
      type: object
      properties:
        orderBy:
          $ref: '#/components/schemas/JqlQueryOrderByClause'
        where:
          $ref: '#/components/schemas/JqlQueryClause'
      additionalProperties: false
      description: A parsed JQL query
    DeleteAndReplaceVersionBean:
      type: object
      properties:
        moveAffectedIssuesTo:
          type: integer
          description: The ID of the version to update `affectedVersion` to when the
            field contains the deleted version
          format: int64
        moveFixIssuesTo:
          type: integer
          description: The ID of the version to update `fixVersion` to when the field
            contains the deleted version
          format: int64
        customFieldReplacementList:
          type: array
          description: An array of custom field IDs (`customFieldId`) and version
            IDs (`moveTo`) to update when the fields contain the deleted version
          items:
            $ref: '#/components/schemas/CustomFieldReplacement'
      additionalProperties: false
    WorkflowSchemeUpdateRequiredMappingsRequest:
      required:
      - id
      - workflowsForIssueTypes
      type: object
      properties:
        defaultWorkflowId:
          type: string
          description: The ID of the new default workflow for this workflow scheme.
            Only used in global-scoped workflow schemes. If it isn't specified, is
            set to *Jira Workflow (jira)*
          nullable: true
        workflowsForIssueTypes:
          type: array
          description: The new workflow to issue type mappings for this workflow scheme
          items:
            $ref: '#/components/schemas/WorkflowSchemeAssociation'
        id:
          type: string
          description: The ID of the workflow scheme
      additionalProperties: false
      description: The request payload to get the required mappings for updating a
        workflow scheme
    WorkflowMetadataAndIssueTypeRestModel:
      required:
      - issueTypeIds
      - workflow
      type: object
      properties:
        workflow:
          $ref: '#/components/schemas/WorkflowMetadataRestModel'
        issueTypeIds:
          type: array
          description: The list of issue type IDs for the mapping
          items:
            type: string
            description: The list of issue type IDs for the mapping.
      additionalProperties: false
      description: The workflow metadata and issue type IDs which use this workflow
    CreateDateFieldRequest:
      required:
      - type
      type: object
      properties:
        dateCustomFieldId:
          type: integer
          description: A date custom field ID. This is required if the type is "DateCustomField"
          format: int64
        type:
          type: string
          description: The date field type. This must be "DueDate", "TargetStartDate",
            "TargetEndDate" or "DateCustomField"
          enum:
          - DueDate
          - TargetStartDate
          - TargetEndDate
          - DateCustomField
      additionalProperties: false
    IssueTypeProjectCreatePayload:
      type: object
      properties:
        issueTypeHierarchy:
          type: array
          description: Defines the issue type hierarhy to be created and used during
            this project creation. This will only add new levels if there isn't an
            existing level
          nullable: true
          items:
            $ref: '#/components/schemas/IssueTypeHierarchyPayload'
        issueTypeScheme:
          $ref: '#/components/schemas/IssueTypeSchemePayload'
        issueTypes:
          type: array
          description: Only needed if you want to create issue types, you can otherwise
            use the ids of issue types in the scheme configuration
          nullable: true
          items:
            $ref: '#/components/schemas/IssueTypePayload'
      additionalProperties: false
      description: The payload for creating issue types in a project
      nullable: true
    PriorityWithSequence:
      type: object
      properties:
        sequence:
          type: string
          description: The sequence of the issue priority
        isDefault:
          type: boolean
          description: Whether this priority is the default
        statusColor:
          type: string
          description: The color used to indicate the issue priority
        name:
          type: string
          description: The name of the issue priority
        description:
          type: string
          description: The description of the issue priority
        self:
          type: string
          description: The URL of the issue priority
        iconUrl:
          type: string
          description: The URL of the icon for the issue priority
        id:
          type: string
          description: The ID of the issue priority
      additionalProperties: false
      description: An issue priority with sequence information
    ChangeFilterOwner:
      required:
      - accountId
      type: object
      properties:
        accountId:
          type: string
          description: The account ID of the new owner
      additionalProperties: false
      description: The account ID of the new owner
      writeOnly: true
    SystemAvatars:
      type: object
      properties:
        system:
          type: array
          description: A list of avatar details
          readOnly: true
          items:
            $ref: '#/components/schemas/Avatar'
      additionalProperties: false
      description: List of system avatars
    Votes:
      type: object
      properties:
        hasVoted:
          type: boolean
          description: Whether the user making this request has voted on the issue
          readOnly: true
        voters:
          type: array
          description: List of the users who have voted on this issue. An empty list
            is returned when the calling user doesn't have the *View voters and watchers*
            project permission
          readOnly: true
          items:
            $ref: '#/components/schemas/User'
        self:
          type: string
          description: The URL of these issue vote details
          format: uri
          readOnly: true
        votes:
          type: integer
          description: The number of votes on the issue
          format: int64
          readOnly: true
      additionalProperties: false
      description: The details of votes on an issue
    StatusMappingDTO:
      required:
      - issueTypeId
      - projectId
      - statusMigrations
      type: object
      properties:
        issueTypeId:
          type: string
          description: The issue type for the status mapping.
        projectId:
          type: string
          description: The project for the status mapping.
        statusMigrations:
          type: array
          description: The list of old and new status ID mappings for the specified
            project and issue type.
          items:
            $ref: '#/components/schemas/StatusMigration'
      additionalProperties: true
      description: The mapping of old to new status ID for a specific project and
        issue type
    IssueTypeScreenSchemeMappingDetails:
      required:
      - issueTypeMappings
      type: object
      properties:
        issueTypeMappings:
          type: array
          description: The list of issue type to screen scheme mappings. A *default*
            entry cannot be specified because a default entry is added when an issue
            type screen scheme is created
          writeOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeScreenSchemeMapping'
      additionalProperties: false
      description: A list of issue type screen scheme mappings
    ProjectAndIssueTypePair:
      required:
      - issueTypeId
      - projectId
      type: object
      properties:
        issueTypeId:
          type: string
          description: The ID of the issue type
        projectId:
          type: string
          description: The ID of the project
      additionalProperties: false
      description: A project and issueType ID pair that identifies a status mapping
    CustomFieldPayload:
      type: object
      properties:
        searcherKey:
          type: string
          description: The searcher key of the custom field
          example: See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-fields/#api-rest-api-3-field-post
            `searcherKey` for values
        onConflict:
          type: string
          description: The strategy to use when there is a conflict with an existing
            custom field. FAIL - Fail execution, this always needs to be unique; USE
            - Use the existing entity and ignore new entity parameters
          enum:
          - FAIL
          - USE
          - NEW
        cfType:
          type: string
          description: The type of the custom field
          example: See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-fields/#api-rest-api-3-field-post
            `type` for values
        name:
          type: string
          description: The name of the custom field
          example: My Custom Field
        description:
          type: string
          description: The description of the custom field
          example: This is a custom field
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: Defines the payload for the custom field definitions. See https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-fields/\#api-rest-api-3-field-post
      nullable: true
    Context:
      type: object
      properties:
        scope:
          description: The scope of the context
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the context
          readOnly: true
        id:
          type: integer
          description: The ID of the context
          format: int64
          readOnly: true
      additionalProperties: false
      description: A context
    GetCustomFieldResponse:
      required:
      - customFieldId
      type: object
      properties:
        filter:
          type: boolean
          description: Allows filtering issues based on their values for the custom
            field
        customFieldId:
          type: integer
          description: The custom field ID
          format: int64
      additionalProperties: false
    IssueBean:
      type: object
      properties:
        schema:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JsonTypeBean'
          description: The schema describing each field present on the issue
          readOnly: true
        editmeta:
          description: The metadata for the fields on the issue that can be amended
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/IssueUpdateMetadata'
        fieldsToInclude:
          $ref: '#/components/schemas/IncludedFields'
        changelog:
          description: Details of changelogs associated with the issue
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/PageOfChangelogs'
        transitions:
          type: array
          description: The transitions that can be performed on the issue
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTransition'
        renderedFields:
          type: object
          additionalProperties:
            readOnly: true
          description: The rendered value of each field present on the issue
          readOnly: true
        expand:
          type: string
          description: Expand options that include additional issue details in the
            response
          readOnly: true
          xml:
            attribute: true
        names:
          type: object
          additionalProperties:
            type: string
            readOnly: true
          description: The ID and name of each field present on the issue
          readOnly: true
        operations:
          description: The operations that can be performed on the issue
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Operations'
        versionedRepresentations:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              readOnly: true
            readOnly: true
          description: The versions of each field on the issue
          readOnly: true
        self:
          type: string
          description: The URL of the issue details
          format: uri
          readOnly: true
        id:
          type: string
          description: The ID of the issue
          readOnly: true
        fields:
          type: object
          additionalProperties: {
            }
        key:
          type: string
          description: The key of the issue
          readOnly: true
        properties:
          type: object
          additionalProperties:
            readOnly: true
          description: Details of the issue properties identified in the request
          readOnly: true
      additionalProperties: false
      description: Details about an issue
      xml:
        name: issue
    ProjectCreateResourceIdentifier:
      type: object
      properties:
        anID:
          type: boolean
        areference:
          type: boolean
        entityType:
          type: string
        entityId:
          type: string
        id:
          type: string
        type:
          type: string
          enum:
          - id
          - ref
      additionalProperties: false
      description: 'Every project-created entity has an ID that must be unique within
        the scope of the project creation. PCRI (Project Create Resource Identifier)
        is a standard format for creating IDs and references to other project entities.
        PCRI format is defined as follows: pcri:\[entityType\]:\[type\]:\[entityId\]
        entityType - the type of an entity, e.g. status, role, workflow type - PCRI
        type, either `id` - The ID of an entity that already exists in the target
        site, or `ref` - A unique reference to an entity that is being created entityId
        - entity identifier, if type is `id` - must be an existing entity ID that
        exists in the Jira site, if `ref` - must be unique across all entities in
        the scope of this project template creation'
      example: pcri:permissionScheme:id:10001
    BoardPayload:
      type: object
      properties:
        boardFilterJQL:
          type: string
          description: Takes in a JQL string to create a new filter. If no value is
            provided, it'll default to a JQL filter for the project creating
          example: project = 'My Project'
        cardColorStrategy:
          type: string
          description: Card color settings of the board
          enum:
          - ISSUE_TYPE
          - REQUEST_TYPE
          - ASSIGNEE
          - PRIORITY
          - NONE
          - CUSTOM
        features:
          type: array
          description: Feature settings for the board
          items:
            $ref: '#/components/schemas/BoardFeaturePayload'
        cardLayout:
          $ref: '#/components/schemas/CardLayout'
        quickFilters:
          type: array
          description: The quick filters for the board
          items:
            $ref: '#/components/schemas/QuickFilterPayload'
        columns:
          type: array
          description: The columns of the board
          items:
            $ref: '#/components/schemas/BoardColumnPayload'
        name:
          type: string
          description: The name of the board
        swimlanes:
          $ref: '#/components/schemas/SwimlanesPayload'
        cardLayouts:
          type: array
          description: Card layout settings of the board
          items:
            $ref: '#/components/schemas/CardLayoutField'
        supportsSprint:
          type: boolean
          description: Whether sprints are supported on the board
          default: true
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
        workingDaysConfig:
          $ref: '#/components/schemas/WorkingDaysConfig'
      additionalProperties: false
      description: The payload for creating a board
    AddGroupBean:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the group.
      additionalProperties: true
    JQLCountRequestBean:
      type: object
      properties:
        jql:
          type: string
          description: A [JQL](https://confluence.atlassian.com/x/egORLQ) expression.
            For performance reasons, this parameter requires a bounded query. A bounded
            query is a query with a search restriction
      additionalProperties: false
    PermissionHolder:
      required:
      - type
      type: object
      properties:
        expand:
          type: string
          description: Expand options that include additional permission holder details
            in the response
          readOnly: true
        parameter:
          type: string
          description: As a group's name can change, use of `value` is recommended.
            The identifier associated withthe `type` value that defines the holder
            of the permission
        type:
          type: string
          description: The type of permission holder
        value:
          type: string
          description: The identifier associated with the `type` value that defines
            the holder of the permission
      additionalProperties: false
      description: Details of a user, group, field, or project role that holds a permission.
        See [Holder object](../api-group-permission-schemes/#holder-object) in *Get
        all permission schemes* for more information
    RolesCapabilityPayload:
      type: object
      properties:
        roles:
          type: array
          description: The list of roles to create
          items:
            $ref: '#/components/schemas/RolePayload'
        roleToProjectActors:
          type: object
          additionalProperties:
            type: array
            description: A map of role PCRI (can be ID or REF) to a list of user or
              group PCRI IDs to associate with the role and project.
            items:
              $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
          description: A map of role PCRI (can be ID or REF) to a list of user or
            group PCRI IDs to associate with the role and project
      additionalProperties: false
      nullable: true
    JiraUserField:
      required:
      - accountId
      type: object
      properties:
        accountId:
          type: string
      additionalProperties: false
    SecuritySchemeId:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the issue security scheme.
          readOnly: true
      additionalProperties: true
      description: The ID of the issue security scheme
    IssuePickerSuggestions:
      type: object
      properties:
        sections:
          type: array
          description: A list of issues for an issue type suggested for use in auto-completion
          readOnly: true
          items:
            $ref: '#/components/schemas/IssuePickerSuggestionsIssueType'
      additionalProperties: false
      description: A list of issues suggested for use in auto-completion
    CustomTemplateRequestDTO:
      type: object
      properties:
        issueType:
          $ref: '#/components/schemas/IssueTypeProjectCreatePayload'
        notification:
          $ref: '#/components/schemas/NotificationSchemePayload'
        security:
          $ref: '#/components/schemas/SecuritySchemePayload'
        role:
          $ref: '#/components/schemas/RolesCapabilityPayload'
        field:
          $ref: '#/components/schemas/FieldCapabilityPayload'
        workflow:
          $ref: '#/components/schemas/WorkflowCapabilityPayload'
        scope:
          $ref: '#/components/schemas/ScopePayload'
        boards:
          $ref: '#/components/schemas/BoardsPayload'
        project:
          $ref: '#/components/schemas/ProjectPayload'
        permissionScheme:
          $ref: '#/components/schemas/PermissionPayloadDTO'
      additionalProperties: false
      description: The specific request object for creating a project with template
    IssueBulkDeletePayload:
      required:
      - selectedIssueIdsOrKeys
      type: object
      properties:
        selectedIssueIdsOrKeys:
          type: array
          description: List of issue IDs or keys which are to be bulk deleted. These
            IDs or keys can be from different projects and issue types
          writeOnly: true
          items:
            type: string
            writeOnly: true
        sendBulkNotification:
          type: boolean
          description: |-
            A boolean value that indicates whether to send a bulk change notification when the issues are being deleted.

            If `true`, dispatches a bulk notification email to users about the updates
          nullable: true
          writeOnly: true
          default: true
      additionalProperties: false
      description: Issue Bulk Delete Payload
    ComponentJsonBean:
      type: object
      properties:
        ari:
          type: string
        description:
          type: string
        id:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        self:
          type: string
      additionalProperties: true
    JiraSingleGroupPickerField:
      required:
      - fieldId
      - group
      type: object
      properties:
        fieldId:
          type: string
        group:
          $ref: '#/components/schemas/JiraGroupInput'
      additionalProperties: false
    FieldMetadata:
      required:
      - key
      - name
      - operations
      - required
      - schema
      type: object
      properties:
        allowedValues:
          type: array
          description: The list of values allowed in the field
          readOnly: true
          items:
            readOnly: true
        hasDefaultValue:
          type: boolean
          description: Whether the field has a default value
          readOnly: true
        schema:
          description: The data type of the field
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/JsonTypeBean'
        operations:
          type: array
          description: The list of operations that can be performed on the field
          readOnly: true
          items:
            type: string
            readOnly: true
        configuration:
          type: object
          additionalProperties:
            readOnly: true
          description: The configuration properties
          readOnly: true
        defaultValue:
          description: The default value of the field
          readOnly: true
        name:
          type: string
          description: The name of the field
          readOnly: true
        autoCompleteUrl:
          type: string
          description: The URL that can be used to automatically complete the field
          readOnly: true
        key:
          type: string
          description: The key of the field
          readOnly: true
        required:
          type: boolean
          description: Whether the field is required
          readOnly: true
      additionalProperties: false
      description: The metadata describing an issue field
      xml:
        name: availableField
    IssueUpdateDetails:
      type: object
      properties:
        fields:
          type: object
          additionalProperties: {
            }
          description: List of issue screen fields to update, specifying the sub-field
            to update and its value for each field. This field provides a straightforward
            option when setting a sub-field. When multiple sub-fields or other operations
            are required, use `update`. Fields included in here cannot be included
            in `update`.
        historyMetadata:
          description: Additional issue history details.
          allOf:
          - $ref: '#/components/schemas/HistoryMetadata'
        properties:
          type: array
          description: Details of issue properties to be add or update.
          items:
            $ref: '#/components/schemas/EntityProperty'
        transition:
          description: Details of a transition. Required when performing a transition,
            optional when creating or editing an issue.
          allOf:
          - $ref: '#/components/schemas/IssueTransition'
        update:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/FieldUpdateOperation'
          description: A Map containing the field field name and a list of operations
            to perform on the issue screen field. Note that fields included in here
            cannot be included in `fields`.
      additionalProperties: true
      description: Details of an issue update request
    CustomFieldContextDefaultValueLabels:
      required:
      - labels
      - type
      type: object
      properties:
        type:
          type: string
        labels:
          type: array
          description: The default labels value
          items:
            type: string
            description: The default labels value.
      description: Default value for a labels custom field
    IssueLinkTypes:
      type: object
      properties:
        issueLinkTypes:
          type: array
          description: The issue link type bean
          readOnly: true
          xml:
            name: issueLinkTypes
          items:
            $ref: '#/components/schemas/IssueLinkType'
      additionalProperties: false
      description: A list of issue link type beans
      xml:
        name: issueLinkTypes
    SearchResults:
      type: object
      properties:
        schema:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/JsonTypeBean'
          description: The schema describing the field types in the search results
          readOnly: true
        warningMessages:
          type: array
          description: Any warnings related to the JQL query
          readOnly: true
          items:
            type: string
            readOnly: true
        expand:
          type: string
          description: Expand options that include additional search result details
            in the response
          readOnly: true
        total:
          type: integer
          description: The number of results on the page
          format: int32
          readOnly: true
        names:
          type: object
          additionalProperties:
            type: string
            readOnly: true
          description: The ID and name of each field in the search results
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of results that could be on the page
          format: int32
          readOnly: true
        issues:
          type: array
          description: The list of issues found by the search
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueBean'
        startAt:
          type: integer
          description: The index of the first item returned on the page
          format: int32
          readOnly: true
      additionalProperties: false
      description: The result of a JQL search
    WorkManagementNavigationInfo:
      type: object
      properties:
        boardName:
          type: string
    JiraNumberField:
      required:
      - fieldId
      type: object
      properties:
        value:
          type: number
          format: double
        fieldId:
          type: string
      additionalProperties: false
    StatusProjectIssueTypeUsagePage:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Page token for the next page of issue type usages
        values:
          type: array
          description: The list of issue types
          items:
            $ref: '#/components/schemas/StatusProjectIssueTypeUsage'
      additionalProperties: false
      description: A page of issue types
    ActorsMap:
      type: object
      properties:
        groupId:
          type: array
          description: The ID of the group to add. This parameter cannot be used with
            the `group` parameter
          items:
            type: string
        user:
          type: array
          description: The user account ID of the user to add
          items:
            type: string
        group:
          type: array
          description: The name of the group to add. This parameter cannot be used
            with the `groupId` parameter. As a group's name can change, use of `groupId`
            is recommended
          items:
            type: string
      additionalProperties: false
    CustomFieldContextDefaultValueProject:
      required:
      - contextId
      - projectId
      - type
      type: object
      properties:
        contextId:
          type: string
          description: The ID of the context
        type:
          type: string
        projectId:
          type: string
          description: The ID of the default project
      description: The default value for a project custom field
    IssueSecuritySchemeToProjectMapping:
      type: object
      properties:
        issueSecuritySchemeId:
          type: string
          readOnly: true
        projectId:
          type: string
          readOnly: true
      additionalProperties: true
      description: Details about an project using security scheme mapping
    JexpEvaluateCtxIssues:
      type: object
      properties:
        jql:
          description: The JQL query that specifies the set of issues available in
            the Jira expression
          allOf:
          - $ref: '#/components/schemas/JexpEvaluateCtxJqlIssues'
      additionalProperties: false
      description: The JQL specifying the issues available in the evaluated Jira expression
        under the `issues` context variable. This bean will be replacing `JexpIssues`
        bean as part of new `evaluate` endpoint
    JqlQueryClauseTimePredicate:
      required:
      - operand
      - operator
      type: object
      properties:
        operand:
          $ref: '#/components/schemas/JqlQueryClauseOperand'
        operator:
          type: string
          description: The operator between the field and the operand
          enum:
          - before
          - after
          - from
          - to
          - 'on'
          - during
          - by
      description: A time predicate for a temporal JQL clause
    WorkflowScheme:
      type: object
      properties:
        originalDefaultWorkflow:
          type: string
          description: For draft workflow schemes, this property is the name of the
            default workflow for the original workflow scheme. The default workflow
            has *All Unassigned Issue Types* assigned to it in Jira
          readOnly: true
        description:
          type: string
          description: The description of the workflow scheme
        issueTypes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IssueTypeDetails'
          description: The issue types available in Jira
          readOnly: true
        originalIssueTypeMappings:
          type: object
          additionalProperties:
            type: string
            readOnly: true
          description: For draft workflow schemes, this property is the issue type
            to workflow mappings for the original workflow scheme, where each mapping
            is an issue type ID and workflow name pair. Note that an issue type can
            only be mapped to one workflow in a workflow scheme
          readOnly: true
        defaultWorkflow:
          type: string
          description: The name of the default workflow for the workflow scheme. The
            default workflow has *All Unassigned Issue Types* assigned to it in Jira.
            If `defaultWorkflow` is not specified when creating a workflow scheme,
            it is set to *Jira Workflow (jira)*
        updateDraftIfNeeded:
          type: boolean
          description: |-
            Whether to create or update a draft workflow scheme when updating an active workflow scheme. An active workflow scheme is a workflow scheme that is used by at least one project. The following examples show how this property works:

             *  Update an active workflow scheme with `updateDraftIfNeeded` set to `true`: If a draft workflow scheme exists, it is updated. Otherwise, a draft workflow scheme is created.
             *  Update an active workflow scheme with `updateDraftIfNeeded` set to `false`: An error is returned, as active workflow schemes cannot be updated.
             *  Update an inactive workflow scheme with `updateDraftIfNeeded` set to `true`: The workflow scheme is updated, as inactive workflow schemes do not require drafts to update.

            Defaults to `false`
        draft:
          type: boolean
          description: Whether the workflow scheme is a draft or not
          readOnly: true
        name:
          type: string
          description: The name of the workflow scheme. The name must be unique. The
            maximum length is 255 characters. Required when creating a workflow scheme
        self:
          type: string
          format: uri
          readOnly: true
        lastModifiedUser:
          description: The user that last modified the draft workflow scheme. A modification
            is a change to the issue type-project mappings only. This property does
            not apply to non-draft workflows
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        id:
          type: integer
          description: The ID of the workflow scheme
          format: int64
          readOnly: true
        lastModified:
          type: string
          description: The date-time that the draft workflow scheme was last modified.
            A modification is a change to the issue type-project mappings only. This
            property does not apply to non-draft workflows
          readOnly: true
        issueTypeMappings:
          type: object
          additionalProperties:
            type: string
          description: The issue type to workflow mappings, where each mapping is
            an issue type ID and workflow name pair. Note that an issue type can only
            be mapped to one workflow in a workflow scheme
      additionalProperties: false
      description: Details about a workflow scheme
    BulkPermissionsRequestBean:
      type: object
      properties:
        accountId:
          type: string
          description: The account ID of a user
        globalPermissions:
          uniqueItems: true
          type: array
          description: Global permissions to look up
          items:
            type: string
        projectPermissions:
          uniqueItems: true
          type: array
          description: Project permissions with associated projects and issues to
            look up
          items:
            $ref: '#/components/schemas/BulkProjectPermissions'
      additionalProperties: false
      description: Details of global permissions to look up and project permissions
        with associated projects and issues to look up
    ScreenableTab:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the screen tab. The maximum length is 255 characters
        id:
          type: integer
          description: The ID of the screen tab
          format: int64
          readOnly: true
      additionalProperties: false
      description: A screen tab
    FromLayoutPayload:
      type: object
      properties:
        fromPort:
          type: integer
          description: The port that the transition can be made from
          format: int32
        toPortOverride:
          type: integer
          description: The port that the transition goes to
          format: int32
        status:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for the layout details for the start end of a transition
    DashboardGadgetSettings:
      type: object
      properties:
        color:
          type: string
          description: The color of the gadget. Should be one of `blue`, `red`, `yellow`,
            `green`, `cyan`, `purple`, `gray`, or `white`
          writeOnly: true
        ignoreUriAndModuleKeyValidation:
          type: boolean
          description: Whether to ignore the validation of module key and URI. For
            example, when a gadget is created that is a part of an application that
            isn't installed
          writeOnly: true
        position:
          description: The position of the gadget. When the gadget is placed into
            the position, other gadgets in the same column are moved down to accommodate
            it
          allOf:
          - $ref: '#/components/schemas/DashboardGadgetPosition'
        title:
          type: string
          description: The title of the gadget
          writeOnly: true
        uri:
          type: string
          description: The URI of the gadget type. Can't be provided with `moduleKey`
          writeOnly: true
        moduleKey:
          type: string
          description: The module key of the gadget type. Can't be provided with `uri`
          writeOnly: true
      additionalProperties: false
      description: Details of the settings for a dashboard gadget
    PageBeanResolutionJsonBean:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/ResolutionJsonBean'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    WorkflowCompoundCondition:
      required:
      - conditions
      - nodeType
      - operator
      type: object
      properties:
        conditions:
          type: array
          description: The list of workflow conditions
          items:
            $ref: '#/components/schemas/WorkflowCondition'
        nodeType:
          type: string
        operator:
          type: string
          description: The compound condition operator
          enum:
          - AND
          - OR
      description: A compound workflow transition rule condition. This object returns
        `nodeType` as `compound`
    BoardFeaturePayload:
      type: object
      properties:
        state:
          type: boolean
          description: Whether the feature should be turned on or off
          enum:
          - true
          - false
        featureKey:
          type: string
          description: The key of the feature
          enum:
          - ESTIMATION
          - SPRINTS
      additionalProperties: false
      description: The payload for setting a board feature
    JExpEvaluateIssuesMetaBean:
      type: object
      properties:
        jql:
          $ref: '#/components/schemas/JExpEvaluateIssuesJqlMetaDataBean'
      additionalProperties: false
      description: Meta data describing the `issues` context variable.This bean will
        be replacing IssuesMetaBean bean as part of new `evaluate` endpoint
    WorkflowSchemeIdName:
      required:
      - id
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the workflow scheme
        id:
          type: string
          description: The ID of the workflow scheme
      additionalProperties: false
      description: The ID and the name of the workflow scheme
    CustomFieldContextDefaultValueMultipleVersionPicker:
      required:
      - type
      - versionIds
      type: object
      properties:
        versionOrder:
          type: string
          description: The order the pickable versions are displayed in. If not provided,
            the released-first order is used. Available version orders are `"releasedFirst"`
            and `"unreleasedFirst"`
        versionIds:
          uniqueItems: true
          type: array
          description: The IDs of the default versions
          items:
            type: string
            description: The IDs of the default versions.
        type:
          type: string
      description: The default value for a multiple version picker custom field
    JiraLabelsField:
      required:
      - bulkEditMultiSelectFieldOption
      - fieldId
      - labels
      type: object
      properties:
        labelProperties:
          type: array
          items:
            $ref: '#/components/schemas/JiraLabelPropertiesInputJackson1'
        bulkEditMultiSelectFieldOption:
          type: string
          enum:
          - ADD
          - REMOVE
          - REPLACE
          - REMOVE_ALL
        fieldId:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/JiraLabelsInput'
      additionalProperties: false
    AvailableWorkflowTriggers:
      required:
      - availableTypes
      - ruleKey
      type: object
      properties:
        availableTypes:
          type: array
          description: The list of available trigger types
          items:
            $ref: '#/components/schemas/AvailableWorkflowTriggerTypes'
        ruleKey:
          type: string
          description: The rule key of the rule
      additionalProperties: false
      description: The trigger rules available
    JQLReferenceData:
      type: object
      properties:
        visibleFieldNames:
          type: array
          description: List of fields usable in JQL queries
          items:
            $ref: '#/components/schemas/FieldReferenceData'
        visibleFunctionNames:
          type: array
          description: List of functions usable in JQL queries
          items:
            $ref: '#/components/schemas/FunctionReferenceData'
        jqlReservedWords:
          type: array
          description: List of JQL query reserved words
          items:
            type: string
      additionalProperties: false
      description: Lists of JQL reference data
    IssueTypeScreenScheme:
      required:
      - id
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the issue type screen scheme
        description:
          type: string
          description: The description of the issue type screen scheme
        id:
          type: string
          description: The ID of the issue type screen scheme
      additionalProperties: false
      description: Details of an issue type screen scheme
    ProjectIdentifiers:
      required:
      - id
      - key
      - self
      type: object
      properties:
        self:
          type: string
          description: The URL of the created project
          format: uri
          readOnly: true
        id:
          type: integer
          description: The ID of the created project
          format: int64
          readOnly: true
        key:
          type: string
          description: The key of the created project
          readOnly: true
      additionalProperties: false
      description: Identifiers for a project
    ScreenDetails:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the screen. The name must be unique. The maximum
            length is 255 characters
          writeOnly: true
        description:
          type: string
          description: The description of the screen. The maximum length is 255 characters
          writeOnly: true
      additionalProperties: false
      description: Details of a screen
    SubmittedBulkOperation:
      type: object
      properties:
        taskId:
          type: string
      additionalProperties: false
    ContextualConfiguration:
      required:
      - fieldContextId
      - id
      type: object
      properties:
        fieldContextId:
          type: string
          description: The ID of the field context the configuration is associated
            with
          readOnly: true
        schema:
          description: The field value schema
        configuration:
          description: The field configuration
        id:
          type: string
          description: The ID of the configuration
      additionalProperties: false
      description: Details of the contextual configuration for a custom field
    PriorityMapping:
      type: object
      properties:
        in:
          type: object
          additionalProperties:
            type: integer
            format: int64
            writeOnly: true
          description: |-
            The mapping of priorities for issues being migrated **into** this priority scheme. Key is the old priority ID, value is the new priority ID (must exist in this priority scheme).

            E.g. The current priority scheme has priority ID `10001`. Issues with priority ID `10000` are being migrated into this priority scheme will need mapping to new priorities. The `in` mapping would be `{"10000": 10001}`
          writeOnly: true
        out:
          type: object
          additionalProperties:
            type: integer
            format: int64
            writeOnly: true
          description: |-
            The mapping of priorities for issues being migrated **out of** this priority scheme. Key is the old priority ID (must exist in this priority scheme), value is the new priority ID (must exist in the default priority scheme). Required for updating an existing priority scheme. Not used when creating a new priority scheme.

            E.g. The current priority scheme has priority ID `10001`. Issues with priority ID `10001` are being migrated out of this priority scheme will need mapping to new priorities. The `out` mapping would be `{"10001": 10000}`
          writeOnly: true
      additionalProperties: false
      description: Mapping of issue priorities for changes in priority schemes
      writeOnly: true
    CreateExclusionRulesRequest:
      type: object
      properties:
        workStatusIds:
          uniqueItems: true
          type: array
          description: The IDs of the work statuses to exclude from the plan
          items:
            type: integer
            format: int64
        releaseIds:
          uniqueItems: true
          type: array
          description: The IDs of the releases to exclude from the plan
          items:
            type: integer
            format: int64
        numberOfDaysToShowCompletedIssues:
          type: integer
          description: Issues completed this number of days ago will be excluded from
            the plan
          format: int32
        issueTypeIds:
          uniqueItems: true
          type: array
          description: The IDs of the issue types to exclude from the plan
          items:
            type: integer
            format: int64
        workStatusCategoryIds:
          uniqueItems: true
          type: array
          description: The IDs of the work status categories to exclude from the plan
          items:
            type: integer
            format: int64
        issueIds:
          uniqueItems: true
          type: array
          description: The IDs of the issues to exclude from the plan
          items:
            type: integer
            format: int64
      additionalProperties: false
    RegisteredWebhook:
      type: object
      properties:
        createdWebhookId:
          type: integer
          description: The ID of the webhook. Returned if the webhook is created
          format: int64
        errors:
          type: array
          description: Error messages specifying why the webhook creation failed
          items:
            type: string
            description: Error messages specifying why the webhook creation failed.
      additionalProperties: false
      description: ID of a registered webhook or error messages explaining why a webhook
        wasn't registered
    FunctionReferenceData:
      type: object
      properties:
        supportsListAndSingleValueOperators:
          type: string
          description: Whether the function supports both single and list value operators
          enum:
          - 'true'
          - 'false'
        types:
          type: array
          description: The data types returned by the function
          items:
            type: string
        displayName:
          type: string
          description: The display name of the function
        isList:
          type: string
          description: Whether the function can take a list of arguments
          enum:
          - 'true'
          - 'false'
        value:
          type: string
          description: The function identifier
      additionalProperties: false
      description: Details of functions that can be used in advanced searches
    CustomFieldContextProjectMapping:
      required:
      - contextId
      type: object
      properties:
        contextId:
          type: string
          description: The ID of the context
          readOnly: true
        projectId:
          type: string
          description: The ID of the project
          readOnly: true
        isGlobalContext:
          type: boolean
          description: Whether context is global
          readOnly: true
      additionalProperties: false
      description: Details of a context to project association
    JqlQueryOrderByClause:
      required:
      - fields
      type: object
      properties:
        fields:
          type: array
          description: The list of order-by clause fields and their ordering directives
          items:
            $ref: '#/components/schemas/JqlQueryOrderByClauseElement'
      additionalProperties: false
      description: Details of the order-by JQL clause
    PageBeanString:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            type: string
            readOnly: true
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    IssueChangelogIds:
      required:
      - changelogIds
      type: object
      properties:
        changelogIds:
          uniqueItems: true
          type: array
          description: The list of changelog IDs
          items:
            type: integer
            format: int64
      additionalProperties: false
      description: A list of changelog IDs
    PageBeanVersion:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/Version'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    FieldLastUsed:
      type: object
      properties:
        type:
          type: string
          description: |-
            Last used value type:

             *  *TRACKED*: field is tracked and a last used date is available.
             *  *NOT\_TRACKED*: field is not tracked, last used date is not available.
             *  *NO\_INFORMATION*: field is tracked, but no last used date is available
          enum:
          - TRACKED
          - NOT_TRACKED
          - NO_INFORMATION
        value:
          type: string
          description: The date when the value of the field last changed
          format: date-time
      additionalProperties: false
      description: Information about the most recent use of a field
    PageBeanUserKey:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/UserKey'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    PageBeanScreenScheme:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/ScreenScheme'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    PermissionGrant:
      type: object
      properties:
        holder:
          description: The user or group being granted the permission. It consists
            of a `type`, a type-dependent `parameter` and a type-dependent `value`.
            See [Holder object](../api-group-permission-schemes/#holder-object) in
            *Get all permission schemes* for more information.
          allOf:
          - $ref: '#/components/schemas/PermissionHolder'
        id:
          type: integer
          description: The ID of the permission granted details.
          format: int64
          readOnly: true
        permission:
          type: string
          description: The permission to grant. This permission can be one of the
            built-in permissions or a custom permission added by an app. See [Built-in
            permissions](../api-group-permission-schemes/#built-in-permissions) in
            *Get all permission schemes* for more information about the built-in permissions.
            See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/)
            and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/)
            module documentation for more information about custom permissions.
        self:
          type: string
          description: The URL of the permission granted details.
          format: uri
          readOnly: true
      additionalProperties: true
      description: Details about a permission granted to a user or group
    TargetClassification:
      required:
      - classifications
      type: object
      properties:
        issueType:
          type: string
          description: ID of the source issueType to which issues present in `issueIdOrKeys`
            belongs
          writeOnly: true
        classifications:
          type: object
          additionalProperties:
            type: array
            writeOnly: true
            items:
              type: string
              writeOnly: true
          description: An object with the key as the ID of the target classification
            and value with the list of the IDs of the current source classifications
          writeOnly: true
        projectKeyOrId:
          type: string
          description: ID or key of the source project to which issues present in
            `issueIdOrKeys` belongs
          writeOnly: true
      additionalProperties: false
      description: Classification mapping for classifications in source issues to
        respective target classification
      nullable: true
      writeOnly: true
    LegacyJackson1ListVersion:
      type: array
      items:
        $ref: '#/components/schemas/Version'
    WorkflowSimpleCondition:
      required:
      - nodeType
      - type
      type: object
      properties:
        configuration:
          type: object
          description: EXPERIMENTAL. The configuration of the transition rule
        nodeType:
          type: string
        type:
          type: string
          description: The type of the transition rule
      description: A workflow transition rule condition. This object returns `nodeType`
        as `simple`
    WorkflowLayout:
      type: object
      properties:
        x:
          type: number
          description: The x axis location
          format: double
        y:
          type: number
          description: The y axis location
          format: double
      additionalProperties: false
      description: The starting point for the statuses in the workflow
      nullable: true
    WorkflowSchemeUsage:
      type: object
      properties:
        id:
          type: string
          description: The workflow scheme ID
      additionalProperties: false
      description: The worflow scheme
    ComponentIssuesCount:
      type: object
      properties:
        self:
          type: string
          description: The URL for this count of issues for a component
          format: uri
          readOnly: true
        issueCount:
          type: integer
          description: The count of issues assigned to a component
          format: int64
          readOnly: true
      additionalProperties: false
      description: Count of issues assigned to a component
      xml:
        name: component
    IssueTypeSchemeUpdateDetails:
      type: object
      properties:
        defaultIssueTypeId:
          type: string
          description: The ID of the default issue type of the issue type scheme
          writeOnly: true
        name:
          type: string
          description: The name of the issue type scheme. The name must be unique.
            The maximum length is 255 characters
          writeOnly: true
        description:
          type: string
          description: The description of the issue type scheme. The maximum length
            is 4000 characters
          writeOnly: true
      additionalProperties: false
      description: Details of the name, description, and default issue type for an
        issue type scheme
    PageBeanContextualConfiguration:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/ContextualConfiguration'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    ProjectFeature:
      type: object
      properties:
        prerequisites:
          type: array
          description: List of keys of the features required to enable the feature
          items:
            type: string
        imageUri:
          type: string
          description: URI for the image representing the feature
        toggleLocked:
          type: boolean
          description: Whether the state of the feature can be updated
        feature:
          type: string
          description: The key of the feature
        localisedDescription:
          type: string
          description: Localized display description for the feature
        localisedName:
          type: string
          description: Localized display name for the feature
        state:
          type: string
          description: The state of the feature. When updating the state of a feature,
            only ENABLED and DISABLED are supported. Responses can contain all values
          enum:
          - ENABLED
          - DISABLED
          - COMING_SOON
        projectId:
          type: integer
          description: The ID of the project
          format: int64
      additionalProperties: false
      description: Details of a project feature
    WorkflowTrigger:
      required:
      - parameters
      - ruleKey
      type: object
      properties:
        id:
          type: string
          description: The ID of the trigger
        parameters:
          type: object
          additionalProperties:
            type: string
            description: The parameters of the trigger.
          description: The parameters of the trigger
        ruleKey:
          type: string
          description: The rule key of the trigger
      additionalProperties: false
      description: The trigger configuration associated with a workflow
    JiraDateTimeInput:
      required:
      - formattedDateTime
      type: object
      properties:
        formattedDateTime:
          type: string
      additionalProperties: false
    AttachmentArchive:
      type: object
      properties:
        totalEntryCount:
          type: integer
          format: int32
        moreAvailable:
          type: boolean
        entries:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentArchiveEntry'
        totalNumberOfEntriesAvailable:
          type: integer
          format: int32
      additionalProperties: false
    NotificationSchemePayload:
      type: object
      properties:
        onConflict:
          type: string
          description: The strategy to use when there is a conflict with an existing
            entity
          enum:
          - FAIL
          - USE
          - NEW
        name:
          type: string
          description: The name of the notification scheme
        description:
          type: string
          description: The description of the notification scheme
        notificationSchemeEvents:
          type: array
          description: The events and notifications for the notification scheme
          items:
            $ref: '#/components/schemas/NotificationSchemeEventPayload'
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for creating a notification scheme. The user has to
        supply the ID for the default notification scheme. For CMP this is provided
        in the project payload and should be left empty, for TMP it's provided using
        this payload
      nullable: true
      example: |
        CMP:  "project": {
                         "pcri": "pcri:project:ref:new-project1",
                         "notificationSchemeId": "pcri:notificationScheme:id:10000",
                         ...
                      }
        TMP: "notification": {
               "pcri": "pcri:notificationScheme:ref:notification1",
               "name": "Simplified Notification Scheme",
               "notificationSchemeEvents": [
                 {
                   "event": {
                     "id": "1"
                   },
                   "notifications": [
                     {
                       "notificationType": "CurrentAssignee"
                     },
                     {
                       "notificationType": "Reporter"
                     },
                     {
                       "notificationType": "AllWatchers"
                     }
                   ]
                 },
                 {
                   "event": {
                     "id": "2"
                   },
                   "notifications": [
                     {
                       "notificationType": "CurrentAssignee"
                     },
                     {
                       "notificationType": "Reporter"
                     },
                     {
                       "notificationType": "AllWatchers"
                     }
                   ]
                 },...
               ]
             }
    JqlQueryFieldEntityProperty:
      required:
      - entity
      - key
      - path
      type: object
      properties:
        path:
          type: string
          description: The path in the property value to query
          example: comments.count
        type:
          type: string
          description: The type of the property value extraction. Not available if
            the extraction for the property is not registered on the instance with
            the [Entity property](https://developer.atlassian.com/cloud/jira/platform/modules/entity-property/)
            module
          example: number
          enum:
          - number
          - string
          - text
          - date
          - user
        entity:
          type: string
          description: The object on which the property is set
          example: issue
        key:
          type: string
          description: The key of the property
          example: stats
      description: Details of an entity property
    ProjectUsage:
      type: object
      properties:
        id:
          type: string
          description: The project ID
      additionalProperties: false
      description: The project
    RichText:
      type: object
      properties:
        emptyAdf:
          type: boolean
        valueSet:
          type: boolean
        finalised:
          type: boolean
        empty:
          type: boolean
    PageBeanWorkflowScheme:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/WorkflowScheme'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    PageOfCreateMetaIssueTypes:
      type: object
      properties:
        createMetaIssueType:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeIssueCreateMetadata'
        issueTypes:
          type: array
          description: The list of CreateMetaIssueType.
          readOnly: true
          items:
            $ref: '#/components/schemas/IssueTypeIssueCreateMetadata'
        maxResults:
          type: integer
          description: The maximum number of items to return per page.
          format: int32
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned.
          format: int64
          readOnly: true
        total:
          type: integer
          description: The total number of items in all pages.
          format: int64
          readOnly: true
      additionalProperties: true
      description: A page of CreateMetaIssueTypes
    RemoveOptionFromIssuesResult:
      type: object
      properties:
        modifiedIssues:
          type: array
          description: The IDs of the modified issues
          items:
            type: integer
            format: int64
        unmodifiedIssues:
          type: array
          description: The IDs of the unchanged issues, those issues where errors
            prevent modification
          items:
            type: integer
            format: int64
        errors:
          description: A collection of errors related to unchanged issues. The collection
            size is limited, which means not all errors may be returned
          allOf:
          - $ref: '#/components/schemas/SimpleErrorCollection'
      additionalProperties: false
    WorkflowUpdateResponse:
      type: object
      properties:
        statuses:
          uniqueItems: true
          type: array
          description: List of updated statuses
          items:
            $ref: '#/components/schemas/JiraWorkflowStatus'
        workflows:
          uniqueItems: true
          type: array
          description: List of updated workflows
          items:
            $ref: '#/components/schemas/JiraWorkflow'
        taskId:
          type: string
          description: If there is a [asynchronous task](#async-operations) operation,
            as a result of this update
          nullable: true
      additionalProperties: false
    ProjectRoleGroup:
      type: object
      properties:
        displayName:
          type: string
          description: The display name of the group
        groupId:
          type: string
          description: The ID of the group
        name:
          type: string
          description: The name of the group. As a group's name can change, use of
            `groupId` is recommended to identify the group
      additionalProperties: false
      description: Details of the group associated with the role
    AttachmentArchiveMetadataReadable:
      type: object
      properties:
        totalEntryCount:
          type: integer
          description: The number of items included in the archive
          format: int64
          readOnly: true
        entries:
          type: array
          description: The list of the items included in the archive
          readOnly: true
          items:
            $ref: '#/components/schemas/AttachmentArchiveItemReadable'
        name:
          type: string
          description: The name of the archive file
          readOnly: true
        mediaType:
          type: string
          description: The MIME type of the attachment
          readOnly: true
        id:
          type: integer
          description: The ID of the attachment
          format: int64
          readOnly: true
      additionalProperties: false
      description: Metadata for an archive (for example a zip) and its contents
    JiraDateField:
      required:
      - fieldId
      type: object
      properties:
        date:
          $ref: '#/components/schemas/JiraDateInput'
        fieldId:
          type: string
      additionalProperties: false
    HistoryMetadataParticipant:
      type: object
      properties:
        avatarUrl:
          type: string
          description: The URL to an avatar for the user or system associated with
            a history record.
        displayName:
          type: string
          description: The display name of the user or system associated with a history
            record.
        displayNameKey:
          type: string
          description: The key of the display name of the user or system associated
            with a history record.
        id:
          type: string
          description: The ID of the user or system associated with a history record.
        type:
          type: string
          description: The type of the user or system associated with a history record.
        url:
          type: string
          description: The URL of the user or system associated with a history record.
      additionalProperties: true
      description: Details of user or system associated with a issue history metadata
        item
    SuggestedIssue:
      type: object
      properties:
        summary:
          type: string
          description: The phrase containing the query string in HTML format, with
            the string highlighted with HTML bold tags
          readOnly: true
        img:
          type: string
          description: The URL of the issue type's avatar
          readOnly: true
        keyHtml:
          type: string
          description: The key of the issue in HTML format
          readOnly: true
        summaryText:
          type: string
          description: The phrase containing the query string, as plain text
          readOnly: true
        id:
          type: integer
          description: The ID of the issue
          format: int64
          readOnly: true
        key:
          type: string
          description: The key of the issue
          readOnly: true
      additionalProperties: false
      description: An issue suggested for use in the issue picker auto-completion
    StatusMigration:
      required:
      - newStatusReference
      - oldStatusReference
      type: object
      properties:
        newStatusReference:
          type: string
          description: The new status ID.
        oldStatusReference:
          type: string
          description: The old status ID.
      additionalProperties: true
      description: The mapping of old to new status ID
    PageBeanCustomFieldContextOption:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/CustomFieldContextOption'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    UnrestrictedUserEmail:
      type: object
      properties:
        accountId:
          type: string
          description: The accountId of the user
        email:
          type: string
          description: The email of the user
      additionalProperties: true
    IssuesUpdateBean:
      type: object
      properties:
        issueUpdates:
          type: array
          items:
            $ref: '#/components/schemas/IssueUpdateDetails'
      additionalProperties: true
    JiraLabelsInput:
      required:
      - name
      type: object
      properties:
        name:
          type: string
      additionalProperties: false
    ComponentWithIssueCount:
      type: object
      properties:
        description:
          type: string
          description: The description for the component
          readOnly: true
        project:
          type: string
          description: The key of the project to which the component is assigned
          readOnly: true
        issueCount:
          type: integer
          description: Count of issues for the component
          format: int64
          readOnly: true
        lead:
          description: The user details for the component's lead user
          allOf:
          - $ref: '#/components/schemas/User'
        isAssigneeTypeValid:
          type: boolean
          description: Whether a user is associated with `assigneeType`. For example,
            if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead
            is not set, then `false` is returned
          readOnly: true
        realAssigneeType:
          type: string
          description: |-
            The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:

             *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.
             *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.
             *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.
             *  `PROJECT_DEFAULT` when none of the preceding cases are true
          readOnly: true
          enum:
          - PROJECT_DEFAULT
          - COMPONENT_LEAD
          - PROJECT_LEAD
          - UNASSIGNED
        name:
          type: string
          description: The name for the component
          readOnly: true
        self:
          type: string
          description: The URL for this count of the issues contained in the component
          format: uri
          readOnly: true
        realAssignee:
          description: The user assigned to issues created with this component, when
            `assigneeType` does not identify a valid assignee
          allOf:
          - $ref: '#/components/schemas/User'
        assignee:
          description: The details of the user associated with `assigneeType`, if
            any. See `realAssignee` for details of the user assigned to issues created
            with this component
          allOf:
          - $ref: '#/components/schemas/User'
        assigneeType:
          type: string
          description: |-
            The nominal user type used to determine the assignee for issues created with this component. See `realAssigneeType` for details on how the type of the user, and hence the user, assigned to issues is determined. Takes the following values:

             *  `PROJECT_LEAD` the assignee to any issues created with this component is nominally the lead for the project the component is in.
             *  `COMPONENT_LEAD` the assignee to any issues created with this component is nominally the lead for the component.
             *  `UNASSIGNED` an assignee is not set for issues created with this component.
             *  `PROJECT_DEFAULT` the assignee to any issues created with this component is nominally the default assignee for the project that the component is in
          readOnly: true
          enum:
          - PROJECT_DEFAULT
          - COMPONENT_LEAD
          - PROJECT_LEAD
          - UNASSIGNED
        id:
          type: string
          description: The unique identifier for the component
          readOnly: true
        projectId:
          type: integer
          description: Not used
          format: int64
          readOnly: true
      additionalProperties: false
      description: Details about a component with a count of the issues it contains
    CustomFieldContextDefaultValueFloat:
      required:
      - number
      - type
      type: object
      properties:
        number:
          type: number
          description: The default floating-point number
          format: double
        type:
          type: string
      description: Default value for a float (number) custom field
    CustomFieldUpdatedContextOptionsList:
      type: object
      properties:
        options:
          type: array
          description: The updated custom field options
          items:
            $ref: '#/components/schemas/CustomFieldOptionUpdate'
      additionalProperties: false
      description: A list of custom field options for a context
    Avatars:
      type: object
      properties:
        system:
          type: array
          description: System avatars list
          readOnly: true
          items:
            $ref: '#/components/schemas/Avatar'
        custom:
          type: array
          description: Custom avatars list
          readOnly: true
          items:
            $ref: '#/components/schemas/Avatar'
      additionalProperties: false
      description: Details about system and custom avatars
    ConditionGroupConfiguration:
      type: object
      properties:
        conditionGroups:
          type: array
          description: The nested conditions of the condition group
          items:
            $ref: '#/components/schemas/ConditionGroupConfiguration'
        conditions:
          type: array
          description: The rules for this condition
          items:
            $ref: '#/components/schemas/WorkflowRuleConfiguration'
        operation:
          type: string
          description: Determines how the conditions in the group are evaluated. Accepts
            either `ANY` or `ALL`. If `ANY` is used, at least one condition in the
            group must be true for the group to evaluate to true. If `ALL` is used,
            all conditions in the group must be true for the group to evaluate to
            true
          enum:
          - ANY
          - ALL
      additionalProperties: false
      description: The conditions group associated with the transition
      nullable: true
    NewUserDetails:
      required:
      - emailAddress
      - products
      type: object
      properties:
        applicationKeys:
          type: array
          description: Deprecated, do not use.
          items:
            type: string
        displayName:
          type: string
          description: This property is no longer available. If the user has an Atlassian
            account, their display name is not changed. If the user does not have
            an Atlassian account, they are sent an email asking them set up an account.
        emailAddress:
          type: string
          description: The email address for the user.
        key:
          type: string
          description: This property is no longer available. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details.
        name:
          type: string
          description: This property is no longer available. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details.
        password:
          type: string
          description: This property is no longer available. If the user has an Atlassian
            account, their password is not changed. If the user does not have an Atlassian
            account, they are sent an email asking them set up an account.
        products:
          uniqueItems: true
          type: array
          description: 'Products the new user has access to. Valid products are: jira-core,
            jira-servicedesk, jira-product-discovery, jira-software. To create a user
            without product access, set this field to be an empty array.'
          items:
            type: string
        self:
          type: string
          description: The URL of the user.
          readOnly: true
      additionalProperties: true
      description: The user details
    WorkflowScope:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/ProjectId'
        type:
          type: string
          description: The scope of the workflow. `GLOBAL` for company-managed projects
            and `PROJECT` for team-managed projects
          enum:
          - PROJECT
          - GLOBAL
      additionalProperties: false
      description: The scope of the workflow
    FieldConfigurationScheme:
      required:
      - id
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the field configuration scheme
        description:
          type: string
          description: The description of the field configuration scheme
        id:
          type: string
          description: The ID of the field configuration scheme
      additionalProperties: false
      description: Details of a field configuration scheme
    TargetToSourcesMapping:
      required:
      - inferClassificationDefaults
      - inferFieldDefaults
      - inferStatusDefaults
      - inferSubtaskTypeDefault
      - issueIdOrKeys
      type: object
      properties:
        inferSubtaskTypeDefault:
          type: boolean
          description: |-
            When an issue is moved, its subtasks (if there are any) need to be moved with it. `inferSubtaskTypeDefault` helps with moving the subtasks by picking a random subtask type in the target project.

            If `true`, subtasks will automatically move to the same project as their parent.

            When they move:

             *  Their `issueType` will be set to the default for subtasks in the target project.
             *  Values for mandatory fields will be retained from the source issues
             *  Specifying separate mapping for implicit subtasks won’t be allowed.

            If `false`, you must manually move the subtasks. They will retain the parent which they had in the current project after being moved
          writeOnly: true
        inferClassificationDefaults:
          type: boolean
          description: |-
            If `true`, when issues are moved into this target group, they will adopt the target project's default classification, if they don't have a classification already. If they do have a classification, it will be kept the same even after the move. Leave `targetClassification` empty when using this.

            If `false`, you must provide a `targetClassification` mapping for each classification associated with the selected issues.

            [Benefit from data classification](https://support.atlassian.com/security-and-access-policies/docs/what-is-data-classification/)
          writeOnly: true
        targetMandatoryFields:
          type: array
          description: |-
            List of objects containing mandatory fields in the target field configuration and new values that need to be set during the bulk move operation.

            The new values will only be applied if the field is mandatory in the target project and at least one issue from the source has that field empty, or if the field context is different in the target project (e.g. project-scoped version fields).

            **You should only define this property when `inferFieldDefaults` is `false`.**
          nullable: true
          writeOnly: true
          items:
            $ref: '#/components/schemas/TargetMandatoryFields'
        inferFieldDefaults:
          type: boolean
          description: |-
            If `true`, values from the source issues will be retained for the mandatory fields in the field configuration of the destination project. The `targetMandatoryFields` property shouldn't be defined.

            If `false`, the user is required to set values for mandatory fields present in the field configuration of the destination project. Provide input by defining the `targetMandatoryFields` property
          writeOnly: true
        issueIdsOrKeys:
          type: array
          description: List of issue IDs or keys to be moved
          writeOnly: true
          items:
            type: string
            writeOnly: true
        inferStatusDefaults:
          type: boolean
          description: |-
            If `true`, the statuses of issues being moved in this target group that are not present in the target workflow will be changed to the default status of the target workflow (see below). Leave `targetStatus` empty when using this.

            If `false`, you must provide a `targetStatus` for each status not present in the target workflow.

            The default status in a workflow is referred to as the "initial status". Each workflow has its own unique initial status. When an issue is created, it is automatically assigned to this initial status. Read more about configuring initial statuses: [Configure the initial status | Atlassian Support.](https://support.atlassian.com/jira-cloud-administration/docs/configure-the-initial-status/)
          writeOnly: true
        targetClassification:
          type: array
          description: |-
            List of the objects containing classifications in the source issues and their new values which need to be set during the bulk move operation.

            It is mandatory to provide source classification to target classification mapping when the source classification is invalid for the target project and issue type.

             *  **You should only define this property when `inferClassificationDefaults` is `false`.**
             *  **In order to provide mapping for issues which don't have a classification, use `"-1"`.**
          nullable: true
          writeOnly: true
          items:
            $ref: '#/components/schemas/TargetClassification'
        targetStatus:
          type: array
          description: |-
            List of the objects containing statuses in the source workflow and their new values which need to be set during the bulk move operation.

            The new values will only be applied if the source status is invalid for the target project and issue type.

            It is mandatory to provide source status to target status mapping when the source status is invalid for the target project and issue type.

            **You should only define this property when `inferStatusDefaults` is `false`.**
          nullable: true
          writeOnly: true
          items:
            $ref: '#/components/schemas/TargetStatus'
      additionalProperties: false
      description: An object representing the mapping of issues and data related to
        destination entities, like fields and statuses, that are required during a
        bulk move
    IssueLayouItemtPayload:
      type: object
      properties:
        sectionType:
          type: string
          description: The item section type
          enum:
          - content
          - primaryContext
          - secondaryContext
        type:
          type: string
          description: The item type. Currently only support FIELD
          enum:
          - FIELD
        itemKey:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: Defines the payload to configure the issue layout item for a project
    UserPickerUser:
      type: object
      properties:
        accountId:
          type: string
          description: The account ID of the user, which uniquely identifies the user
            across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
        avatarUrl:
          type: string
          description: The avatar URL of the user
          format: uri
        displayName:
          type: string
          description: The display name of the user. Depending on the user’s privacy
            setting, this may be returned as null
        accountType:
          type: string
          description: |-
            The user account type. Can take the following values:

             *  `atlassian` regular Atlassian user account
             *  `app` system account used for Connect applications and OAuth to represent external systems
             *  `customer` Jira Service Desk account representing an external service desk
          enum:
          - atlassian
          - app
          - customer
          - unknown
        name:
          type: string
          description: This property is no longer available . See the [deprecation
            notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
        html:
          type: string
          description: The display name, email address, and key of the user with the
            matched query string highlighted with the HTML bold tag
        key:
          type: string
          description: This property is no longer available. See the [deprecation
            notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
      additionalProperties: false
      description: A user found in a search
    EntityProperty:
      type: object
      properties:
        value:
          description: The value of the property. Required on create and update
        key:
          type: string
          description: The key of the property. Required on create and update
      additionalProperties: false
      description: An entity property, for more information see [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/)
    WorkflowSchemeAssociation:
      required:
      - issueTypeIds
      - workflowId
      type: object
      properties:
        issueTypeIds:
          uniqueItems: true
          type: array
          description: The issue types assigned to the workflow
          items:
            type: string
            description: The issue types assigned to the workflow.
        workflowId:
          type: string
          description: The ID of the workflow
      additionalProperties: false
      description: The explicit association between issue types and a workflow in
        a workflow scheme
    IssuesMetaBean:
      type: object
      properties:
        jql:
          $ref: '#/components/schemas/IssuesJqlMetaDataBean'
      additionalProperties: false
      description: Meta data describing the `issues` context variable
    FilterSubscription:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the filter subscription
          format: int64
          readOnly: true
        user:
          description: The user subscribing to filter
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        group:
          description: The group subscribing to filter
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/GroupName'
      additionalProperties: false
      description: Details of a user or group subscribing to a filter
    StatusProjectUsage:
      type: object
      properties:
        id:
          type: string
          description: The project ID
      additionalProperties: false
      description: The project
    WorkflowRulesSearch:
      required:
      - ruleIds
      - workflowEntityId
      type: object
      properties:
        expand:
          type: string
          description: Use expand to include additional information in the response.
            This parameter accepts `transition` which, for each rule, returns information
            about the transition the rule is assigned to
          example: transition
        ruleIds:
          maxItems: 10
          minItems: 1
          type: array
          description: The list of workflow rule IDs
          items:
            type: string
            description: Workflow rule ID.
            format: uuid
            example: 55d44f1d-c859-42e5-9c27-2c5ec3f340b1
        workflowEntityId:
          type: string
          description: The workflow ID
          format: uuid
          example: a498d711-685d-428d-8c3e-bc03bb450ea7
      description: Details of the workflow and its transition rules
    Changelog:
      type: object
      properties:
        historyMetadata:
          description: The history metadata associated with the changed
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/HistoryMetadata'
        author:
          description: The user who made the change
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserDetails'
        created:
          type: string
          description: The date on which the change took place
          format: date-time
          readOnly: true
        id:
          type: string
          description: The ID of the changelog
          readOnly: true
        items:
          type: array
          description: The list of items changed
          readOnly: true
          items:
            $ref: '#/components/schemas/ChangeDetails'
      additionalProperties: false
      description: A log of changes made to issue fields. Changelogs related to workflow
        associations are currently being deprecated
    PageBeanCustomFieldContext:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/CustomFieldContext'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    CreateIssueSecuritySchemeDetails:
      required:
      - name
      type: object
      properties:
        description:
          maxLength: 255
          type: string
          description: The description of the issue security scheme.
          writeOnly: true
        levels:
          type: array
          description: The list of scheme levels which should be added to the security
            scheme.
          writeOnly: true
          items:
            $ref: '#/components/schemas/SecuritySchemeLevelBean'
        name:
          maxLength: 60
          type: string
          description: The name of the issue security scheme. Must be unique (case-insensitive).
          writeOnly: true
      additionalProperties: true
      description: Issue security scheme and it's details
    CreateResolutionDetails:
      required:
      - name
      type: object
      properties:
        description:
          maxLength: 255
          type: string
          description: The description of the resolution.
          writeOnly: true
        name:
          maxLength: 60
          type: string
          description: The name of the resolution. Must be unique (case-insensitive).
          writeOnly: true
      additionalProperties: true
      description: Details of an issue resolution
    DashboardGadget:
      required:
      - color
      - id
      - position
      - title
      type: object
      properties:
        color:
          type: string
          description: The color of the gadget. Should be one of `blue`, `red`, `yellow`,
            `green`, `cyan`, `purple`, `gray`, or `white`
          readOnly: true
          enum:
          - blue
          - red
          - yellow
          - green
          - cyan
          - purple
          - gray
          - white
        id:
          type: integer
          description: The ID of the gadget instance
          format: int64
          readOnly: true
        position:
          description: The position of the gadget
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/DashboardGadgetPosition'
        title:
          type: string
          description: The title of the gadget
          readOnly: true
        uri:
          type: string
          description: The URI of the gadget type
          readOnly: true
        moduleKey:
          type: string
          description: The module key of the gadget type
          readOnly: true
      additionalProperties: false
      description: Details of a gadget
    DataClassificationLevelsBean:
      type: object
      properties:
        classifications:
          type: array
          description: The data classifications
          items:
            $ref: '#/components/schemas/DataClassificationTagBean'
      additionalProperties: false
      description: The data classification
    WorkflowReadRequest:
      type: object
      properties:
        workflowNames:
          type: array
          description: The list of workflow names to query
          items:
            type: string
            description: The list of workflow names to query.
        workflowIds:
          type: array
          description: The list of workflow IDs to query
          items:
            type: string
            description: The list of workflow IDs to query.
        projectAndIssueTypes:
          type: array
          description: The list of projects and issue types to query
          items:
            $ref: '#/components/schemas/ProjectAndIssueTypePair'
      additionalProperties: false
    GetAtlassianTeamResponse:
      required:
      - id
      - planningStyle
      type: object
      properties:
        planningStyle:
          type: string
          description: The planning style for the Atlassian team. This is "Scrum"
            or "Kanban"
          enum:
          - Scrum
          - Kanban
        issueSourceId:
          type: integer
          description: The ID of the issue source for the Atlassian team
          format: int64
        sprintLength:
          type: integer
          description: The sprint length for the Atlassian team
          format: int64
        id:
          type: string
          description: The Atlassian team ID
        capacity:
          type: number
          description: The capacity for the Atlassian team
          format: double
      additionalProperties: false
    ProjectIssueTypeMappings:
      required:
      - mappings
      type: object
      properties:
        mappings:
          type: array
          description: The project and issue type mappings
          writeOnly: true
          items:
            $ref: '#/components/schemas/ProjectIssueTypeMapping'
      additionalProperties: false
      description: The project and issue type mappings
    ScreenableField:
      type: object
      properties:
        name:
          type: string
          description: The name of the screen tab field. Required on create and update.
            The maximum length is 255 characters
        id:
          type: string
          description: The ID of the screen tab field
          readOnly: true
      additionalProperties: false
      description: A screen tab field
    ProjectComponent:
      type: object
      properties:
        leadUserName:
          type: string
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
        metadata:
          type: object
          additionalProperties:
            type: string
            readOnly: true
          description: Compass component's metadata. Can't be updated. Not required
            for creating a Project Component
          readOnly: true
        description:
          type: string
          description: The description for the component. Optional when creating or
            updating a component
        project:
          type: string
          description: The key of the project the component is assigned to. Required
            when creating a component. Can't be updated
        leadAccountId:
          maxLength: 128
          type: string
          description: The accountId of the component's lead user. The accountId uniquely
            identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*
          writeOnly: true
        lead:
          description: The user details for the component's lead user
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        isAssigneeTypeValid:
          type: boolean
          description: Whether a user is associated with `assigneeType`. For example,
            if the `assigneeType` is set to `COMPONENT_LEAD` but the component lead
            is not set, then `false` is returned
          readOnly: true
        realAssigneeType:
          type: string
          description: |-
            The type of the assignee that is assigned to issues created with this component, when an assignee cannot be set from the `assigneeType`. For example, `assigneeType` is set to `COMPONENT_LEAD` but no component lead is set. This property is set to one of the following values:

             *  `PROJECT_LEAD` when `assigneeType` is `PROJECT_LEAD` and the project lead has permission to be assigned issues in the project that the component is in.
             *  `COMPONENT_LEAD` when `assignee`Type is `COMPONENT_LEAD` and the component lead has permission to be assigned issues in the project that the component is in.
             *  `UNASSIGNED` when `assigneeType` is `UNASSIGNED` and Jira is configured to allow unassigned issues.
             *  `PROJECT_DEFAULT` when none of the preceding cases are true
          readOnly: true
          enum:
          - PROJECT_DEFAULT
          - COMPONENT_LEAD
          - PROJECT_LEAD
          - UNASSIGNED
        name:
          type: string
          description: The unique name for the component in the project. Required
            when creating a component. Optional when updating a component. The maximum
            length is 255 characters
        ari:
          type: string
          description: Compass component's ID. Can't be updated. Not required for
            creating a Project Component
          readOnly: true
        self:
          type: string
          description: The URL of the component
          format: uri
          readOnly: true
        realAssignee:
          description: The user assigned to issues created with this component, when
            `assigneeType` does not identify a valid assignee
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        assignee:
          description: The details of the user associated with `assigneeType`, if
            any. See `realAssignee` for details of the user assigned to issues created
            with this component
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/User'
        assigneeType:
          type: string
          description: "The nominal user type used to determine the assignee for issues\
            \ created with this component. See `realAssigneeType` for details on how\
            \ the type of the user, and hence the user, assigned to issues is determined.\
            \ Can take the following values:\n\n *  `PROJECT_LEAD` the assignee to\
            \ any issues created with this component is nominally the lead for the\
            \ project the component is in.\n *  `COMPONENT_LEAD` the assignee to any\
            \ issues created with this component is nominally the lead for the component.\n\
            \ *  `UNASSIGNED` an assignee is not set for issues created with this\
            \ component.\n *  `PROJECT_DEFAULT` the assignee to any issues created\
            \ with this component is nominally the default assignee for the project\
            \ that the component is in.\n\nDefault value: `PROJECT_DEFAULT`.  \nOptional\
            \ when creating or updating a component"
          enum:
          - PROJECT_DEFAULT
          - COMPONENT_LEAD
          - PROJECT_LEAD
          - UNASSIGNED
        id:
          type: string
          description: The unique identifier for the component
          readOnly: true
        projectId:
          type: integer
          description: The ID of the project the component is assigned to
          format: int64
          readOnly: true
      additionalProperties: false
      description: Details about a project component
      xml:
        name: component
    JiraSingleLineTextField:
      required:
      - fieldId
      - text
      type: object
      properties:
        text:
          type: string
        fieldId:
          type: string
      additionalProperties: false
    BulkEditShareableEntityResponse:
      required:
      - action
      type: object
      properties:
        entityErrors:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BulkEditActionError'
          description: The mapping dashboard id to errors if any
        action:
          type: string
          description: Allowed action for bulk edit shareable entity
          enum:
          - changeOwner
          - changePermission
          - addPermission
          - removePermission
      additionalProperties: false
      description: Details of a request to bulk edit shareable entity
    FailedWebhooks:
      required:
      - maxResults
      - values
      type: object
      properties:
        next:
          type: string
          description: The URL to the next page of results. Present only if the request
            returned at least one result.The next page may be empty at the time of
            receiving the response, but new failed webhooks may appear in time. You
            can save the URL to the next page and query for new results periodically
            (for example, every hour)
          format: uri
        maxResults:
          type: integer
          description: The maximum number of items on the page. If the list of values
            is shorter than this number, then there are no more pages
          format: int32
        values:
          type: array
          description: The list of webhooks
          items:
            $ref: '#/components/schemas/FailedWebhook'
      additionalProperties: false
      description: A page of failed webhooks
    HistoryMetadata:
      type: object
      properties:
        activityDescription:
          type: string
          description: The activity described in the history record.
        activityDescriptionKey:
          type: string
          description: The key of the activity described in the history record.
        actor:
          description: Details of the user whose action created the history record.
          allOf:
          - $ref: '#/components/schemas/HistoryMetadataParticipant'
        cause:
          description: Details of the cause that triggered the creation the history
            record.
          allOf:
          - $ref: '#/components/schemas/HistoryMetadataParticipant'
        description:
          type: string
          description: The description of the history record.
        descriptionKey:
          type: string
          description: The description key of the history record.
        emailDescription:
          type: string
          description: The description of the email address associated the history
            record.
        emailDescriptionKey:
          type: string
          description: The description key of the email address associated the history
            record.
        extraData:
          type: object
          additionalProperties:
            type: string
          description: Additional arbitrary information about the history record.
        generator:
          description: Details of the system that generated the history record.
          allOf:
          - $ref: '#/components/schemas/HistoryMetadataParticipant'
        type:
          type: string
          description: The type of the history record.
      additionalProperties: true
      description: Details of issue history metadata
    JiraPriorityField:
      required:
      - priorityId
      type: object
      properties:
        priorityId:
          type: string
      additionalProperties: false
    ListWrapperCallbackApplicationRole:
      type: object
      additionalProperties: false
    IssueTypeScreenSchemeProjectAssociation:
      type: object
      properties:
        issueTypeScreenSchemeId:
          type: string
          description: The ID of the issue type screen scheme
          writeOnly: true
        projectId:
          type: string
          description: The ID of the project
          writeOnly: true
      additionalProperties: false
      description: Associated issue type screen scheme and project
    IssueTypeSchemeProjects:
      required:
      - issueTypeScheme
      - projectIds
      type: object
      properties:
        projectIds:
          type: array
          description: The IDs of the projects using the issue type scheme
          items:
            type: string
        issueTypeScheme:
          description: Details of an issue type scheme
          allOf:
          - $ref: '#/components/schemas/IssueTypeScheme'
      additionalProperties: false
      description: Issue type scheme with a list of the projects that use it
    Hierarchy:
      type: object
      properties:
        baseLevelId:
          type: integer
          description: 'The ID of the base level. This property is deprecated, see
            [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/)'
          format: int64
        levels:
          type: array
          description: Details about the hierarchy level
          readOnly: true
          items:
            $ref: '#/components/schemas/SimplifiedHierarchyLevel'
      additionalProperties: false
      description: The project issue type hierarchy
      xml:
        name: hierarchy
    InputStreamSource:
      type: object
      properties:
        inputStream:
          type: object
      additionalProperties: false
    CustomFieldValueUpdateDetails:
      type: object
      properties:
        updates:
          type: array
          description: The list of custom field update details
          items:
            $ref: '#/components/schemas/CustomFieldValueUpdate'
      additionalProperties: false
      description: Details of updates for a custom field
      writeOnly: true
    JqlFunctionPrecomputationUpdateResponse:
      type: object
      properties:
        notFoundPrecomputationIDs:
          uniqueItems: true
          type: array
          description: List of precomputations that were not found and skipped. Only
            returned if the request passed skipNotFoundPrecomputations=true
          readOnly: true
          items:
            type: string
            readOnly: true
      additionalProperties: false
      description: Result of updating JQL Function precomputations
    UpdateScreenSchemeDetails:
      type: object
      properties:
        screens:
          description: The IDs of the screens for the screen types of the screen scheme.
            Only screens used in classic projects are accepted
          allOf:
          - $ref: '#/components/schemas/UpdateScreenTypes'
        name:
          type: string
          description: The name of the screen scheme. The name must be unique. The
            maximum length is 255 characters
          writeOnly: true
        description:
          type: string
          description: The description of the screen scheme. The maximum length is
            255 characters
          writeOnly: true
      additionalProperties: false
      description: Details of a screen scheme
    BulkIssueIsWatching:
      type: object
      properties:
        issuesIsWatching:
          type: object
          additionalProperties:
            type: boolean
            readOnly: true
          description: The map of issue ID to boolean watch status
          readOnly: true
      additionalProperties: false
      description: A container for the watch status of a list of issues
    CustomFieldContextDefaultValueDate:
      required:
      - type
      type: object
      properties:
        date:
          type: string
          description: The default date in ISO format. Ignored if `useCurrent` is
            true
        useCurrent:
          type: boolean
          description: Whether to use the current date
          default: false
        type:
          type: string
      description: The default value for a Date custom field
    JqlFunctionPrecomputationUpdateBean:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The id of the precomputation to update
          writeOnly: true
        error:
          type: string
          description: The error message to be displayed to the user if the given
            function clause is no longer valid during recalculation of the precomputation
          writeOnly: true
        value:
          type: string
          description: The new value of the precomputation
          writeOnly: true
      additionalProperties: false
      description: Precomputation id and its new value
      writeOnly: true
    Fields1:
      type: object
      properties:
        issueType:
          description: The type of the linked issue
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/IssueTypeDetails'
        summary:
          type: string
          description: The summary description of the linked issue
          readOnly: true
        issuetype:
          $ref: '#/components/schemas/IssueTypeDetails'
        assignee:
          description: The assignee of the linked issue
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/UserDetails'
        priority:
          description: The priority of the linked issue
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Priority'
        status:
          description: The status of the linked issue
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/StatusDetails'
        timetracking:
          description: The time tracking of the linked issue
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/TimeTrackingDetails'
      additionalProperties: false
      description: Key fields from the linked issue
    CreateProjectDetails:
      required:
      - key
      - name
      type: object
      properties:
        notificationScheme:
          type: integer
          description: The ID of the notification scheme for the project. Use the
            [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource
            to get a list of notification scheme IDs
          format: int64
        description:
          type: string
          description: A brief description of the project
        leadAccountId:
          maxLength: 128
          type: string
          description: The account ID of the project lead. Either `lead` or `leadAccountId`
            must be set when creating a project. Cannot be provided with `lead`
        lead:
          type: string
          description: This parameter is deprecated because of privacy changes. Use
            `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details. The user name of the project lead. Either `lead` or `leadAccountId`
            must be set when creating a project. Cannot be provided with `leadAccountId`
        url:
          type: string
          description: A link to information about this project, such as project documentation
        workflowScheme:
          type: integer
          description: The ID of the workflow scheme for the project. Use the [Get
            all workflow schemes](#api-rest-api-3-workflowscheme-get) operation to
            get a list of workflow scheme IDs. If you specify the workflow scheme
            you cannot specify the project template key
          format: int64
        issueTypeScheme:
          type: integer
          description: The ID of the issue type scheme for the project. Use the [Get
            all issue type schemes](#api-rest-api-3-issuetypescheme-get) operation
            to get a list of issue type scheme IDs. If you specify the issue type
            scheme you cannot specify the project template key
          format: int64
        avatarId:
          type: integer
          description: An integer value for the project's avatar
          format: int64
        issueSecurityScheme:
          type: integer
          description: The ID of the issue security scheme for the project, which
            enables you to control who can and cannot view issues. Use the [Get issue
            security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to
            get all issue security scheme IDs
          format: int64
        projectTemplateKey:
          type: string
          description: A predefined configuration for a project. The type of the `projectTemplateKey`
            must match with the type of the `projectTypeKey`
          enum:
          - com.pyxis.greenhopper.jira:gh-simplified-agility-kanban
          - com.pyxis.greenhopper.jira:gh-simplified-agility-scrum
          - com.pyxis.greenhopper.jira:gh-simplified-basic
          - com.pyxis.greenhopper.jira:gh-simplified-kanban-classic
          - com.pyxis.greenhopper.jira:gh-simplified-scrum-classic
          - com.pyxis.greenhopper.jira:gh-cross-team-template
          - com.pyxis.greenhopper.jira:gh-cross-team-planning-template
          - com.atlassian.servicedesk:simplified-it-service-management
          - com.atlassian.servicedesk:simplified-it-service-management-basic
          - com.atlassian.servicedesk:simplified-it-service-management-operations
          - com.atlassian.servicedesk:simplified-general-service-desk
          - com.atlassian.servicedesk:simplified-general-service-desk-it
          - com.atlassian.servicedesk:simplified-general-service-desk-business
          - com.atlassian.servicedesk:simplified-internal-service-desk
          - com.atlassian.servicedesk:simplified-external-service-desk
          - com.atlassian.servicedesk:simplified-hr-service-desk
          - com.atlassian.servicedesk:simplified-facilities-service-desk
          - com.atlassian.servicedesk:simplified-legal-service-desk
          - com.atlassian.servicedesk:simplified-marketing-service-desk
          - com.atlassian.servicedesk:simplified-finance-service-desk
          - com.atlassian.servicedesk:simplified-analytics-service-desk
          - com.atlassian.servicedesk:simplified-design-service-desk
          - com.atlassian.servicedesk:simplified-sales-service-desk
          - com.atlassian.servicedesk:simplified-halp-service-desk
          - com.atlassian.servicedesk:simplified-blank-project-it
          - com.atlassian.servicedesk:simplified-blank-project-business
          - com.atlassian.servicedesk:next-gen-it-service-desk
          - com.atlassian.servicedesk:next-gen-hr-service-desk
          - com.atlassian.servicedesk:next-gen-legal-service-desk
          - com.atlassian.servicedesk:next-gen-marketing-service-desk
          - com.atlassian.servicedesk:next-gen-facilities-service-desk
          - com.atlassian.servicedesk:next-gen-general-service-desk
          - com.atlassian.servicedesk:next-gen-general-it-service-desk
          - com.atlassian.servicedesk:next-gen-general-business-service-desk
          - com.atlassian.servicedesk:next-gen-analytics-service-desk
          - com.atlassian.servicedesk:next-gen-finance-service-desk
          - com.atlassian.servicedesk:next-gen-design-service-desk
          - com.atlassian.servicedesk:next-gen-sales-service-desk
          - com.atlassian.jira-core-project-templates:jira-core-simplified-content-management
          - com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval
          - com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking
          - com.atlassian.jira-core-project-templates:jira-core-simplified-process-control
          - com.atlassian.jira-core-project-templates:jira-core-simplified-procurement
          - com.atlassian.jira-core-project-templates:jira-core-simplified-project-management
          - com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment
          - com.atlassian.jira-core-project-templates:jira-core-simplified-task-
        name:
          type: string
          description: The name of the project
        issueTypeScreenScheme:
          type: integer
          description: The ID of the issue type screen scheme for the project. Use
            the [Get all issue type screen schemes](#api-rest-api-3-issuetypescreenscheme-get)
            operation to get a list of issue type screen scheme IDs. If you specify
            the issue type screen scheme you cannot specify the project template key
          format: int64
        permissionScheme:
          type: integer
          description: The ID of the permission scheme for the project. Use the [Get
            all permission schemes](#api-rest-api-3-permissionscheme-get) resource
            to see a list of all permission scheme IDs
          format: int64
        assigneeType:
          type: string
          description: The default assignee when creating issues for this project
          enum:
          - PROJECT_LEAD
          - UNASSIGNED
        fieldConfigurationScheme:
          type: integer
          description: The ID of the field configuration scheme for the project. Use
            the [Get all field configuration schemes](#api-rest-api-3-fieldconfigurationscheme-get)
            operation to get a list of field configuration scheme IDs. If you specify
            the field configuration scheme you cannot specify the project template
            key
          format: int64
        projectTypeKey:
          type: string
          description: The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes),
            which defines the application-specific feature set. If you don't specify
            the project template you have to specify the project type
          enum:
          - software
          - service_desk
          - business
        categoryId:
          type: integer
          description: The ID of the project's category. A complete list of category
            IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get)
            operation
          format: int64
        key:
          type: string
          description: Project keys must be unique and start with an uppercase letter
            followed by one or more uppercase alphanumeric characters. The maximum
            length is 10 characters
      additionalProperties: false
      description: Details about the project
    CustomFieldContextDefaultValueDateTime:
      required:
      - type
      type: object
      properties:
        dateTime:
          type: string
          description: The default date-time in ISO format. Ignored if `useCurrent`
            is true
        useCurrent:
          type: boolean
          description: Whether to use the current date
          default: false
        type:
          type: string
      description: The default value for a date time custom field
    VersionIssueCounts:
      type: object
      properties:
        issueCountWithCustomFieldsShowingVersion:
          type: integer
          description: Count of issues where a version custom field is set to the
            version
          format: int64
          readOnly: true
        customFieldUsage:
          type: array
          description: List of custom fields using the version
          readOnly: true
          items:
            $ref: '#/components/schemas/VersionUsageInCustomField'
        issuesAffectedCount:
          type: integer
          description: Count of issues where the `affectedVersion` is set to the version
          format: int64
          readOnly: true
        issuesFixedCount:
          type: integer
          description: Count of issues where the `fixVersion` is set to the version
          format: int64
          readOnly: true
        self:
          type: string
          description: The URL of these count details
          format: uri
          readOnly: true
      additionalProperties: false
      description: Various counts of issues within a version
      xml:
        name: version
    IssueError:
      type: object
      properties:
        errorMessage:
          type: string
          description: The error that occurred when fetching this issue
          readOnly: true
        id:
          type: string
          description: The ID of the issue
          readOnly: true
      additionalProperties: false
      description: Describes the error that occurred when retrieving data for a particular
        issue
    BulkProjectPermissions:
      required:
      - permissions
      type: object
      properties:
        projects:
          uniqueItems: true
          type: array
          description: List of project IDs
          items:
            type: integer
            format: int64
        permissions:
          uniqueItems: true
          type: array
          description: List of project permissions
          items:
            type: string
        issues:
          uniqueItems: true
          type: array
          description: List of issue IDs
          items:
            type: integer
            format: int64
      additionalProperties: false
      description: Details of project permissions and associated issues and projects
        to look up
    IssueTypeScreenSchemeId:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: The ID of the issue type screen scheme
          readOnly: true
      additionalProperties: false
      description: The ID of an issue type screen scheme
    Resource:
      type: object
      properties:
        readable:
          type: boolean
        file:
          type: string
          format: binary
        filename:
          type: string
        description:
          type: string
        inputStream:
          type: object
        uri:
          type: string
          format: uri
        open:
          type: boolean
        url:
          type: string
          format: url
      additionalProperties: false
    JiraSingleSelectField:
      required:
      - fieldId
      - option
      type: object
      properties:
        fieldId:
          type: string
        option:
          $ref: '#/components/schemas/JiraSelectedOptionField'
      additionalProperties: false
      description: |-
        Add or clear a single select field:

         *  To add, specify the option with an `optionId`.
         *  To clear, pass an option with `optionId` as `-1`
    JsonContextVariable:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: Type of custom context variable
        value:
          type: object
          description: A JSON object containing custom content
      description: A JSON object with custom content
    WorkflowReadResponse:
      type: object
      properties:
        statuses:
          uniqueItems: true
          type: array
          description: List of statuses
          items:
            $ref: '#/components/schemas/JiraWorkflowStatus'
        workflows:
          uniqueItems: true
          type: array
          description: List of workflows
          items:
            $ref: '#/components/schemas/JiraWorkflow'
      additionalProperties: false
      description: Details of workflows and related statuses
    UpdateIssueSecuritySchemeRequestBean:
      type: object
      properties:
        name:
          maxLength: 60
          type: string
          description: The name of the security scheme scheme. Must be unique
          writeOnly: true
        description:
          maxLength: 255
          type: string
          description: The description of the security scheme scheme
          writeOnly: true
      additionalProperties: false
    JexpIssues:
      type: object
      properties:
        jql:
          description: The JQL query that specifies the set of issues available in
            the Jira expression
          allOf:
          - $ref: '#/components/schemas/JexpJqlIssues'
      additionalProperties: false
      description: The JQL specifying the issues available in the evaluated Jira expression
        under the `issues` context variable
    SecuritySchemePayload:
      type: object
      properties:
        name:
          type: string
          description: The name of the security scheme
          example: New Security Scheme
        description:
          type: string
          description: The description of the security scheme
          example: Newly created issue security scheme
        securityLevels:
          type: array
          description: The security levels for the security scheme
          items:
            $ref: '#/components/schemas/SecurityLevelPayload'
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for creating a security scheme. See https://support.atlassian.com/jira-cloud-administration/docs/configure-issue-security-schemes/
      nullable: true
    Errors:
      type: object
      properties:
        issueIsSubtask:
          $ref: '#/components/schemas/Error'
        issuesInArchivedProjects:
          $ref: '#/components/schemas/Error'
        issuesNotFound:
          $ref: '#/components/schemas/Error'
        issuesInUnlicensedProjects:
          $ref: '#/components/schemas/Error'
        userDoesNotHavePermission:
          $ref: '#/components/schemas/Error'
      additionalProperties: false
    Fields:
      type: object
      properties:
        retain:
          type: boolean
          description: If `true`, will try to retain original non-null issue field
            values on move.
          nullable: true
          writeOnly: true
          default: true
        type:
          type: string
          enum:
          - adf
          - raw
        value:
          type: object
      additionalProperties: false
      description: Can contain multiple field values of following types depending
        on `type` key
      writeOnly: true
      discriminator:
        propertyName: type
        mapping:
          mandatoryField: '#/components/schemas/MandatoryFieldValue'
          mandatoryFieldForADF: '#/components/schemas/MandatoryFieldValueForADF'
      anyOf:
      - $ref: '#/components/schemas/MandatoryFieldValue'
      - $ref: '#/components/schemas/MandatoryFieldValueForADF'
    TaskProgressBeanObject:
      required:
      - elapsedRuntime
      - id
      - lastUpdate
      - progress
      - self
      - status
      - submitted
      - submittedBy
      type: object
      properties:
        submittedBy:
          type: integer
          description: The ID of the user who submitted the task
          format: int64
        description:
          type: string
          description: The description of the task
        finished:
          type: integer
          description: A timestamp recording when the task was finished
          format: int64
        started:
          type: integer
          description: A timestamp recording when the task was started
          format: int64
        message:
          type: string
          description: Information about the progress of the task
        result:
          description: The result of the task execution
        submitted:
          type: integer
          description: A timestamp recording when the task was submitted
          format: int64
        lastUpdate:
          type: integer
          description: A timestamp recording when the task progress was last updated
          format: int64
        progress:
          type: integer
          description: The progress of the task, as a percentage complete
          format: int64
        self:
          type: string
          description: The URL of the task
          format: uri
        id:
          type: string
          description: The ID of the task
        elapsedRuntime:
          type: integer
          description: The execution time of the task, in milliseconds
          format: int64
        status:
          type: string
          description: The status of the task
          enum:
          - ENQUEUED
          - RUNNING
          - COMPLETE
          - FAILED
          - CANCEL_REQUESTED
          - CANCELLED
          - DEAD
      additionalProperties: false
      description: Details about a task
    PropertyKeys:
      type: object
      properties:
        keys:
          type: array
          description: Property key details
          readOnly: true
          items:
            $ref: '#/components/schemas/PropertyKey'
      additionalProperties: false
      description: List of property keys
    StatusDetails:
      type: object
      properties:
        description:
          type: string
          description: The description of the status.
          readOnly: true
        iconUrl:
          type: string
          description: The URL of the icon used to represent the status.
          readOnly: true
        id:
          type: string
          description: The ID of the status.
          readOnly: true
        name:
          type: string
          description: The name of the status.
          readOnly: true
        scope:
          description: The scope of the field.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Scope'
        self:
          type: string
          description: The URL of the status.
          readOnly: true
        statusCategory:
          description: The category assigned to the status.
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/StatusCategory'
      additionalProperties: true
      description: A status
    UiModificationIdentifiers:
      required:
      - id
      - self
      type: object
      properties:
        self:
          type: string
          description: The URL of the UI modification
          readOnly: true
        id:
          type: string
          description: The ID of the UI modification
          readOnly: true
      additionalProperties: false
      description: Identifiers for a UI modification
    OperationMessage:
      required:
      - message
      - statusCode
      type: object
      properties:
        message:
          type: string
          description: The human-readable message that describes the result
        statusCode:
          type: integer
          description: The status code of the response
      additionalProperties: false
      example:
        message: An example message.
        statusCode: 200
    JqlFunctionPrecomputationGetByIdResponse:
      type: object
      properties:
        precomputations:
          type: array
          description: The list of precomputations
          readOnly: true
          items:
            $ref: '#/components/schemas/JqlFunctionPrecomputationBean'
        notFoundPrecomputationIDs:
          type: array
          description: List of precomputations that were not found
          readOnly: true
          items:
            type: string
            readOnly: true
      additionalProperties: false
      description: Get precomputations by ID response
    User:
      type: object
      properties:
        avatarUrls:
          description: The avatars of the user
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/AvatarUrlsBean'
        displayName:
          type: string
          description: The display name of the user. Depending on the user’s privacy
            setting, this may return an alternative value
          readOnly: true
        accountType:
          type: string
          description: |-
            The user account type. Can take the following values:

             *  `atlassian` regular Atlassian user account
             *  `app` system account used for Connect applications and OAuth to represent external systems
             *  `customer` Jira Service Desk account representing an external service desk
          readOnly: true
          enum:
          - atlassian
          - app
          - customer
          - unknown
        active:
          type: boolean
          description: Whether the user is active
          readOnly: true
        groups:
          description: The groups that the user belongs to
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/SimpleListWrapperGroupName'
        timeZone:
          type: string
          description: The time zone specified in the user's profile. If the user's
            time zone is not visible to the current user (due to user's profile setting),
            or if a time zone has not been set, the instance's default time zone will
            be returned
          readOnly: true
        locale:
          type: string
          description: The locale of the user. Depending on the user’s privacy setting,
            this may be returned as null
          readOnly: true
        accountId:
          maxLength: 128
          type: string
          description: The account ID of the user, which uniquely identifies the user
            across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
            Required in requests
        emailAddress:
          type: string
          description: The email address of the user. Depending on the user’s privacy
            setting, this may be returned as null
          readOnly: true
        expand:
          type: string
          description: Expand options that include additional user details in the
            response
          readOnly: true
          xml:
            attribute: true
        name:
          type: string
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
        self:
          type: string
          description: The URL of the user
          format: uri
          readOnly: true
        key:
          type: string
          description: This property is no longer available and will be removed from
            the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
            for details
        applicationRoles:
          description: The application roles the user is assigned to
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/SimpleListWrapperApplicationRole'
      additionalProperties: false
      description: |-
        A user with details as permitted by the user's Atlassian Account privacy settings. However, be aware of these exceptions:

         *  User record deleted from Atlassian: This occurs as the result of a right to be forgotten request. In this case, `displayName` provides an indication and other parameters have default values or are blank (for example, email is blank).
         *  User record corrupted: This occurs as a results of events such as a server import and can only happen to deleted users. In this case, `accountId` returns *unknown* and all other parameters have fallback values.
         *  User record unavailable: This usually occurs due to an internal service outage. In this case, all parameters have fallback values
      xml:
        name: user
    ActorInputBean:
      type: object
      properties:
        groupId:
          type: array
          description: The ID of the group to add as a default actor. This parameter
            cannot be used with the `group` parameter This parameter accepts a comma-separated
            list. For example, `"groupId":["77f6ab39-e755-4570-a6ae-2d7a8df0bcb8",
            "0c011f85-69ed-49c4-a801-3b18d0f771bc"]`
          items:
            type: string
        user:
          type: array
          description: The account IDs of the users to add as default actors. This
            parameter accepts a comma-separated list. For example, `"user":["5b10a2844c20165700ede21g",
            "5b109f2e9729b51b54dc274d"]`
          items:
            type: string
        group:
          type: array
          description: The name of the group to add as a default actor. This parameter
            cannot be used with the `groupId` parameter. As a group's name can change,use
            of `groupId` is recommended. This parameter accepts a comma-separated
            list. For example, `"group":["project-admin", "jira-developers"]`
          items:
            type: string
      additionalProperties: false
    IssueArchivalSyncRequest:
      type: object
      properties:
        issueIdsOrKeys:
          type: array
          items:
            type: string
      additionalProperties: false
      description: List of Issue Ids Or Keys that are to be archived or unarchived
    Screen:
      type: object
      properties:
        scope:
          description: The scope of the screen
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the screen
          readOnly: true
        description:
          type: string
          description: The description of the screen
          readOnly: true
        id:
          type: integer
          description: The ID of the screen
          format: int64
          readOnly: true
      additionalProperties: false
      description: A screen
    PageBeanPriorityWithSequence:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/PriorityWithSequence'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    LinkGroup:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/LinkGroup'
        header:
          $ref: '#/components/schemas/SimpleLink'
        weight:
          type: integer
          format: int32
        links:
          type: array
          items:
            $ref: '#/components/schemas/SimpleLink'
        id:
          type: string
        styleClass:
          type: string
      additionalProperties: false
      description: Details a link group, which defines issue operations
    WorkflowCreate:
      maximum: 20
      required:
      - name
      - statuses
      - transitions
      type: object
      properties:
        startPointLayout:
          $ref: '#/components/schemas/WorkflowLayout'
        loopedTransitionContainerLayout:
          $ref: '#/components/schemas/WorkflowLayout'
        name:
          type: string
          description: The name of the workflow to create
        description:
          type: string
          description: The description of the workflow to create
        statuses:
          type: array
          description: The statuses associated with this workflow
          items:
            $ref: '#/components/schemas/StatusLayoutUpdate'
        transitions:
          type: array
          description: The transitions of this workflow
          items:
            $ref: '#/components/schemas/TransitionUpdateDTO'
      additionalProperties: false
      description: The details of the workflows to create
    ProjectUsagePage:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Page token for the next page of project usages
        values:
          type: array
          description: The list of projects
          items:
            $ref: '#/components/schemas/ProjectUsage'
      additionalProperties: false
      description: A page of projects
    JiraDurationField:
      required:
      - originalEstimateField
      type: object
      properties:
        originalEstimateField:
          type: string
      additionalProperties: false
    LegacyJackson1ListProject:
      type: array
      items:
        $ref: '#/components/schemas/Project'
    ProjectRoleDetails:
      type: object
      properties:
        default:
          type: boolean
          description: Whether this role is the default role for the project
          readOnly: true
        roleConfigurable:
          type: boolean
          description: Whether the roles are configurable for this project
          readOnly: true
        scope:
          description: The scope of the role. Indicated for roles associated with
            [next-gen projects](https://confluence.atlassian.com/x/loMyO)
          readOnly: true
          allOf:
          - $ref: '#/components/schemas/Scope'
        name:
          type: string
          description: The name of the project role
        admin:
          type: boolean
          description: Whether this role is the admin role for the project
          readOnly: true
        description:
          type: string
          description: The description of the project role
          readOnly: true
        self:
          type: string
          description: The URL the project role details
          format: uri
          readOnly: true
        id:
          type: integer
          description: The ID of the project role
          format: int64
          readOnly: true
        translatedName:
          type: string
          description: The translated name of the project role
      additionalProperties: false
      description: Details about a project role
    IssueBulkEditField:
      type: object
      properties:
        isRequired:
          type: boolean
          description: Indicates whether the field is mandatory for the operation
        multiSelectFieldOptions:
          type: array
          description: Specifies supported actions (like add, replace, remove) on
            multi-select fields via an enum
          items:
            type: string
            enum:
            - ADD
            - REMOVE
            - REPLACE
            - REMOVE_ALL
        fieldOptions:
          type: array
          description: A list of options related to the field, applicable in contexts
            where multiple selections are allowed
          items:
            $ref: '#/components/schemas/IssueBulkOperationsFieldOption'
        name:
          type: string
          description: The display name of the field
        description:
          type: string
          description: Description of the field
        searchUrl:
          type: string
          description: A URL to fetch additional data for the field
        id:
          type: string
          description: The unique ID of the field
        type:
          type: string
          description: The type of the field
        unavailableMessage:
          type: string
          description: A message indicating why the field is unavailable for editing
      additionalProperties: false
    ExpandPrioritySchemeBean:
      type: object
      properties:
        name:
          type: string
          description: The name of the priority scheme
          readOnly: true
        self:
          type: string
          description: The URL of the priority scheme
          readOnly: true
        id:
          type: string
          description: The ID of the priority scheme
          readOnly: true
      additionalProperties: false
      description: A priority scheme with less fields to be used in for an API expand
        response
    JiraRichTextField:
      required:
      - fieldId
      - richText
      type: object
      properties:
        richText:
          $ref: '#/components/schemas/JiraRichTextInput'
        fieldId:
          type: string
      additionalProperties: false
    StatusProjectIssueTypeUsageDTO:
      type: object
      properties:
        statusId:
          type: string
          description: The status ID
        projectId:
          type: string
          description: The project ID
        issueTypes:
          $ref: '#/components/schemas/StatusProjectIssueTypeUsagePage'
      additionalProperties: false
      description: The issue types using this status in a project
    IssueTypeHierarchyPayload:
      type: object
      properties:
        onConflict:
          type: string
          description: The conflict strategy to use when the issue type already exists.
            FAIL - Fail execution, this always needs to be unique; USE - Use the existing
            entity and ignore new entity parameters
          enum:
          - FAIL
          - USE
          - NEW
        hierarchyLevel:
          type: integer
          description: The hierarchy level of the issue type. 0, 1, 2, 3 .. n; Negative
            values for subtasks
          format: int32
        name:
          type: string
          description: The name of the issue type
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for creating an issue type hierarchy
      nullable: true
    IssueTypePayload:
      type: object
      properties:
        avatarId:
          type: integer
          description: The avatar ID of the issue type. Go to https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-avatars/\#api-rest-api-3-avatar-type-system-get
            to choose an avatarId existing in Jira
          format: int64
          nullable: true
        onConflict:
          type: string
          description: The conflict strategy to use when the issue type already exists.
            FAIL - Fail execution, this always needs to be unique; USE - Use the existing
            entity and ignore new entity parameters
          enum:
          - FAIL
          - USE
          - NEW
        hierarchyLevel:
          type: integer
          description: The hierarchy level of the issue type. 0, 1, 2, 3 .. n; Negative
            values for subtasks
          format: int32
        name:
          type: string
          description: The name of the issue type
        description:
          type: string
          description: The description of the issue type
          nullable: true
        pcri:
          $ref: '#/components/schemas/ProjectCreateResourceIdentifier'
      additionalProperties: false
      description: The payload for creating an issue type
      nullable: true
    ProjectInsight:
      type: object
      properties:
        totalIssueCount:
          type: integer
          description: Total issue count
          format: int64
          readOnly: true
        lastIssueUpdateTime:
          type: string
          description: The last issue update time
          format: date-time
          readOnly: true
      additionalProperties: false
      description: Additional details about a project
    PageWithCursorGetPlanResponseForPage:
      type: object
      properties:
        cursor:
          type: string
        total:
          type: integer
          format: int64
        last:
          type: boolean
        size:
          type: integer
          format: int32
        nextPageCursor:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/GetPlanResponseForPage'
      additionalProperties: false
    FieldConfigurationDetails:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: The name of the field configuration. Must be unique
          writeOnly: true
        description:
          maxLength: 255
          type: string
          description: The description of the field configuration
          writeOnly: true
      additionalProperties: false
      description: Details of a field configuration
    CustomFieldContextDefaultValue:
      type: object
      additionalProperties: false
      discriminator:
        propertyName: type
        mapping:
          datepicker: '#/components/schemas/CustomFieldContextDefaultValueDate'
          datetimepicker: '#/components/schemas/CustomFieldContextDefaultValueDateTime'
          float: '#/components/schemas/CustomFieldContextDefaultValueFloat'
          forge.datetime: '#/components/schemas/CustomFieldContextDefaultValueForgeDateTimeField'
          forge.group: '#/components/schemas/CustomFieldContextDefaultValueForgeGroupField'
          forge.group.list: '#/components/schemas/CustomFieldContextDefaultValueForgeMultiGroupField'
          forge.number: '#/components/schemas/CustomFieldContextDefaultValueForgeNumberField'
          forge.object: '#/components/schemas/CustomFieldContextDefaultValueForgeObjectField'
          forge.string: '#/components/schemas/CustomFieldContextDefaultValueForgeStringField'
          forge.string.list: '#/components/schemas/CustomFieldContextDefaultValueForgeMultiStringField'
          forge.user: '#/components/schemas/CustomFieldContextDefaultValueForgeUserField'
          forge.user.list: '#/components/schemas/CustomFieldContextDefaultValueForgeMultiUserField'
          grouppicker.multiple: '#/components/schemas/CustomFieldContextDefaultValueMultipleGroupPicker'
          grouppicker.single: '#/components/schemas/CustomFieldContextDefaultValueSingleGroupPicker'
          labels: '#/components/schemas/CustomFieldContextDefaultValueLabels'
          multi.user.select: '#/components/schemas/CustomFieldContextDefaultValueMultiUserPicker'
          option.cascading: '#/components/schemas/CustomFieldContextDefaultValueCascadingOption'
          option.multiple: '#/components/schemas/CustomFieldContextDefaultValueMultipleOption'
          option.single: '#/components/schemas/CustomFieldContextDefaultValueSingleOption'
          project: '#/components/schemas/CustomFieldContextDefaultValueProject'
          readonly: '#/components/schemas/CustomFieldContextDefaultValueReadOnly'
          single.user.select: '#/components/schemas/CustomFieldContextSingleUserPickerDefaults'
          textarea: '#/components/schemas/CustomFieldContextDefaultValueTextArea'
          textfield: '#/components/schemas/CustomFieldContextDefaultValueTextField'
          url: '#/components/schemas/CustomFieldContextDefaultValueURL'
          version.multiple: '#/components/schemas/CustomFieldContextDefaultValueMultipleVersionPicker'
          version.single: '#/components/schemas/CustomFieldContextDefaultValueSingleVersionPicker'
      oneOf:
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueCascadingOption'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueMultipleOption'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueSingleOption'
      - $ref: '#/components/schemas/CustomFieldContextSingleUserPickerDefaults'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueMultiUserPicker'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueSingleGroupPicker'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueMultipleGroupPicker'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueDate'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueDateTime'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueURL'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueProject'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueFloat'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueLabels'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueTextField'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueTextArea'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueReadOnly'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueSingleVersionPicker'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueMultipleVersionPicker'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueForgeStringField'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueForgeMultiStringField'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueForgeObjectField'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueForgeDateTimeField'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueForgeGroupField'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueForgeMultiGroupField'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueForgeNumberField'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueForgeUserField'
      - $ref: '#/components/schemas/CustomFieldContextDefaultValueForgeMultiUserField'
    JsonTypeBean:
      required:
      - type
      type: object
      properties:
        system:
          type: string
          description: If the field is a system field, the name of the field
          readOnly: true
        configuration:
          type: object
          additionalProperties:
            readOnly: true
          description: If the field is a custom field, the configuration of the field
          readOnly: true
        custom:
          type: string
          description: If the field is a custom field, the URI of the field
          readOnly: true
        type:
          type: string
          description: The data type of the field
          readOnly: true
        customId:
          type: integer
          description: If the field is a custom field, the custom ID of the field
          format: int64
          readOnly: true
        items:
          type: string
          description: When the data type is an array, the name of the field items
            within the array
          readOnly: true
      additionalProperties: false
      description: The schema of a field
    NotificationEvent:
      type: object
      properties:
        templateEvent:
          description: The template of the event. Only custom events configured by
            Jira administrators have template
          allOf:
          - $ref: '#/components/schemas/NotificationEvent'
        name:
          type: string
          description: The name of the event
        description:
          type: string
          description: The description of the event
        id:
          type: integer
          description: The ID of the event. The event can be a [Jira system event](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents)
            or a [custom event](https://confluence.atlassian.com/x/AIlKLg)
          format: int64
      additionalProperties: false
      description: Details about a notification event
    PageBeanBulkContextualConfiguration:
      type: object
      properties:
        total:
          type: integer
          description: The number of items returned
          format: int64
          readOnly: true
        isLast:
          type: boolean
          description: Whether this is the last page
          readOnly: true
        maxResults:
          type: integer
          description: The maximum number of items that could be returned
          format: int32
          readOnly: true
        nextPage:
          type: string
          description: If there is another page of results, the URL of the next page
          format: uri
          readOnly: true
        values:
          type: array
          description: The list of items
          readOnly: true
          items:
            $ref: '#/components/schemas/BulkContextualConfiguration'
        self:
          type: string
          description: The URL of the page
          format: uri
          readOnly: true
        startAt:
          type: integer
          description: The index of the first item returned
          format: int64
          readOnly: true
      additionalProperties: false
      description: A page of items
    CreatePriorityDetails:
      required:
      - name
      - statusColor
      type: object
      properties:
        avatarId:
          type: integer
          description: The ID for the avatar for the priority. Either the iconUrl
            or avatarId must be defined, but not both. This parameter is nullable
            and will become mandatory once the iconUrl parameter is deprecated.
          format: int64
          writeOnly: true
        description:
          maxLength: 255
          type: string
          description: The description of the priority.
          nullable: true
          writeOnly: true
        iconUrl:
          maxLength: 255
          type: string
          description: The URL of an icon for the priority. Accepted protocols are
            HTTP and HTTPS. Built in icons can also be used. Either the iconUrl or
            avatarId must be defined, but not both.
          nullable: true
          writeOnly: true
          enum:
          - /images/icons/priorities/blocker.png
          - /images/icons/priorities/critical.png
          - /images/icons/priorities/high.png
          - /images/icons/priorities/highest.png
          - /images/icons/priorities/low.png
          - /images/icons/priorities/lowest.png
          - /images/icons/priorities/major.png
          - /images/icons/priorities/medium.png
          - /images/icons/priorities/minor.png
          - /images/icons/priorities/trivial.png
          - /images/icons/priorities/blocker_new.png
          - /images/icons/priorities/critical_new.png
          - /images/icons/priorities/high_new.png
          - /images/icons/priorities/highest_new.png
          - /images/icons/priorities/low_new.png
          - /images/icons/priorities/lowest_new.png
          - /images/icons/priorities/major_new.png
          - /images/icons/priorities/medium_new.png
          - /images/icons/priorities/minor_new.png
          - /images/icons/priorities/trivial_new.png
        name:
          maxLength: 60
          type: string
          description: The name of the priority. Must be unique.
          writeOnly: true
        statusColor:
          type: string
          description: The status color of the priority in 3-digit or 6-digit hexadecimal
            format.
          writeOnly: true
      additionalProperties: true
      description: Details of an issue priority
    DetailedErrorCollection:
      type: object
      properties:
        errorMessages:
          type: array
          description: The list of error messages produced by this operation. For
            example, "input parameter 'key' must be provided"
          items:
            type: string
        details:
          type: object
          additionalProperties: {
            }
          description: Map of objects representing additional details for an error
        errors:
          type: object
          additionalProperties:
            type: string
          description: 'The list of errors by parameter returned by the operation.
            For example,"projectKey": "Project keys must start with an uppercase letter,
            followed by one or more uppercase alphanumeric characters."'
      additionalProperties: false
    WorkflowIDs:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the workflow
        entityId:
          type: string
          description: The entity ID of the workflow
      additionalProperties: false
      description: The classic workflow identifiers
    WorkflowStatusLayoutPayload:
      type: object
      properties:
        x:
          type: number
          description: The x coordinate of the status
          format: double
          example: 1
        y:
          type: number
          description: The y coordinate of the status
          format: double
          example: 2
      additionalProperties: false
      description: The layout of the workflow status
  securitySchemes:
    OAuth2:
      type: oauth2
      description: OAuth2 scopes for Jira
      flows:
        authorizationCode:
          authorizationUrl: https://auth.atlassian.com/authorize
          tokenUrl: https://auth.atlassian.com/oauth/token
          scopes:
            delete:async-task:jira: Delete asynchronous task.
            delete:attachment:jira: Delete issue attachments.
            delete:avatar:jira: Delete system and custom avatars.
            delete:comment.property:jira: Delete issue comment properties.
            delete:comment:jira: Delete issue comments.
            delete:dashboard.property:jira: Delete dashboard properties.
            delete:dashboard:jira: Delete dashboards.
            delete:field-configuration-scheme:jira: Delete field configuration schemes.
            delete:field-configuration:jira: Delete field configurations.
            delete:field.option:jira: Delete field options.
            delete:field:jira: Delete fields.
            delete:filter.column:jira: Delete filter columns.
            delete:filter:jira: Delete filters.
            delete:group:jira: Delete user groups.
            delete:issue-link-type:jira: Delete issue link types.
            delete:issue-link:jira: Delete issue links.
            delete:issue-type-scheme:jira: Delete issue type schemes.
            delete:issue-type-screen-scheme:jira: Delete issue type screen schemes.
            delete:issue-type.property:jira: Delete issue type properties.
            delete:issue-type:jira: Delete issue types.
            delete:issue-worklog.property:jira: Delete issue worklog properties.
            delete:issue-worklog:jira: Delete issue worklogs.
            delete:issue.property:jira: Delete issue properties.
            delete:issue.remote-link:jira: Delete issue remote links.
            delete:issue:jira: Delete issues.
            delete:permission-scheme:jira: Delete permission schemes.
            delete:permission:jira: Delete permissions.
            delete:project-category:jira: Delete project categories.
            delete:project-role:jira: Delete project roles.
            delete:project-version:jira: Delete project versions.
            delete:project.avatar:jira: Delete project avatars.
            delete:project.component:jira: Delete project components.
            delete:project.property:jira: Delete project properties.
            delete:project:jira: Delete projects and their details, such as issue
              types, project lead, and avatars.
            delete:screen-scheme:jira: Delete screen schemes.
            delete:screen-tab:jira: Delete screen tabs.
            delete:screen:jira: Delete screens.
            delete:screenable-field:jira: Delete screenable fields.
            delete:user-configuration:jira: Delete user configurations.
            delete:user.property:jira: Delete user properties.
            delete:webhook:jira: Delete webhooks.
            delete:workflow-scheme:jira: Delete workflow schemes.
            delete:workflow.property:jira: Delete workflow properties.
            delete:workflow:jira: Delete workflows.
            manage:jira-configuration: Configure Jira settings that require the Jira
              administrators permission, for example, create projects and custom fields,
              view workflows, manage issue link types.
            manage:jira-project: Create and edit project settings and create new project-level
              objects, for example, versions, components.
            manage:jira-webhook: Manage Jira webhooks. Enables an OAuth app to register
              and unregister dynamic webhooks in Jira. It also provides for fetching
              of registered webhooks.
            read:app-data:jira: Read app data.
            read:application-role:jira: View application roles.
            read:attachment:jira: View issue attachments.
            read:audit-log:jira: View audit logs.
            read:avatar:jira: View system and custom avatars.
            read:comment.property:jira: View issue comment properties.
            read:comment:jira: View issue comments.
            read:custom-field-contextual-configuration:jira: Read custom field contextual
              configurations.
            read:dashboard.property:jira: View dashboard properties.
            read:dashboard:jira: View dashboards.
            read:email-address:jira: View email addresses of all users regardless
              of the user's profile visibility settings.
            read:field-configuration-scheme:jira: View field configuration schemes.
            read:field-configuration:jira: Read field configurations.
            read:field.default-value:jira: View field default values.
            read:field.option:jira: View field options.
            read:field.options:jira: Read field options.
            read:field:jira: View fields.
            read:filter.column:jira: View filter columns.
            read:filter.default-share-scope:jira: View filter default share scopes.
            read:filter:jira: View filters.
            read:group:jira: View user groups.
            read:instance-configuration:jira: View instance configurations.
            read:issue-details:jira: View issue details.
            read:issue-event:jira: Read issue events.
            read:issue-field-values:jira: View issue field valueses.
            read:issue-link-type:jira: View issue link types.
            read:issue-link:jira: View issue links.
            read:issue-meta:jira: View issue meta.
            read:issue-security-level:jira: View issue security levels.
            read:issue-security-scheme:jira: View issue security schemes.
            read:issue-status:jira: View issue statuses.
            read:issue-type-hierarchy:jira: Read issue type hierarchies.
            read:issue-type-scheme:jira: View issue type schemes.
            read:issue-type-screen-scheme:jira: View issue type screen schemes.
            read:issue-type.property:jira: View issue type properties.
            read:issue-type:jira: View issue types.
            read:issue-worklog.property:jira: View issue worklog properties.
            read:issue-worklog:jira: View issue worklogs.
            read:issue.changelog:jira: View issue changelogs.
            read:issue.property:jira: View issue properties.
            read:issue.remote-link:jira: View issue remote links.
            read:issue.time-tracking:jira: View issue time trackings.
            read:issue.transition:jira: View issue transitions.
            read:issue.vote:jira: View issue votes.
            read:issue.votes:jira: View issue voteses.
            read:issue.watcher:jira: View issue watchers.
            read:issue:jira: View issues.
            read:jira-expressions:jira: View jira expressions.
            read:jira-user: View user information in Jira that you have access to,
              including usernames, email addresses, and avatars.
            read:jira-work: Read project and issue data. Search for issues and objects
              associated with issues (such as attachments and worklogs).
            read:jql:jira: View JQL.
            read:label:jira: View labels.
            read:license:jira: View licenses.
            read:notification-scheme:jira: View notification schemes.
            read:permission-scheme:jira: View permission schemes.
            read:permission:jira: View permissions.
            read:priority:jira: View priorities.
            read:project-category:jira: View project categories.
            read:project-role:jira: View project roles.
            read:project-type:jira: View project types.
            read:project-version:jira: View project versions.
            read:project.avatar:jira: Read project avatars.
            read:project.component:jira: View project components.
            read:project.email:jira: View project emails.
            read:project.feature:jira: Read project features.
            read:project.property:jira: View project properties.
            read:project:jira: View projects.
            read:resolution:jira: View resolutions.
            read:role:jira: View roles.
            read:screen-field:jira: View screen fields.
            read:screen-scheme:jira: View screen schemes.
            read:screen-tab:jira: View screen tabs.
            read:screen:jira: View screens.
            read:screenable-field:jira: View screenable fields.
            read:status:jira: View statuses.
            read:user-configuration:jira: View user configurations.
            read:user.columns:jira: View user columnses.
            read:user.property:jira: View user properties.
            read:user:jira: View users.
            read:webhook:jira: View webhooks.
            read:workflow-scheme:jira: View workflow schemes.
            read:workflow.property:jira: View workflow properties.
            read:workflow:jira: View workflows.
            send:notification:jira: Send notifications.
            validate:jql:jira: Validate JQL.
            write:app-data:jira: Write app data.
            write:attachment:jira: Create and update issue attachments.
            write:avatar:jira: Create and update system and custom avatars.
            write:comment.property:jira: Create and update issue comment properties.
            write:comment:jira: Create and update issue comments.
            write:custom-field-contextual-configuration:jira: Save custom field contextual
              configurations.
            write:dashboard.property:jira: Create and update dashboard properties.
            write:dashboard:jira: Create and update dashboards.
            write:field-configuration-scheme:jira: Create and update field configuration
              schemes.
            write:field-configuration:jira: Save field configurations.
            write:field.default-value:jira: Create and update field default values.
            write:field.option:jira: Create and update field options.
            write:field:jira: Create and update fields.
            write:filter.column:jira: Create and update filter columns.
            write:filter.default-share-scope:jira: Create and update filter default
              share scopes.
            write:filter:jira: Create and update filters.
            write:group:jira: Create and update user groups.
            write:instance-configuration:jira: Create and update instance configurations.
            write:issue-link-type:jira: Create and update issue link types.
            write:issue-link:jira: Create and update issue links.
            write:issue-type-scheme:jira: Create and update issue type schemes.
            write:issue-type-screen-scheme:jira: Create and update issue type screen
              schemes.
            write:issue-type.property:jira: Create and update issue type properties.
            write:issue-type:jira: Create and update issue types.
            write:issue-worklog.property:jira: Create and update issue worklog properties.
            write:issue-worklog:jira: Create and update issue worklogs.
            write:issue.property:jira: Create and update issue properties.
            write:issue.remote-link:jira: Create and update issue remote links.
            write:issue.time-tracking:jira: Create and update issue time trackings.
            write:issue.vote:jira: Create and update issue votes.
            write:issue.watcher:jira: Create and update issue watchers.
            write:issue:jira: Create and update issues.
            write:jira-work: Create and edit issues in Jira, post comments, create
              worklogs, and delete issues.
            write:permission-scheme:jira: Create and update permission schemes.
            write:permission:jira: Create and update permissions.
            write:project-category:jira: Create and update project categories.
            write:project-role:jira: Create and update project roles.
            write:project-version:jira: Create and update project versions.
            write:project.avatar:jira: Create and update project avatars.
            write:project.component:jira: Create and update project components.
            write:project.email:jira: Create and update project emails.
            write:project.feature:jira: Save project features.
            write:project.property:jira: Create and update project properties.
            write:project:jira: Create and update projects.
            write:screen-scheme:jira: Create and update screen schemes.
            write:screen-tab:jira: Create and update screen tabs.
            write:screen:jira: Create and update screens.
            write:screenable-field:jira: Create and update screenable fields.
            write:user-configuration:jira: Create and update user configurations.
            write:user.property:jira: Create and update user properties.
            write:webhook:jira: Create and update webhooks.
            write:workflow-scheme:jira: Create and update workflow schemes.
            write:workflow.property:jira: Create and update workflow properties.
            write:workflow:jira: Create and update workflows.
    basicAuth:
      type: http
      description: You can access this resource via basic auth.
      scheme: basic
x-atlassian-narrative:
  documents:
  - anchor: about
    body: "The Jira REST API enables you to interact with Jira programmatically. Use\
      \ this API to \n[build apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/),\
      \ script interactions with \nJira, or develop any other type of integration.\
      \ This page documents the REST resources available in Jira Cloud, including\
      \ \nthe HTTP response codes and example requests and responses."
    title: About
  - anchor: version
    body: |
      This documentation is for **version 3** of the Jira Cloud platform REST API, which is the latest
      version. [Version 2](https://developer.atlassian.com/cloud/jira/platform/rest/v2/) and
      version 3 of the API offer the same collection of operations. However, version 3 provides support for
      the [Atlassian Document Format](https://developer.atlassian.com/cloud/jira/platform/apis/document/structure/)
      (ADF) in:
      - `body` in comments, including where comments are used in issue, issue link, and transition resources.
      - `comment` in worklogs.
      - `description` and `environment` fields in issues.
      - `textarea` type custom fields (multi-line text fields) in issues. Single line custom fields
        (`textfield`) accept a string and don't handle Atlassian Document Format content.
    title: Version
  - anchor: authentication
    body: "### Forge apps\n\nFor Forge apps, [REST API scopes](https://developer.atlassian.com/cloud/jira/platform/scopes-for-oauth-2-3LO-and-forge-apps/)\
      \ \nare used when authenticating with Jira Cloud platform. See [Add scopes to\
      \ call an Atlassian REST API](https://developer.atlassian.com/platform/forge/add-scopes-to-call-an-atlassian-rest-api/)\
      \ for more details.\n\nThe URIs for Forge app REST API calls have this structure:\n\
      \n`/rest/api/3/<resource-name>`\n\nFor example, `/rest/api/3/issue/DEMO-1`\n\
      \n### Connect apps\n\nFor Connect apps, authentication (JWT-based) is built\
      \ into the Connect libraries. Authorization is implemented using either \nscopes\
      \ (shown as _App scope required_ for operations on this page) or user impersonation.\
      \ See \n[Security for Connect apps](https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/)\
      \ \nfor details.\n\nThe URIs for Connect app REST API calls have this structure:\n\
      \n`https://<site-url>/rest/api/3/<resource-name>`\n\nFor example, `https://your-domain.atlassian.net/rest/api/3/issue/DEMO-1`\n\
      \n### Other integrations\n\nFor integrations that are not Forge or Connect apps,\
      \ use OAuth 2.0 authorization code grants (3LO) for security \n(3LO scopes are\
      \ shown as for operations _OAuth scopes required_). See \n[OAuth 2.0 (3LO) apps](https://developer.atlassian.com/cloud/jira/platform/oauth-2-3lo-apps/)\
      \ \nfor details.\n\nThe URIs for OAuth 2.0 (3LO) app REST API calls have this\
      \ structure:\n\n`https://api.atlassian.com/ex/jira/<cloudId>/rest/api/3/<resource-name>`\n\
      \nFor example, `https://api.atlassian.com/ex/jira/35273b54-3f06-40d2-880f-dd28cf8daafa/rest/api/3/issue/DEMO-1`\n\
      \n### Ad-hoc API calls\n\nFor personal scripts, bots, and ad-hoc execution of\
      \ the REST APIs use basic authentication. See [Basic auth for REST APIs](https://developer.atlassian.com/cloud/jira/platform/basic-auth-for-rest-apis/)\
      \ for details. \n\nThe URIs for basic authentication REST API calls have this\
      \ structure:\n\n`https://<site-url>/rest/api/3/<resource-name>`\n\nFor example,\
      \ `https://your-domain.atlassian.net/rest/api/3/issue/DEMO-1`\n"
    title: Authentication and authorization
  - anchor: permissions
    body: "### Operation permissions\n\nMost operations in this API require permissions.\
      \ The calling user must have the required permissions for an operation to \n\
      use it. Note that for Connect apps, the app user must have the required permissions\
      \ for the operation and the app must \nhave scopes that permit the operation.\n\
      \nA permission can be granted to a group, project role, or issue role that the\
      \ user is a member of, or granted directly to a user. \nSee [Permissions overview](https://confluence.atlassian.com/x/FQiiLQ)\
      \ for details. The most common permissions are:\n\n- **Administer the Cloud\
      \ site**: Users in the _site-admins_ group have this \npermission. See [Manage\
      \ groups](https://confluence.atlassian.com/x/24xjL) for details.\n- **Administer\
      \ Jira**: Granted by the _Jira Administrators_ global permission. There is a\
      \ default group for this permission. \nSee [Manage groups](https://confluence.atlassian.com/x/24xjL)\
      \ and [Managing global permissions](https://confluence.atlassian.com/x/x4dKLg)\
      \ for details.\n- **Administer a project in Jira**: Granted by the _Administer\
      \ projects_ project permission for a project. This can be \ngranted to a user,\
      \ a group, a project role, and more. \nSee [Managing project permissions](https://confluence.atlassian.com/x/yodKLg)\
      \ for details.\n- **Access a project in Jira**: Granted by the _Browse projects_\
      \ project permission for a project. This can be \ngranted to a user, a group,\
      \ a project role, and more. \nSee [Managing project permissions](https://confluence.atlassian.com/x/yodKLg)\
      \ for details.\n- **Access Jira**: Granted by the _Jira Users_ global permission.\
      \ Users in the default product access group (for example, \n_jira-software-users-acmesite_)\
      \ have this permission. \nSee [Manage groups](https://confluence.atlassian.com/x/24xjL)\
      \ and \n[Managing global permissions](https://confluence.atlassian.com/x/x4dKLg)\
      \ for details.\n\n### Anonymous access\n\nSome operations provide support for\
      \ anonymous access. However, anonymous access is only available if \nthe Jira\
      \ permission needed to access the object or records returned by the operation\
      \ is granted to \nthe _Public_ group. See [Allowing anonymous access to your\
      \ project](https://confluence.atlassian.com/x/GDxxLg) \nfor details.\n\nIf an\
      \ operation is called anonymously and anonymous access is not available, the\
      \ operation will return \nan error. Note that not all operations that correspond\
      \ to objects that can be given public access \nprovide for anonymous access.\n"
    title: Permissions
  - anchor: expansion
    body: "### Expansion\n\nThe Jira REST API uses resource expansion, which means\
      \ that some parts of a resource are not returned unless specified \nin the request.\
      \ This simplifies responses and minimizes network traffic.\n\nTo expand part\
      \ of a resource in a request, use the expand query parameter and specify the\
      \ object(s) to be expanded. \nIf you need to expand nested objects, use the\
      \ `.` dot notation. If you need to expand multiple objects, use a \ncomma-separated\
      \ list. \n\nFor example, the following request expands the `names` and `renderedFields`\
      \ properties for the _JRACLOUD-34423_ issue:\n\n`GET issue/JRACLOUD-34423?expand=names,renderedFields`\n\
      \nTo discover which object can be expanded, refer to the `expand` property in\
      \ the object. \nIn the JSON example below, the resource declares `widgets` as\
      \ expandable.\n\n```json\n{\n  \"expand\": \"widgets\", \n  \"self\": \"https://your-domain.atlassian.net/rest/api/3/resource/KEY-1\"\
      , \n  \"widgets\": {\n    \"widgets\": [],\n    \"size\": 5\n   }\n}\n```\n\n\
      ### Pagination\n\nThe Jira REST API uses pagination to improve performance.\
      \ Pagination is enforced for operations that could return a large \ncollection\
      \ of items. When you make a request to a paginated resource, the response wraps\
      \ the returned array of values in \na JSON object with paging metadata. For\
      \ example:\n\n```json\n{\n    \"startAt\" : 0,\n    \"maxResults\" : 10,\n \
      \   \"total\": 200,\n    \"isLast\": false,\n    \"values\": [\n        { /*\
      \ result 0 */ },\n        { /* result 1 */ },\n        { /* result 2 */ }\n\
      \    ]\n}\n```\n\n*   `startAt` is the index of the first item returned in the\
      \ page.\n*   `maxResults` is the maximum number of items that a page can return.\
      \ Each operation can have a different limit for\n    the number of items returned,\
      \ and these limits may change without notice. To find the maximum number of\
      \ items \n    that an operation could return, set `maxResults` to a large number—\
      for example, over 1000—and if the returned value of `maxResults` is less than\
      \ the requested value, the returned value is the maximum.\n*    `total` is the\
      \ total number of items contained in all pages. This number **_may change_**\
      \ as the client \nrequests the subsequent pages, therefore the client should\
      \ always assume that the requested page can be empty. Note \nthat this property\
      \ is not returned for all operations.\n*   `isLast` indicates whether the page\
      \ returned is the last one. Note that this property is not returned for all\
      \ operations.\n\n### Ordering\n\nSome operations support ordering the elements\
      \ of a response by a field. Check the documentation for the operation to \n\
      confirm whether ordering of a response is supported and which fields can be\
      \ used. Responses are listed in ascending order \nby default. You can change\
      \ the order using the `orderby` query parameter with a `-` or `+` symbol. For\
      \ example:\n\n*   `?orderBy=name` to order by `name` field ascending.\n*   `?orderBy=+name`\
      \ to order by `name` field ascending.\n*   `?orderBy=-name` to order by `name`\
      \ field descending.\n\n\n"
    title: Expansion, pagination, and ordering
  - anchor: timestamps
    body: |
      By default, top-level timestamps (e.g. updated and created) are returned in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) format, in the system default user time zone.

      To return date time data in the logged in user's timezone, please refer to `renderedFields` property under the `expand` query parameter in relevant APIs.
    title: Timestamps
  - anchor: special-request-headers
    body: |-
      The following request and response headers define important metadata for the Jira Cloud REST API resources.

      -   `X-Atlassian-Token` (request): Operations that accept multipart/form-data must include the `X-Atlassian-Token: no-check`
      header in requests. Otherwise the request is blocked by cross-site request forgery (CSRF/XSRF) protection.
      -   `X-Force-Accept-Language` (request): controls how the standard HTTP `Accept-Language` header is processed.
      By default `Accept-Language` is ignored and the response is in the language configured in the user's profile or,
      when no language is configured for the user, the default Jira instance language. For the response to recognize
      `Accept-Language` send `X-Force-Accept-Language = true` as well. If `Accept-Language` requests a language that Jira
      can return the response is in that language, otherwise Jira returns the response in the default language. If
      `Accept-Language` is not specified the response is in the default language.
      -   `X-AAccountId` (response): This response header contains the Atlassian account ID of the authenticated user.
    title: Special headers
  - anchor: anonymous-operations
    body: " Jira provides for all permissions, except the [global permission](https://confluence.atlassian.com/x/x4dKLg)\
      \ Administer Jira, to be assigned to *Anyone*. Once a permission is assigned\
      \ to *Anyone*, anyone knowing a project's URL is able to use the features in\
      \ Jira enabled by the permission. However, the Jira REST API does not enable\
      \ anonymous access for operations by default. This means that an anonymous user\
      \ who may be able to perform an action through Jira, may not be able to perform\
      \ the same action where it's enabled by the REST API. \n\n The operations that\
      \ provide anonymous access are annotated \"This operation can be accessed anonymously.\""
    title: Anonymous operations
  - anchor: async-operations
    body: "Some Jira REST API operations may trigger long-running or computationally\
      \ expensive tasks. In these cases, the operation \nwill schedule an asynchronous\
      \ task and return a `303 (See Other)` response, indicating the location of the\
      \ queued task \nin the `Location` header. You can query this task to get progress\
      \ updates.\n\nWhen the task finishes, the response object will contain the `result`\
      \ field. The content of the field is specific to the \noperation that created\
      \ the task. Refer to the operation’s documentation for more information.\n\n\
      Note that asynchronous tasks are not guaranteed to be run in order. In other\
      \ words, if you need your tasks to execute \nin a certain order, you should\
      \ start a task only after the prerequisite task(s) have finished."
    title: Asynchronous operations
  - anchor: experimental
    body: "Features and methods marked as experimental may change without notice.\
      \ Feedback on experimental functionality is welcome. \nReport issues to [Developer\
      \ and Marketplace support](https://developer.atlassian.com/support) (preferred)\
      \ or use the \n**Give docs feedback** link at the top of this page. \n"
    title: Experimental features
  - anchor: status-codes
    body: "The Jira Cloud platform REST API uses the [standard HTTP status codes](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).\n\
      \nOperations that return an error status code may also return a response body\
      \ containing details of the error or errors. \nThe schema for the response body\
      \ is shown below:\n\n\n```json\n{\n  \"id\": \"https://docs.atlassian.com/jira/REST/schema/error-collection#\"\
      ,\n  \"title\": \"Error Collection\",\n  \"type\": \"object\",\n  \"properties\"\
      : {\n    \"errorMessages\": {\n      \"type\": \"array\",\n      \"items\":\
      \ {\n        \"type\": \"string\"\n      }\n    },\n    \"errors\": {\n    \
      \  \"type\": \"object\",\n      \"patternProperties\": {\n        \".+\": {\n\
      \          \"type\": \"string\"\n        }\n      },\n      \"additionalProperties\"\
      : false\n    },\n    \"status\": { \n      \"type\": \"integer\"\n    }\n  },\n\
      \  \"additionalProperties\": false\n}\n```"
    title: Status codes
